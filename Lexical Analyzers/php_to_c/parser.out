Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> top_statement_list
Rule 2     top_statement_list -> top_statement_list top_statement
Rule 3     top_statement_list -> empty
Rule 4     top_statement -> statement
Rule 5     top_statement -> function_declaration_statement
Rule 6     top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON
Rule 7     top_statement -> CONST constant_declarations SEMI_COLON
Rule 8     constant_declarations -> constant_declarations COMMA constant_declaration
Rule 9     constant_declarations -> constant_declaration
Rule 10    constant_declaration -> IDENTIFIER EQUALS static_expr
Rule 11    inner_statement_list -> inner_statement_list inner_statement
Rule 12    inner_statement_list -> empty
Rule 13    inner_statement -> statement
Rule 14    inner_statement -> function_declaration_statement
Rule 15    inner_statement -> YIELD SEMI_COLON
Rule 16    inner_statement -> YIELD expr SEMI_COLON
Rule 17    statement -> LBRACE inner_statement_list RBRACE
Rule 18    statement -> IF LPAREN expr RPAREN statement elseif_list
Rule 19    statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement
Rule 20    statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
Rule 21    statement -> WHILE LPAREN expr RPAREN while_statement
Rule 22    statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON
Rule 23    statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
Rule 24    statement -> SWITCH LPAREN expr RPAREN switch_case_list
Rule 25    statement -> BREAK SEMI_COLON
Rule 26    statement -> BREAK expr SEMI_COLON
Rule 27    statement -> CONTINUE SEMI_COLON
Rule 28    statement -> CONTINUE expr SEMI_COLON
Rule 29    statement -> RETURN SEMI_COLON
Rule 30    statement -> RETURN expr SEMI_COLON
Rule 31    statement -> GLOBAL global_var_list SEMI_COLON
Rule 32    statement -> STATIC static_var_list SEMI_COLON
Rule 33    statement -> ECHO echo_expr_list SEMI_COLON
Rule 34    statement -> INLINE_HTML
Rule 35    statement -> expr SEMI_COLON
Rule 36    statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON
Rule 37    statement -> SEMI_COLON
Rule 38    elseif_list -> empty
Rule 39    elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement
Rule 40    new_elseif_list -> empty
Rule 41    new_elseif_list -> new_elseif_list ELSEIF LPAREN expr RPAREN COLON inner_statement_list
Rule 42    new_else_single -> empty
Rule 43    new_else_single -> ELSE COLON inner_statement_list
Rule 44    while_statement -> statement
Rule 45    while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON
Rule 46    for_expr -> empty
Rule 47    for_expr -> non_empty_for_expr
Rule 48    non_empty_for_expr -> non_empty_for_expr COMMA expr
Rule 49    non_empty_for_expr -> expr
Rule 50    for_statement -> statement
Rule 51    for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON
Rule 52    switch_case_list -> LBRACE case_list RBRACE
Rule 53    switch_case_list -> LBRACE SEMI_COLON case_list RBRACE
Rule 54    switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON
Rule 55    switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON
Rule 56    case_list -> empty
Rule 57    case_list -> case_list_no_default CASE expr case_separator inner_statement_list
Rule 58    case_list -> case_list_no_default DEFAULT case_separator inner_statement_list
Rule 59    case_list_no_default -> empty
Rule 60    case_list_no_default -> case_list_no_default CASE expr case_separator inner_statement_list
Rule 61    case_separator -> COLON
Rule 62    case_separator -> SEMI_COLON
Rule 63    global_var_list -> global_var_list COMMA global_var
Rule 64    global_var_list -> global_var
Rule 65    global_var -> VARIABLE
Rule 66    global_var -> DOLLAR variable
Rule 67    global_var -> DOLLAR LBRACE expr RBRACE
Rule 68    static_var_list -> static_var_list COMMA static_var
Rule 69    static_var_list -> static_var
Rule 70    static_var -> VARIABLE EQUALS static_scalar
Rule 71    static_var -> VARIABLE
Rule 72    echo_expr_list -> echo_expr_list COMMA expr
Rule 73    echo_expr_list -> expr
Rule 74    unset_variables -> unset_variables COMMA unset_variable
Rule 75    unset_variables -> unset_variable
Rule 76    unset_variable -> variable
Rule 77    function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
Rule 78    is_reference -> AND
Rule 79    is_reference -> empty
Rule 80    parameter_list -> non_empty_parameter_list
Rule 81    parameter_list -> empty
Rule 82    non_empty_parameter_list -> non_empty_parameter_list COMMA parameter
Rule 83    non_empty_parameter_list -> parameter
Rule 84    parameter -> VARIABLE
Rule 85    parameter -> AND VARIABLE
Rule 86    parameter -> VARIABLE EQUALS static_scalar
Rule 87    parameter -> AND VARIABLE EQUALS static_scalar
Rule 88    expr -> variable
Rule 89    expr -> variable EQUALS expr
Rule 90    expr -> variable EQUALS AND expr
Rule 91    expr -> CLONE expr
Rule 92    expr -> LIST LPAREN assignment_list RPAREN EQUALS expr
Rule 93    assignment_list -> assignment_list COMMA assignment_list_element
Rule 94    assignment_list -> assignment_list_element
Rule 95    assignment_list_element -> variable
Rule 96    assignment_list_element -> empty
Rule 97    assignment_list_element -> LIST LPAREN assignment_list RPAREN
Rule 98    variable -> base_variable_with_function_calls
Rule 99    base_variable_with_function_calls -> base_variable
Rule 100   base_variable_with_function_calls -> function_call
Rule 101   function_call -> IDENTIFIER fucntion_call_body
Rule 102   fucntion_call_body -> LPAREN function_call_parameter_list RPAREN
Rule 103   function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN
Rule 104   base_variable -> compound_variable
Rule 105   expr -> expr LBRACE dim_offset RBRACE
Rule 106   compound_variable -> VARIABLE
Rule 107   compound_variable -> DOLLAR LBRACE expr RBRACE
Rule 108   dim_offset -> expr
Rule 109   dim_offset -> empty
Rule 110   variable_without_objects -> compound_variable
Rule 111   expr -> scalar
Rule 112   expr -> ARRAY LPAREN array_pair_list RPAREN
Rule 113   expr -> LBRACKET array_pair_list RBRACKET
Rule 114   array_pair_list -> empty
Rule 115   array_pair_list -> non_empty_array_pair_list possible_comma
Rule 116   non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW AND variable
Rule 117   non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW expr
Rule 118   non_empty_array_pair_list -> expr DOUBLE_ARROW AND variable
Rule 119   non_empty_array_pair_list -> expr DOUBLE_ARROW expr
Rule 120   possible_comma -> empty
Rule 121   possible_comma -> COMMA
Rule 122   function_call_parameter_list -> function_call_parameter_list COMMA function_call_parameter
Rule 123   function_call_parameter_list -> function_call_parameter
Rule 124   function_call_parameter_list -> empty
Rule 125   function_call_parameter -> expr
Rule 126   function_call_parameter -> AND variable
Rule 127   expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
Rule 128   expr -> variable PLUS_EQUAL expr
Rule 129   expr -> variable MINUS_EQUAL expr
Rule 130   expr -> variable MUL_EQUAL expr
Rule 131   expr -> variable DIV_EQUAL expr
Rule 132   expr -> variable CONCAT_EQUAL expr
Rule 133   expr -> variable MOD_EQUAL expr
Rule 134   expr -> variable AND_EQUAL expr
Rule 135   expr -> variable OR_EQUAL expr
Rule 136   expr -> variable XOR_EQUAL expr
Rule 137   expr -> variable SL_EQUAL expr
Rule 138   expr -> variable SR_EQUAL expr
Rule 139   expr -> expr BOOLEAN_AND expr
Rule 140   expr -> expr BOOLEAN_OR expr
Rule 141   expr -> expr LOGICAL_AND expr
Rule 142   expr -> expr LOGICAL_OR expr
Rule 143   expr -> expr LOGICAL_XOR expr
Rule 144   expr -> expr AND expr
Rule 145   expr -> expr OR expr
Rule 146   expr -> expr XOR expr
Rule 147   expr -> expr CONCAT expr
Rule 148   expr -> expr PLUS expr
Rule 149   expr -> expr MINUS expr
Rule 150   expr -> expr MUL expr
Rule 151   expr -> expr DIV expr
Rule 152   expr -> expr SL expr
Rule 153   expr -> expr SR expr
Rule 154   expr -> expr MOD expr
Rule 155   expr -> expr IS_IDENTICAL expr
Rule 156   expr -> expr IS_NOT_IDENTICAL expr
Rule 157   expr -> expr IS_EQUAL_TO expr
Rule 158   expr -> expr IS_NOT_EQUAL expr
Rule 159   expr -> expr LESS_THAN expr
Rule 160   expr -> expr LESS_THAN_OR_EQUAL expr
Rule 161   expr -> expr GREATER_THAN expr
Rule 162   expr -> expr GRATER_THAN_OR_EQUAL expr
Rule 163   expr -> expr INSTANCEOF expr
Rule 164   expr -> expr SPACESHIP expr
Rule 165   expr -> expr INSTANCEOF STATIC
Rule 166   expr -> PLUS expr
Rule 167   expr -> MINUS expr
Rule 168   expr -> NOT expr
Rule 169   expr -> BOOLEAN_NOT expr
Rule 170   expr -> expr QUESTION expr COLON expr
Rule 171   expr -> expr QUESTION COLON expr
Rule 172   expr -> INC variable
Rule 173   expr -> DEC variable
Rule 174   expr -> variable INC
Rule 175   expr -> variable DEC
Rule 176   expr -> INT_CAST expr
Rule 177   expr -> ARRAY_CAST expr
Rule 178   expr -> STRING_CAST expr
Rule 179   expr -> DOUBLE_CAST expr
Rule 180   expr -> BOOL_CAST expr
Rule 181   expr -> UNSET_CAST expr
Rule 182   expr -> BINARY_CAST expr
Rule 183   expr -> ISSET LPAREN isset_variables RPAREN
Rule 184   isset_variables -> isset_variables COMMA variable
Rule 185   isset_variables -> variable
Rule 186   expr -> EMPTY LPAREN expr RPAREN
Rule 187   expr -> EVAL LPAREN expr RPAREN
Rule 188   expr -> INCLUDE expr
Rule 189   expr -> INCLUDE_ONCE expr
Rule 190   expr -> REQUIRE expr
Rule 191   expr -> REQUIRE_ONCE expr
Rule 192   exit_or_die -> EXIT
Rule 193   exit_or_die -> DIE
Rule 194   expr -> exit_or_die
Rule 195   expr -> exit_or_die LPAREN RPAREN
Rule 196   expr -> exit_or_die LPAREN expr RPAREN
Rule 197   expr -> PRINT expr
Rule 198   expr -> AT expr
Rule 199   expr -> LPAREN expr RPAREN
Rule 200   nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC
Rule 201   scalar -> common_scalar
Rule 202   scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
Rule 203   scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
Rule 204   scalar -> scalar_heredoc
Rule 205   scalar -> nowdoc
Rule 206   scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC
Rule 207   nowdoc_text_content -> nowdoc_text_content ENCAPSED_AND_WHITESPACE
Rule 208   nowdoc_text_content -> empty
Rule 209   scalar -> IDENTIFIER
Rule 210   common_scalar -> INT_NUMBER
Rule 211   common_scalar -> FLOAT_NUMBER
Rule 212   common_scalar -> CONSTANT_ENCAPSED_STRING
Rule 213   common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING
Rule 214   common_scalar -> FUNC_C
Rule 215   common_scalar -> METHOD_C
Rule 216   common_scalar -> LINE
Rule 217   common_scalar -> FILE
Rule 218   common_scalar -> DIR
Rule 219   static_scalar -> common_scalar
Rule 220   static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE
Rule 221   static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
Rule 222   static_scalar -> static_heredoc
Rule 223   static_scalar -> nowdoc
Rule 224   static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC
Rule 225   multiple_encapsed -> multiple_encapsed ENCAPSED_AND_WHITESPACE
Rule 226   multiple_encapsed -> empty
Rule 227   static_scalar -> IDENTIFIER
Rule 228   static_scalar -> PLUS static_scalar
Rule 229   static_scalar -> MINUS static_scalar
Rule 230   static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN
Rule 231   static_scalar -> LBRACKET static_array_pair_list RBRACKET
Rule 232   static_array_pair_list -> empty
Rule 233   static_array_pair_list -> static_non_empty_array_pair_list possible_comma
Rule 234   static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA static_expr
Rule 235   static_non_empty_array_pair_list -> static_expr
Rule 236   static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA static_scalar DOUBLE_ARROW static_expr
Rule 237   static_non_empty_array_pair_list -> static_scalar DOUBLE_ARROW static_expr
Rule 238   static_expr -> static_scalar
Rule 239   static_expr -> static_expr BOOLEAN_AND static_expr
Rule 240   static_expr -> static_expr BOOLEAN_OR static_expr
Rule 241   static_expr -> static_expr LOGICAL_AND static_expr
Rule 242   static_expr -> static_expr LOGICAL_OR static_expr
Rule 243   static_expr -> static_expr LOGICAL_XOR static_expr
Rule 244   static_expr -> static_expr AND static_expr
Rule 245   static_expr -> static_expr OR static_expr
Rule 246   static_expr -> static_expr XOR static_expr
Rule 247   static_expr -> static_expr CONCAT static_expr
Rule 248   static_expr -> static_expr PLUS static_expr
Rule 249   static_expr -> static_expr MINUS static_expr
Rule 250   static_expr -> static_expr MUL static_expr
Rule 251   static_expr -> static_expr DIV static_expr
Rule 252   static_expr -> static_expr SL static_expr
Rule 253   static_expr -> static_expr SR static_expr
Rule 254   static_expr -> static_expr MOD static_expr
Rule 255   static_expr -> static_expr IS_IDENTICAL static_expr
Rule 256   static_expr -> static_expr IS_NOT_IDENTICAL static_expr
Rule 257   static_expr -> static_expr IS_EQUAL_TO static_expr
Rule 258   static_expr -> static_expr IS_NOT_EQUAL static_expr
Rule 259   static_expr -> static_expr LESS_THAN static_expr
Rule 260   static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr
Rule 261   static_expr -> static_expr GREATER_THAN static_expr
Rule 262   static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr
Rule 263   static_expr -> LPAREN static_expr RPAREN
Rule 264   encaps_list -> encaps_list encaps_var
Rule 265   encaps_list -> empty
Rule 266   encaps_var -> VARIABLE
Rule 267   encaps_var -> VARIABLE LBRACKET encaps_var_offset RBRACKET
Rule 268   encaps_var -> DOLLAR_OPEN_CURLY_BRACES expr RBRACE
Rule 269   encaps_list -> encaps_list ENCAPSED_AND_WHITESPACE
Rule 270   encaps_var -> DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr RBRACKET RBRACE
Rule 271   encaps_var -> CURLY_OPEN variable RBRACE
Rule 272   encaps_var_offset -> IDENTIFIER
Rule 273   encaps_var_offset -> NUM_STRING
Rule 274   encaps_var_offset -> VARIABLE
Rule 275   empty -> <empty>

Terminals, with rules where they appear

AND                  : 78 85 87 90 116 118 126 144 244
AND_EQUAL            : 134
ARRAY                : 112 230
ARRAY_CAST           : 177
AT                   : 198
BINARY_CAST          : 182
BOOLEAN_AND          : 139 239
BOOLEAN_NOT          : 169
BOOLEAN_OR           : 140 240
BOOL_CAST            : 180
BREAK                : 25 26
CASE                 : 57 60
CLONE                : 91
COLON                : 20 41 43 45 51 54 55 61 170 171
COMMA                : 8 48 63 68 72 74 82 93 116 117 121 122 184 234 236
CONCAT               : 147 247
CONCAT_EQUAL         : 132
CONST                : 7
CONSTANT_ENCAPSED_STRING : 212 213
CONTINUE             : 27 28
CURLY_OPEN           : 271
DEC                  : 173 175
DEFAULT              : 58
DIE                  : 193
DIR                  : 218
DIV                  : 151 251
DIV_EQUAL            : 131
DO                   : 22
DOLLAR               : 66 67 107
DOLLAR_OPEN_CURLY_BRACES : 268 270
DOUBLE_ARROW         : 116 117 118 119 236 237
DOUBLE_CAST          : 179
DOUBLE_QUOTE         : 202 202 203 203 220 220 221 221
ECHO                 : 33
ELSE                 : 19 43
ELSEIF               : 39 41
EMPTY                : 186
ENCAPSED_AND_WHITESPACE : 207 221 225 269
ENDFOR               : 51
ENDIF                : 20
ENDSWITCH            : 54 55
ENDWHILE             : 45
END_HEREDOC          : 206 224
END_NOWDOC           : 200
EQUALS               : 10 70 86 87 89 90 92
EVAL                 : 187
EXIT                 : 192
FILE                 : 217
FLOAT_NUMBER         : 211
FOR                  : 23
FUNCTION             : 77 127
FUNC_C               : 214
GLOBAL               : 31
GRATER_THAN_OR_EQUAL : 162 262
GREATER_THAN         : 161 261
HALT_COMPILER        : 6
IDENTIFIER           : 10 77 101 203 209 213 227 272
IF                   : 18 19 20
INC                  : 172 174
INCLUDE              : 188
INCLUDE_ONCE         : 189
INLINE_HTML          : 34
INSTANCEOF           : 163 165
INT_CAST             : 176
INT_NUMBER           : 210
ISSET                : 183
IS_EQUAL_TO          : 157 257
IS_IDENTICAL         : 155 255
IS_NOT_EQUAL         : 158 258
IS_NOT_IDENTICAL     : 156 256
LBRACE               : 17 52 53 67 77 105 107 127
LBRACKET             : 113 231 267 270
LESS_THAN            : 159 259
LESS_THAN_OR_EQUAL   : 160 260
LINE                 : 216
LIST                 : 92 97
LOGICAL_AND          : 141 241
LOGICAL_OR           : 142 242
LOGICAL_XOR          : 143 243
LPAREN               : 6 18 19 20 21 22 23 24 36 39 41 77 92 97 102 103 112 127 183 186 187 195 196 199 230 263
METHOD_C             : 215
MINUS                : 149 167 229 249
MINUS_EQUAL          : 129
MOD                  : 154 254
MOD_EQUAL            : 133
MUL                  : 150 250
MUL_EQUAL            : 130
NOT                  : 168
NUM_STRING           : 273
OR                   : 145 245
OR_EQUAL             : 135
PLUS                 : 148 166 228 248
PLUS_EQUAL           : 128
PRINT                : 197
QUESTION             : 170 171
RBRACE               : 17 52 53 67 77 105 107 127 268 270 271
RBRACKET             : 113 231 267 270
REQUIRE              : 190
REQUIRE_ONCE         : 191
RETURN               : 29 30
RPAREN               : 6 18 19 20 21 22 23 24 36 39 41 77 92 97 102 103 112 127 183 186 187 195 196 199 230 263
SEMI_COLON           : 6 7 15 16 20 22 23 23 25 26 27 28 29 30 31 32 33 35 36 37 45 51 53 54 55 55 62
SL                   : 152 252
SL_EQUAL             : 137
SPACESHIP            : 164
SR                   : 153 253
SR_EQUAL             : 138
START_HEREDOC        : 206 224
START_NOWDOC         : 200
STATIC               : 32 165
STRING_CAST          : 178
STRING_VARNAME       : 270
SWITCH               : 24
UNSET                : 36
UNSET_CAST           : 181
VARIABLE             : 65 70 71 84 85 86 87 106 266 267 274
WHILE                : 21 22
XOR                  : 146 246
XOR_EQUAL            : 136
YIELD                : 15 16
error                : 

Nonterminals, with rules where they appear

array_pair_list      : 112 113
assignment_list      : 92 93 97
assignment_list_element : 93 94
base_variable        : 99
base_variable_with_function_calls : 98
case_list            : 52 53 54 55
case_list_no_default : 57 58 60
case_separator       : 57 58 60
common_scalar        : 201 219
compound_variable    : 104 110
constant_declaration : 8 9
constant_declarations : 7 8
dim_offset           : 105
echo_expr_list       : 33 72
elseif_list          : 18 19 39
empty                : 3 12 38 40 42 46 56 59 79 81 96 109 114 120 124 208 226 232 265
encaps_list          : 202 203 206 264 269
encaps_var           : 264
encaps_var_offset    : 267
exit_or_die          : 194 195 196
expr                 : 16 18 19 20 21 22 24 26 28 30 35 39 41 48 49 57 60 67 72 73 89 90 91 92 105 107 108 116 117 117 118 119 119 125 128 129 130 131 132 133 134 135 136 137 138 139 139 140 140 141 141 142 142 143 143 144 144 145 145 146 146 147 147 148 148 149 149 150 150 151 151 152 152 153 153 154 154 155 155 156 156 157 157 158 158 159 159 160 160 161 161 162 162 163 163 164 164 165 166 167 168 169 170 170 170 171 171 176 177 178 179 180 181 182 186 187 188 189 190 191 196 197 198 199 268 270
for_expr             : 23 23 23
for_statement        : 23
fucntion_call_body   : 101
function_call        : 100
function_call_parameter : 122 123
function_call_parameter_list : 102 103 122
function_declaration_statement : 5 14
global_var           : 63 64
global_var_list      : 31 63
inner_statement      : 11
inner_statement_list : 11 17 20 41 43 45 51 57 58 60 77 127
is_reference         : 77 127
isset_variables      : 183 184
multiple_encapsed    : 224 225
new_else_single      : 20
new_elseif_list      : 20 41
non_empty_array_pair_list : 115 116 117
non_empty_for_expr   : 47 48
non_empty_parameter_list : 80 82
nowdoc               : 205 223
nowdoc_text_content  : 200 207
parameter            : 82 83
parameter_list       : 77 127
possible_comma       : 115 233
scalar               : 111
scalar_heredoc       : 204
start                : 0
statement            : 4 13 18 19 19 22 39 44 50
static_array_pair_list : 230 231
static_expr          : 10 234 235 236 237 239 239 240 240 241 241 242 242 243 243 244 244 245 245 246 246 247 247 248 248 249 249 250 250 251 251 252 252 253 253 254 254 255 255 256 256 257 257 258 258 259 259 260 260 261 261 262 262 263
static_heredoc       : 222
static_non_empty_array_pair_list : 233 234 236
static_scalar        : 70 86 87 228 229 236 237 238
static_var           : 68 69
static_var_list      : 32 68
switch_case_list     : 24
top_statement        : 2
top_statement_list   : 1 2
unset_variable       : 74 75
unset_variables      : 36 74
variable             : 66 76 88 89 90 95 116 118 126 128 129 130 131 132 133 134 135 136 137 138 172 173 174 175 184 185 271
variable_without_objects : 103
while_statement      : 21

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . top_statement_list
    (2) top_statement_list -> . top_statement_list top_statement
    (3) top_statement_list -> . empty
    (275) empty -> .

    HALT_COMPILER   reduce using rule 275 (empty -> .)
    CONST           reduce using rule 275 (empty -> .)
    LBRACE          reduce using rule 275 (empty -> .)
    IF              reduce using rule 275 (empty -> .)
    WHILE           reduce using rule 275 (empty -> .)
    DO              reduce using rule 275 (empty -> .)
    FOR             reduce using rule 275 (empty -> .)
    SWITCH          reduce using rule 275 (empty -> .)
    BREAK           reduce using rule 275 (empty -> .)
    CONTINUE        reduce using rule 275 (empty -> .)
    RETURN          reduce using rule 275 (empty -> .)
    GLOBAL          reduce using rule 275 (empty -> .)
    STATIC          reduce using rule 275 (empty -> .)
    ECHO            reduce using rule 275 (empty -> .)
    INLINE_HTML     reduce using rule 275 (empty -> .)
    UNSET           reduce using rule 275 (empty -> .)
    SEMI_COLON      reduce using rule 275 (empty -> .)
    FUNCTION        reduce using rule 275 (empty -> .)
    CLONE           reduce using rule 275 (empty -> .)
    LIST            reduce using rule 275 (empty -> .)
    ARRAY           reduce using rule 275 (empty -> .)
    LBRACKET        reduce using rule 275 (empty -> .)
    PLUS            reduce using rule 275 (empty -> .)
    MINUS           reduce using rule 275 (empty -> .)
    NOT             reduce using rule 275 (empty -> .)
    BOOLEAN_NOT     reduce using rule 275 (empty -> .)
    INC             reduce using rule 275 (empty -> .)
    DEC             reduce using rule 275 (empty -> .)
    INT_CAST        reduce using rule 275 (empty -> .)
    ARRAY_CAST      reduce using rule 275 (empty -> .)
    STRING_CAST     reduce using rule 275 (empty -> .)
    DOUBLE_CAST     reduce using rule 275 (empty -> .)
    BOOL_CAST       reduce using rule 275 (empty -> .)
    UNSET_CAST      reduce using rule 275 (empty -> .)
    BINARY_CAST     reduce using rule 275 (empty -> .)
    ISSET           reduce using rule 275 (empty -> .)
    EMPTY           reduce using rule 275 (empty -> .)
    EVAL            reduce using rule 275 (empty -> .)
    INCLUDE         reduce using rule 275 (empty -> .)
    INCLUDE_ONCE    reduce using rule 275 (empty -> .)
    REQUIRE         reduce using rule 275 (empty -> .)
    REQUIRE_ONCE    reduce using rule 275 (empty -> .)
    PRINT           reduce using rule 275 (empty -> .)
    AT              reduce using rule 275 (empty -> .)
    LPAREN          reduce using rule 275 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 275 (empty -> .)
    IDENTIFIER      reduce using rule 275 (empty -> .)
    EXIT            reduce using rule 275 (empty -> .)
    DIE             reduce using rule 275 (empty -> .)
    INT_NUMBER      reduce using rule 275 (empty -> .)
    FLOAT_NUMBER    reduce using rule 275 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 275 (empty -> .)
    FUNC_C          reduce using rule 275 (empty -> .)
    METHOD_C        reduce using rule 275 (empty -> .)
    LINE            reduce using rule 275 (empty -> .)
    FILE            reduce using rule 275 (empty -> .)
    DIR             reduce using rule 275 (empty -> .)
    START_HEREDOC   reduce using rule 275 (empty -> .)
    START_NOWDOC    reduce using rule 275 (empty -> .)
    VARIABLE        reduce using rule 275 (empty -> .)
    DOLLAR          reduce using rule 275 (empty -> .)
    $end            reduce using rule 275 (empty -> .)

    start                          shift and go to state 1
    top_statement_list             shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> top_statement_list .
    (2) top_statement_list -> top_statement_list . top_statement
    (4) top_statement -> . statement
    (5) top_statement -> . function_declaration_statement
    (6) top_statement -> . HALT_COMPILER LPAREN RPAREN SEMI_COLON
    (7) top_statement -> . CONST constant_declarations SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list
    (19) statement -> . IF LPAREN expr RPAREN statement elseif_list ELSE statement
    (20) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (21) statement -> . WHILE LPAREN expr RPAREN while_statement
    (22) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (23) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (24) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (25) statement -> . BREAK SEMI_COLON
    (26) statement -> . BREAK expr SEMI_COLON
    (27) statement -> . CONTINUE SEMI_COLON
    (28) statement -> . CONTINUE expr SEMI_COLON
    (29) statement -> . RETURN SEMI_COLON
    (30) statement -> . RETURN expr SEMI_COLON
    (31) statement -> . GLOBAL global_var_list SEMI_COLON
    (32) statement -> . STATIC static_var_list SEMI_COLON
    (33) statement -> . ECHO echo_expr_list SEMI_COLON
    (34) statement -> . INLINE_HTML
    (35) statement -> . expr SEMI_COLON
    (36) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (37) statement -> . SEMI_COLON
    (77) function_declaration_statement -> . FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    $end            reduce using rule 1 (start -> top_statement_list .)
    HALT_COMPILER   shift and go to state 7
    CONST           shift and go to state 10
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    FUNCTION        shift and go to state 26
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    top_statement                  shift and go to state 4
    statement                      shift and go to state 5
    function_declaration_statement shift and go to state 6
    expr                           shift and go to state 13
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 3

    (3) top_statement_list -> empty .

    HALT_COMPILER   reduce using rule 3 (top_statement_list -> empty .)
    CONST           reduce using rule 3 (top_statement_list -> empty .)
    LBRACE          reduce using rule 3 (top_statement_list -> empty .)
    IF              reduce using rule 3 (top_statement_list -> empty .)
    WHILE           reduce using rule 3 (top_statement_list -> empty .)
    DO              reduce using rule 3 (top_statement_list -> empty .)
    FOR             reduce using rule 3 (top_statement_list -> empty .)
    SWITCH          reduce using rule 3 (top_statement_list -> empty .)
    BREAK           reduce using rule 3 (top_statement_list -> empty .)
    CONTINUE        reduce using rule 3 (top_statement_list -> empty .)
    RETURN          reduce using rule 3 (top_statement_list -> empty .)
    GLOBAL          reduce using rule 3 (top_statement_list -> empty .)
    STATIC          reduce using rule 3 (top_statement_list -> empty .)
    ECHO            reduce using rule 3 (top_statement_list -> empty .)
    INLINE_HTML     reduce using rule 3 (top_statement_list -> empty .)
    UNSET           reduce using rule 3 (top_statement_list -> empty .)
    SEMI_COLON      reduce using rule 3 (top_statement_list -> empty .)
    FUNCTION        reduce using rule 3 (top_statement_list -> empty .)
    CLONE           reduce using rule 3 (top_statement_list -> empty .)
    LIST            reduce using rule 3 (top_statement_list -> empty .)
    ARRAY           reduce using rule 3 (top_statement_list -> empty .)
    LBRACKET        reduce using rule 3 (top_statement_list -> empty .)
    PLUS            reduce using rule 3 (top_statement_list -> empty .)
    MINUS           reduce using rule 3 (top_statement_list -> empty .)
    NOT             reduce using rule 3 (top_statement_list -> empty .)
    BOOLEAN_NOT     reduce using rule 3 (top_statement_list -> empty .)
    INC             reduce using rule 3 (top_statement_list -> empty .)
    DEC             reduce using rule 3 (top_statement_list -> empty .)
    INT_CAST        reduce using rule 3 (top_statement_list -> empty .)
    ARRAY_CAST      reduce using rule 3 (top_statement_list -> empty .)
    STRING_CAST     reduce using rule 3 (top_statement_list -> empty .)
    DOUBLE_CAST     reduce using rule 3 (top_statement_list -> empty .)
    BOOL_CAST       reduce using rule 3 (top_statement_list -> empty .)
    UNSET_CAST      reduce using rule 3 (top_statement_list -> empty .)
    BINARY_CAST     reduce using rule 3 (top_statement_list -> empty .)
    ISSET           reduce using rule 3 (top_statement_list -> empty .)
    EMPTY           reduce using rule 3 (top_statement_list -> empty .)
    EVAL            reduce using rule 3 (top_statement_list -> empty .)
    INCLUDE         reduce using rule 3 (top_statement_list -> empty .)
    INCLUDE_ONCE    reduce using rule 3 (top_statement_list -> empty .)
    REQUIRE         reduce using rule 3 (top_statement_list -> empty .)
    REQUIRE_ONCE    reduce using rule 3 (top_statement_list -> empty .)
    PRINT           reduce using rule 3 (top_statement_list -> empty .)
    AT              reduce using rule 3 (top_statement_list -> empty .)
    LPAREN          reduce using rule 3 (top_statement_list -> empty .)
    DOUBLE_QUOTE    reduce using rule 3 (top_statement_list -> empty .)
    IDENTIFIER      reduce using rule 3 (top_statement_list -> empty .)
    EXIT            reduce using rule 3 (top_statement_list -> empty .)
    DIE             reduce using rule 3 (top_statement_list -> empty .)
    INT_NUMBER      reduce using rule 3 (top_statement_list -> empty .)
    FLOAT_NUMBER    reduce using rule 3 (top_statement_list -> empty .)
    CONSTANT_ENCAPSED_STRING reduce using rule 3 (top_statement_list -> empty .)
    FUNC_C          reduce using rule 3 (top_statement_list -> empty .)
    METHOD_C        reduce using rule 3 (top_statement_list -> empty .)
    LINE            reduce using rule 3 (top_statement_list -> empty .)
    FILE            reduce using rule 3 (top_statement_list -> empty .)
    DIR             reduce using rule 3 (top_statement_list -> empty .)
    START_HEREDOC   reduce using rule 3 (top_statement_list -> empty .)
    START_NOWDOC    reduce using rule 3 (top_statement_list -> empty .)
    VARIABLE        reduce using rule 3 (top_statement_list -> empty .)
    DOLLAR          reduce using rule 3 (top_statement_list -> empty .)
    $end            reduce using rule 3 (top_statement_list -> empty .)


state 4

    (2) top_statement_list -> top_statement_list top_statement .

    HALT_COMPILER   reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    CONST           reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    LBRACE          reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    IF              reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    WHILE           reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    DO              reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    FOR             reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    SWITCH          reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    BREAK           reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    CONTINUE        reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    RETURN          reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    GLOBAL          reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    STATIC          reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    ECHO            reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    INLINE_HTML     reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    UNSET           reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    SEMI_COLON      reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    FUNCTION        reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    CLONE           reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    LIST            reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    ARRAY           reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    LBRACKET        reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    PLUS            reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    MINUS           reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    NOT             reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    BOOLEAN_NOT     reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    INC             reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    DEC             reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    INT_CAST        reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    ARRAY_CAST      reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    STRING_CAST     reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    DOUBLE_CAST     reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    BOOL_CAST       reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    UNSET_CAST      reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    BINARY_CAST     reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    ISSET           reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    EMPTY           reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    EVAL            reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    INCLUDE         reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    INCLUDE_ONCE    reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    REQUIRE         reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    REQUIRE_ONCE    reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    PRINT           reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    AT              reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    LPAREN          reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    DOUBLE_QUOTE    reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    IDENTIFIER      reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    EXIT            reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    DIE             reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    INT_NUMBER      reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    FLOAT_NUMBER    reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    FUNC_C          reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    METHOD_C        reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    LINE            reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    FILE            reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    DIR             reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    START_HEREDOC   reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    START_NOWDOC    reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    VARIABLE        reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    DOLLAR          reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    $end            reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)


state 5

    (4) top_statement -> statement .

    HALT_COMPILER   reduce using rule 4 (top_statement -> statement .)
    CONST           reduce using rule 4 (top_statement -> statement .)
    LBRACE          reduce using rule 4 (top_statement -> statement .)
    IF              reduce using rule 4 (top_statement -> statement .)
    WHILE           reduce using rule 4 (top_statement -> statement .)
    DO              reduce using rule 4 (top_statement -> statement .)
    FOR             reduce using rule 4 (top_statement -> statement .)
    SWITCH          reduce using rule 4 (top_statement -> statement .)
    BREAK           reduce using rule 4 (top_statement -> statement .)
    CONTINUE        reduce using rule 4 (top_statement -> statement .)
    RETURN          reduce using rule 4 (top_statement -> statement .)
    GLOBAL          reduce using rule 4 (top_statement -> statement .)
    STATIC          reduce using rule 4 (top_statement -> statement .)
    ECHO            reduce using rule 4 (top_statement -> statement .)
    INLINE_HTML     reduce using rule 4 (top_statement -> statement .)
    UNSET           reduce using rule 4 (top_statement -> statement .)
    SEMI_COLON      reduce using rule 4 (top_statement -> statement .)
    FUNCTION        reduce using rule 4 (top_statement -> statement .)
    CLONE           reduce using rule 4 (top_statement -> statement .)
    LIST            reduce using rule 4 (top_statement -> statement .)
    ARRAY           reduce using rule 4 (top_statement -> statement .)
    LBRACKET        reduce using rule 4 (top_statement -> statement .)
    PLUS            reduce using rule 4 (top_statement -> statement .)
    MINUS           reduce using rule 4 (top_statement -> statement .)
    NOT             reduce using rule 4 (top_statement -> statement .)
    BOOLEAN_NOT     reduce using rule 4 (top_statement -> statement .)
    INC             reduce using rule 4 (top_statement -> statement .)
    DEC             reduce using rule 4 (top_statement -> statement .)
    INT_CAST        reduce using rule 4 (top_statement -> statement .)
    ARRAY_CAST      reduce using rule 4 (top_statement -> statement .)
    STRING_CAST     reduce using rule 4 (top_statement -> statement .)
    DOUBLE_CAST     reduce using rule 4 (top_statement -> statement .)
    BOOL_CAST       reduce using rule 4 (top_statement -> statement .)
    UNSET_CAST      reduce using rule 4 (top_statement -> statement .)
    BINARY_CAST     reduce using rule 4 (top_statement -> statement .)
    ISSET           reduce using rule 4 (top_statement -> statement .)
    EMPTY           reduce using rule 4 (top_statement -> statement .)
    EVAL            reduce using rule 4 (top_statement -> statement .)
    INCLUDE         reduce using rule 4 (top_statement -> statement .)
    INCLUDE_ONCE    reduce using rule 4 (top_statement -> statement .)
    REQUIRE         reduce using rule 4 (top_statement -> statement .)
    REQUIRE_ONCE    reduce using rule 4 (top_statement -> statement .)
    PRINT           reduce using rule 4 (top_statement -> statement .)
    AT              reduce using rule 4 (top_statement -> statement .)
    LPAREN          reduce using rule 4 (top_statement -> statement .)
    DOUBLE_QUOTE    reduce using rule 4 (top_statement -> statement .)
    IDENTIFIER      reduce using rule 4 (top_statement -> statement .)
    EXIT            reduce using rule 4 (top_statement -> statement .)
    DIE             reduce using rule 4 (top_statement -> statement .)
    INT_NUMBER      reduce using rule 4 (top_statement -> statement .)
    FLOAT_NUMBER    reduce using rule 4 (top_statement -> statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 4 (top_statement -> statement .)
    FUNC_C          reduce using rule 4 (top_statement -> statement .)
    METHOD_C        reduce using rule 4 (top_statement -> statement .)
    LINE            reduce using rule 4 (top_statement -> statement .)
    FILE            reduce using rule 4 (top_statement -> statement .)
    DIR             reduce using rule 4 (top_statement -> statement .)
    START_HEREDOC   reduce using rule 4 (top_statement -> statement .)
    START_NOWDOC    reduce using rule 4 (top_statement -> statement .)
    VARIABLE        reduce using rule 4 (top_statement -> statement .)
    DOLLAR          reduce using rule 4 (top_statement -> statement .)
    $end            reduce using rule 4 (top_statement -> statement .)


state 6

    (5) top_statement -> function_declaration_statement .

    HALT_COMPILER   reduce using rule 5 (top_statement -> function_declaration_statement .)
    CONST           reduce using rule 5 (top_statement -> function_declaration_statement .)
    LBRACE          reduce using rule 5 (top_statement -> function_declaration_statement .)
    IF              reduce using rule 5 (top_statement -> function_declaration_statement .)
    WHILE           reduce using rule 5 (top_statement -> function_declaration_statement .)
    DO              reduce using rule 5 (top_statement -> function_declaration_statement .)
    FOR             reduce using rule 5 (top_statement -> function_declaration_statement .)
    SWITCH          reduce using rule 5 (top_statement -> function_declaration_statement .)
    BREAK           reduce using rule 5 (top_statement -> function_declaration_statement .)
    CONTINUE        reduce using rule 5 (top_statement -> function_declaration_statement .)
    RETURN          reduce using rule 5 (top_statement -> function_declaration_statement .)
    GLOBAL          reduce using rule 5 (top_statement -> function_declaration_statement .)
    STATIC          reduce using rule 5 (top_statement -> function_declaration_statement .)
    ECHO            reduce using rule 5 (top_statement -> function_declaration_statement .)
    INLINE_HTML     reduce using rule 5 (top_statement -> function_declaration_statement .)
    UNSET           reduce using rule 5 (top_statement -> function_declaration_statement .)
    SEMI_COLON      reduce using rule 5 (top_statement -> function_declaration_statement .)
    FUNCTION        reduce using rule 5 (top_statement -> function_declaration_statement .)
    CLONE           reduce using rule 5 (top_statement -> function_declaration_statement .)
    LIST            reduce using rule 5 (top_statement -> function_declaration_statement .)
    ARRAY           reduce using rule 5 (top_statement -> function_declaration_statement .)
    LBRACKET        reduce using rule 5 (top_statement -> function_declaration_statement .)
    PLUS            reduce using rule 5 (top_statement -> function_declaration_statement .)
    MINUS           reduce using rule 5 (top_statement -> function_declaration_statement .)
    NOT             reduce using rule 5 (top_statement -> function_declaration_statement .)
    BOOLEAN_NOT     reduce using rule 5 (top_statement -> function_declaration_statement .)
    INC             reduce using rule 5 (top_statement -> function_declaration_statement .)
    DEC             reduce using rule 5 (top_statement -> function_declaration_statement .)
    INT_CAST        reduce using rule 5 (top_statement -> function_declaration_statement .)
    ARRAY_CAST      reduce using rule 5 (top_statement -> function_declaration_statement .)
    STRING_CAST     reduce using rule 5 (top_statement -> function_declaration_statement .)
    DOUBLE_CAST     reduce using rule 5 (top_statement -> function_declaration_statement .)
    BOOL_CAST       reduce using rule 5 (top_statement -> function_declaration_statement .)
    UNSET_CAST      reduce using rule 5 (top_statement -> function_declaration_statement .)
    BINARY_CAST     reduce using rule 5 (top_statement -> function_declaration_statement .)
    ISSET           reduce using rule 5 (top_statement -> function_declaration_statement .)
    EMPTY           reduce using rule 5 (top_statement -> function_declaration_statement .)
    EVAL            reduce using rule 5 (top_statement -> function_declaration_statement .)
    INCLUDE         reduce using rule 5 (top_statement -> function_declaration_statement .)
    INCLUDE_ONCE    reduce using rule 5 (top_statement -> function_declaration_statement .)
    REQUIRE         reduce using rule 5 (top_statement -> function_declaration_statement .)
    REQUIRE_ONCE    reduce using rule 5 (top_statement -> function_declaration_statement .)
    PRINT           reduce using rule 5 (top_statement -> function_declaration_statement .)
    AT              reduce using rule 5 (top_statement -> function_declaration_statement .)
    LPAREN          reduce using rule 5 (top_statement -> function_declaration_statement .)
    DOUBLE_QUOTE    reduce using rule 5 (top_statement -> function_declaration_statement .)
    IDENTIFIER      reduce using rule 5 (top_statement -> function_declaration_statement .)
    EXIT            reduce using rule 5 (top_statement -> function_declaration_statement .)
    DIE             reduce using rule 5 (top_statement -> function_declaration_statement .)
    INT_NUMBER      reduce using rule 5 (top_statement -> function_declaration_statement .)
    FLOAT_NUMBER    reduce using rule 5 (top_statement -> function_declaration_statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 5 (top_statement -> function_declaration_statement .)
    FUNC_C          reduce using rule 5 (top_statement -> function_declaration_statement .)
    METHOD_C        reduce using rule 5 (top_statement -> function_declaration_statement .)
    LINE            reduce using rule 5 (top_statement -> function_declaration_statement .)
    FILE            reduce using rule 5 (top_statement -> function_declaration_statement .)
    DIR             reduce using rule 5 (top_statement -> function_declaration_statement .)
    START_HEREDOC   reduce using rule 5 (top_statement -> function_declaration_statement .)
    START_NOWDOC    reduce using rule 5 (top_statement -> function_declaration_statement .)
    VARIABLE        reduce using rule 5 (top_statement -> function_declaration_statement .)
    DOLLAR          reduce using rule 5 (top_statement -> function_declaration_statement .)
    $end            reduce using rule 5 (top_statement -> function_declaration_statement .)


state 7

    (6) top_statement -> HALT_COMPILER . LPAREN RPAREN SEMI_COLON

    LPAREN          shift and go to state 80


state 8

    (199) expr -> LPAREN . expr RPAREN
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 81
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 9

    (37) statement -> SEMI_COLON .

    HALT_COMPILER   reduce using rule 37 (statement -> SEMI_COLON .)
    CONST           reduce using rule 37 (statement -> SEMI_COLON .)
    LBRACE          reduce using rule 37 (statement -> SEMI_COLON .)
    IF              reduce using rule 37 (statement -> SEMI_COLON .)
    WHILE           reduce using rule 37 (statement -> SEMI_COLON .)
    DO              reduce using rule 37 (statement -> SEMI_COLON .)
    FOR             reduce using rule 37 (statement -> SEMI_COLON .)
    SWITCH          reduce using rule 37 (statement -> SEMI_COLON .)
    BREAK           reduce using rule 37 (statement -> SEMI_COLON .)
    CONTINUE        reduce using rule 37 (statement -> SEMI_COLON .)
    RETURN          reduce using rule 37 (statement -> SEMI_COLON .)
    GLOBAL          reduce using rule 37 (statement -> SEMI_COLON .)
    STATIC          reduce using rule 37 (statement -> SEMI_COLON .)
    ECHO            reduce using rule 37 (statement -> SEMI_COLON .)
    INLINE_HTML     reduce using rule 37 (statement -> SEMI_COLON .)
    UNSET           reduce using rule 37 (statement -> SEMI_COLON .)
    SEMI_COLON      reduce using rule 37 (statement -> SEMI_COLON .)
    FUNCTION        reduce using rule 37 (statement -> SEMI_COLON .)
    CLONE           reduce using rule 37 (statement -> SEMI_COLON .)
    LIST            reduce using rule 37 (statement -> SEMI_COLON .)
    ARRAY           reduce using rule 37 (statement -> SEMI_COLON .)
    LBRACKET        reduce using rule 37 (statement -> SEMI_COLON .)
    PLUS            reduce using rule 37 (statement -> SEMI_COLON .)
    MINUS           reduce using rule 37 (statement -> SEMI_COLON .)
    NOT             reduce using rule 37 (statement -> SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 37 (statement -> SEMI_COLON .)
    INC             reduce using rule 37 (statement -> SEMI_COLON .)
    DEC             reduce using rule 37 (statement -> SEMI_COLON .)
    INT_CAST        reduce using rule 37 (statement -> SEMI_COLON .)
    ARRAY_CAST      reduce using rule 37 (statement -> SEMI_COLON .)
    STRING_CAST     reduce using rule 37 (statement -> SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 37 (statement -> SEMI_COLON .)
    BOOL_CAST       reduce using rule 37 (statement -> SEMI_COLON .)
    UNSET_CAST      reduce using rule 37 (statement -> SEMI_COLON .)
    BINARY_CAST     reduce using rule 37 (statement -> SEMI_COLON .)
    ISSET           reduce using rule 37 (statement -> SEMI_COLON .)
    EMPTY           reduce using rule 37 (statement -> SEMI_COLON .)
    EVAL            reduce using rule 37 (statement -> SEMI_COLON .)
    INCLUDE         reduce using rule 37 (statement -> SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 37 (statement -> SEMI_COLON .)
    REQUIRE         reduce using rule 37 (statement -> SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 37 (statement -> SEMI_COLON .)
    PRINT           reduce using rule 37 (statement -> SEMI_COLON .)
    AT              reduce using rule 37 (statement -> SEMI_COLON .)
    LPAREN          reduce using rule 37 (statement -> SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 37 (statement -> SEMI_COLON .)
    IDENTIFIER      reduce using rule 37 (statement -> SEMI_COLON .)
    EXIT            reduce using rule 37 (statement -> SEMI_COLON .)
    DIE             reduce using rule 37 (statement -> SEMI_COLON .)
    INT_NUMBER      reduce using rule 37 (statement -> SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 37 (statement -> SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 37 (statement -> SEMI_COLON .)
    FUNC_C          reduce using rule 37 (statement -> SEMI_COLON .)
    METHOD_C        reduce using rule 37 (statement -> SEMI_COLON .)
    LINE            reduce using rule 37 (statement -> SEMI_COLON .)
    FILE            reduce using rule 37 (statement -> SEMI_COLON .)
    DIR             reduce using rule 37 (statement -> SEMI_COLON .)
    START_HEREDOC   reduce using rule 37 (statement -> SEMI_COLON .)
    START_NOWDOC    reduce using rule 37 (statement -> SEMI_COLON .)
    VARIABLE        reduce using rule 37 (statement -> SEMI_COLON .)
    DOLLAR          reduce using rule 37 (statement -> SEMI_COLON .)
    $end            reduce using rule 37 (statement -> SEMI_COLON .)
    RBRACE          reduce using rule 37 (statement -> SEMI_COLON .)
    YIELD           reduce using rule 37 (statement -> SEMI_COLON .)
    ELSE            reduce using rule 37 (statement -> SEMI_COLON .)
    ELSEIF          reduce using rule 37 (statement -> SEMI_COLON .)
    ENDIF           reduce using rule 37 (statement -> SEMI_COLON .)
    ENDWHILE        reduce using rule 37 (statement -> SEMI_COLON .)
    ENDSWITCH       reduce using rule 37 (statement -> SEMI_COLON .)
    ENDFOR          reduce using rule 37 (statement -> SEMI_COLON .)
    CASE            reduce using rule 37 (statement -> SEMI_COLON .)
    DEFAULT         reduce using rule 37 (statement -> SEMI_COLON .)


state 10

    (7) top_statement -> CONST . constant_declarations SEMI_COLON
    (8) constant_declarations -> . constant_declarations COMMA constant_declaration
    (9) constant_declarations -> . constant_declaration
    (10) constant_declaration -> . IDENTIFIER EQUALS static_expr

    IDENTIFIER      shift and go to state 85

    constant_declarations          shift and go to state 83
    constant_declaration           shift and go to state 84

state 11

    (17) statement -> LBRACE . inner_statement_list RBRACE
    (11) inner_statement_list -> . inner_statement_list inner_statement
    (12) inner_statement_list -> . empty
    (275) empty -> .

    RBRACE          reduce using rule 275 (empty -> .)
    YIELD           reduce using rule 275 (empty -> .)
    LBRACE          reduce using rule 275 (empty -> .)
    IF              reduce using rule 275 (empty -> .)
    WHILE           reduce using rule 275 (empty -> .)
    DO              reduce using rule 275 (empty -> .)
    FOR             reduce using rule 275 (empty -> .)
    SWITCH          reduce using rule 275 (empty -> .)
    BREAK           reduce using rule 275 (empty -> .)
    CONTINUE        reduce using rule 275 (empty -> .)
    RETURN          reduce using rule 275 (empty -> .)
    GLOBAL          reduce using rule 275 (empty -> .)
    STATIC          reduce using rule 275 (empty -> .)
    ECHO            reduce using rule 275 (empty -> .)
    INLINE_HTML     reduce using rule 275 (empty -> .)
    UNSET           reduce using rule 275 (empty -> .)
    SEMI_COLON      reduce using rule 275 (empty -> .)
    FUNCTION        reduce using rule 275 (empty -> .)
    CLONE           reduce using rule 275 (empty -> .)
    LIST            reduce using rule 275 (empty -> .)
    ARRAY           reduce using rule 275 (empty -> .)
    LBRACKET        reduce using rule 275 (empty -> .)
    PLUS            reduce using rule 275 (empty -> .)
    MINUS           reduce using rule 275 (empty -> .)
    NOT             reduce using rule 275 (empty -> .)
    BOOLEAN_NOT     reduce using rule 275 (empty -> .)
    INC             reduce using rule 275 (empty -> .)
    DEC             reduce using rule 275 (empty -> .)
    INT_CAST        reduce using rule 275 (empty -> .)
    ARRAY_CAST      reduce using rule 275 (empty -> .)
    STRING_CAST     reduce using rule 275 (empty -> .)
    DOUBLE_CAST     reduce using rule 275 (empty -> .)
    BOOL_CAST       reduce using rule 275 (empty -> .)
    UNSET_CAST      reduce using rule 275 (empty -> .)
    BINARY_CAST     reduce using rule 275 (empty -> .)
    ISSET           reduce using rule 275 (empty -> .)
    EMPTY           reduce using rule 275 (empty -> .)
    EVAL            reduce using rule 275 (empty -> .)
    INCLUDE         reduce using rule 275 (empty -> .)
    INCLUDE_ONCE    reduce using rule 275 (empty -> .)
    REQUIRE         reduce using rule 275 (empty -> .)
    REQUIRE_ONCE    reduce using rule 275 (empty -> .)
    PRINT           reduce using rule 275 (empty -> .)
    AT              reduce using rule 275 (empty -> .)
    LPAREN          reduce using rule 275 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 275 (empty -> .)
    IDENTIFIER      reduce using rule 275 (empty -> .)
    EXIT            reduce using rule 275 (empty -> .)
    DIE             reduce using rule 275 (empty -> .)
    INT_NUMBER      reduce using rule 275 (empty -> .)
    FLOAT_NUMBER    reduce using rule 275 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 275 (empty -> .)
    FUNC_C          reduce using rule 275 (empty -> .)
    METHOD_C        reduce using rule 275 (empty -> .)
    LINE            reduce using rule 275 (empty -> .)
    FILE            reduce using rule 275 (empty -> .)
    DIR             reduce using rule 275 (empty -> .)
    START_HEREDOC   reduce using rule 275 (empty -> .)
    START_NOWDOC    reduce using rule 275 (empty -> .)
    VARIABLE        reduce using rule 275 (empty -> .)
    DOLLAR          reduce using rule 275 (empty -> .)

    inner_statement_list           shift and go to state 86
    empty                          shift and go to state 87

state 12

    (18) statement -> IF . LPAREN expr RPAREN statement elseif_list
    (19) statement -> IF . LPAREN expr RPAREN statement elseif_list ELSE statement
    (20) statement -> IF . LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON

    LPAREN          shift and go to state 88


state 13

    (35) statement -> expr . SEMI_COLON
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      shift and go to state 89
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 14

    (21) statement -> WHILE . LPAREN expr RPAREN while_statement

    LPAREN          shift and go to state 118


state 15

    (22) statement -> DO . statement WHILE LPAREN expr RPAREN SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list
    (19) statement -> . IF LPAREN expr RPAREN statement elseif_list ELSE statement
    (20) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (21) statement -> . WHILE LPAREN expr RPAREN while_statement
    (22) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (23) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (24) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (25) statement -> . BREAK SEMI_COLON
    (26) statement -> . BREAK expr SEMI_COLON
    (27) statement -> . CONTINUE SEMI_COLON
    (28) statement -> . CONTINUE expr SEMI_COLON
    (29) statement -> . RETURN SEMI_COLON
    (30) statement -> . RETURN expr SEMI_COLON
    (31) statement -> . GLOBAL global_var_list SEMI_COLON
    (32) statement -> . STATIC static_var_list SEMI_COLON
    (33) statement -> . ECHO echo_expr_list SEMI_COLON
    (34) statement -> . INLINE_HTML
    (35) statement -> . expr SEMI_COLON
    (36) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (37) statement -> . SEMI_COLON
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    statement                      shift and go to state 119
    expr                           shift and go to state 13
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 16

    (23) statement -> FOR . LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement

    LPAREN          shift and go to state 120


state 17

    (24) statement -> SWITCH . LPAREN expr RPAREN switch_case_list

    LPAREN          shift and go to state 121


state 18

    (25) statement -> BREAK . SEMI_COLON
    (26) statement -> BREAK . expr SEMI_COLON
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    SEMI_COLON      shift and go to state 122
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 123
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 19

    (27) statement -> CONTINUE . SEMI_COLON
    (28) statement -> CONTINUE . expr SEMI_COLON
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    SEMI_COLON      shift and go to state 124
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 125
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 20

    (29) statement -> RETURN . SEMI_COLON
    (30) statement -> RETURN . expr SEMI_COLON
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    SEMI_COLON      shift and go to state 126
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 127
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 21

    (31) statement -> GLOBAL . global_var_list SEMI_COLON
    (63) global_var_list -> . global_var_list COMMA global_var
    (64) global_var_list -> . global_var
    (65) global_var -> . VARIABLE
    (66) global_var -> . DOLLAR variable
    (67) global_var -> . DOLLAR LBRACE expr RBRACE

    VARIABLE        shift and go to state 130
    DOLLAR          shift and go to state 131

    global_var_list                shift and go to state 128
    global_var                     shift and go to state 129

state 22

    (32) statement -> STATIC . static_var_list SEMI_COLON
    (68) static_var_list -> . static_var_list COMMA static_var
    (69) static_var_list -> . static_var
    (70) static_var -> . VARIABLE EQUALS static_scalar
    (71) static_var -> . VARIABLE

    VARIABLE        shift and go to state 134

    static_var_list                shift and go to state 132
    static_var                     shift and go to state 133

state 23

    (33) statement -> ECHO . echo_expr_list SEMI_COLON
    (72) echo_expr_list -> . echo_expr_list COMMA expr
    (73) echo_expr_list -> . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    echo_expr_list                 shift and go to state 135
    expr                           shift and go to state 136
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 24

    (34) statement -> INLINE_HTML .

    HALT_COMPILER   reduce using rule 34 (statement -> INLINE_HTML .)
    CONST           reduce using rule 34 (statement -> INLINE_HTML .)
    LBRACE          reduce using rule 34 (statement -> INLINE_HTML .)
    IF              reduce using rule 34 (statement -> INLINE_HTML .)
    WHILE           reduce using rule 34 (statement -> INLINE_HTML .)
    DO              reduce using rule 34 (statement -> INLINE_HTML .)
    FOR             reduce using rule 34 (statement -> INLINE_HTML .)
    SWITCH          reduce using rule 34 (statement -> INLINE_HTML .)
    BREAK           reduce using rule 34 (statement -> INLINE_HTML .)
    CONTINUE        reduce using rule 34 (statement -> INLINE_HTML .)
    RETURN          reduce using rule 34 (statement -> INLINE_HTML .)
    GLOBAL          reduce using rule 34 (statement -> INLINE_HTML .)
    STATIC          reduce using rule 34 (statement -> INLINE_HTML .)
    ECHO            reduce using rule 34 (statement -> INLINE_HTML .)
    INLINE_HTML     reduce using rule 34 (statement -> INLINE_HTML .)
    UNSET           reduce using rule 34 (statement -> INLINE_HTML .)
    SEMI_COLON      reduce using rule 34 (statement -> INLINE_HTML .)
    FUNCTION        reduce using rule 34 (statement -> INLINE_HTML .)
    CLONE           reduce using rule 34 (statement -> INLINE_HTML .)
    LIST            reduce using rule 34 (statement -> INLINE_HTML .)
    ARRAY           reduce using rule 34 (statement -> INLINE_HTML .)
    LBRACKET        reduce using rule 34 (statement -> INLINE_HTML .)
    PLUS            reduce using rule 34 (statement -> INLINE_HTML .)
    MINUS           reduce using rule 34 (statement -> INLINE_HTML .)
    NOT             reduce using rule 34 (statement -> INLINE_HTML .)
    BOOLEAN_NOT     reduce using rule 34 (statement -> INLINE_HTML .)
    INC             reduce using rule 34 (statement -> INLINE_HTML .)
    DEC             reduce using rule 34 (statement -> INLINE_HTML .)
    INT_CAST        reduce using rule 34 (statement -> INLINE_HTML .)
    ARRAY_CAST      reduce using rule 34 (statement -> INLINE_HTML .)
    STRING_CAST     reduce using rule 34 (statement -> INLINE_HTML .)
    DOUBLE_CAST     reduce using rule 34 (statement -> INLINE_HTML .)
    BOOL_CAST       reduce using rule 34 (statement -> INLINE_HTML .)
    UNSET_CAST      reduce using rule 34 (statement -> INLINE_HTML .)
    BINARY_CAST     reduce using rule 34 (statement -> INLINE_HTML .)
    ISSET           reduce using rule 34 (statement -> INLINE_HTML .)
    EMPTY           reduce using rule 34 (statement -> INLINE_HTML .)
    EVAL            reduce using rule 34 (statement -> INLINE_HTML .)
    INCLUDE         reduce using rule 34 (statement -> INLINE_HTML .)
    INCLUDE_ONCE    reduce using rule 34 (statement -> INLINE_HTML .)
    REQUIRE         reduce using rule 34 (statement -> INLINE_HTML .)
    REQUIRE_ONCE    reduce using rule 34 (statement -> INLINE_HTML .)
    PRINT           reduce using rule 34 (statement -> INLINE_HTML .)
    AT              reduce using rule 34 (statement -> INLINE_HTML .)
    LPAREN          reduce using rule 34 (statement -> INLINE_HTML .)
    DOUBLE_QUOTE    reduce using rule 34 (statement -> INLINE_HTML .)
    IDENTIFIER      reduce using rule 34 (statement -> INLINE_HTML .)
    EXIT            reduce using rule 34 (statement -> INLINE_HTML .)
    DIE             reduce using rule 34 (statement -> INLINE_HTML .)
    INT_NUMBER      reduce using rule 34 (statement -> INLINE_HTML .)
    FLOAT_NUMBER    reduce using rule 34 (statement -> INLINE_HTML .)
    CONSTANT_ENCAPSED_STRING reduce using rule 34 (statement -> INLINE_HTML .)
    FUNC_C          reduce using rule 34 (statement -> INLINE_HTML .)
    METHOD_C        reduce using rule 34 (statement -> INLINE_HTML .)
    LINE            reduce using rule 34 (statement -> INLINE_HTML .)
    FILE            reduce using rule 34 (statement -> INLINE_HTML .)
    DIR             reduce using rule 34 (statement -> INLINE_HTML .)
    START_HEREDOC   reduce using rule 34 (statement -> INLINE_HTML .)
    START_NOWDOC    reduce using rule 34 (statement -> INLINE_HTML .)
    VARIABLE        reduce using rule 34 (statement -> INLINE_HTML .)
    DOLLAR          reduce using rule 34 (statement -> INLINE_HTML .)
    $end            reduce using rule 34 (statement -> INLINE_HTML .)
    RBRACE          reduce using rule 34 (statement -> INLINE_HTML .)
    YIELD           reduce using rule 34 (statement -> INLINE_HTML .)
    ELSE            reduce using rule 34 (statement -> INLINE_HTML .)
    ELSEIF          reduce using rule 34 (statement -> INLINE_HTML .)
    ENDIF           reduce using rule 34 (statement -> INLINE_HTML .)
    ENDWHILE        reduce using rule 34 (statement -> INLINE_HTML .)
    ENDSWITCH       reduce using rule 34 (statement -> INLINE_HTML .)
    ENDFOR          reduce using rule 34 (statement -> INLINE_HTML .)
    CASE            reduce using rule 34 (statement -> INLINE_HTML .)
    DEFAULT         reduce using rule 34 (statement -> INLINE_HTML .)


state 25

    (36) statement -> UNSET . LPAREN unset_variables RPAREN SEMI_COLON

    LPAREN          shift and go to state 137


state 26

    (77) function_declaration_statement -> FUNCTION . is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (127) expr -> FUNCTION . is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (78) is_reference -> . AND
    (79) is_reference -> . empty
    (275) empty -> .

    AND             shift and go to state 139
    IDENTIFIER      reduce using rule 275 (empty -> .)
    LPAREN          reduce using rule 275 (empty -> .)

    is_reference                   shift and go to state 138
    empty                          shift and go to state 140

state 27

    (203) scalar -> IDENTIFIER . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (209) scalar -> IDENTIFIER .
    (213) common_scalar -> IDENTIFIER . CONSTANT_ENCAPSED_STRING
    (101) function_call -> IDENTIFIER . fucntion_call_body
    (102) fucntion_call_body -> . LPAREN function_call_parameter_list RPAREN

    DOUBLE_QUOTE    shift and go to state 141
    SEMI_COLON      reduce using rule 209 (scalar -> IDENTIFIER .)
    LBRACE          reduce using rule 209 (scalar -> IDENTIFIER .)
    BOOLEAN_AND     reduce using rule 209 (scalar -> IDENTIFIER .)
    BOOLEAN_OR      reduce using rule 209 (scalar -> IDENTIFIER .)
    LOGICAL_AND     reduce using rule 209 (scalar -> IDENTIFIER .)
    LOGICAL_OR      reduce using rule 209 (scalar -> IDENTIFIER .)
    LOGICAL_XOR     reduce using rule 209 (scalar -> IDENTIFIER .)
    AND             reduce using rule 209 (scalar -> IDENTIFIER .)
    OR              reduce using rule 209 (scalar -> IDENTIFIER .)
    XOR             reduce using rule 209 (scalar -> IDENTIFIER .)
    CONCAT          reduce using rule 209 (scalar -> IDENTIFIER .)
    PLUS            reduce using rule 209 (scalar -> IDENTIFIER .)
    MINUS           reduce using rule 209 (scalar -> IDENTIFIER .)
    MUL             reduce using rule 209 (scalar -> IDENTIFIER .)
    DIV             reduce using rule 209 (scalar -> IDENTIFIER .)
    SL              reduce using rule 209 (scalar -> IDENTIFIER .)
    SR              reduce using rule 209 (scalar -> IDENTIFIER .)
    MOD             reduce using rule 209 (scalar -> IDENTIFIER .)
    IS_IDENTICAL    reduce using rule 209 (scalar -> IDENTIFIER .)
    IS_NOT_IDENTICAL reduce using rule 209 (scalar -> IDENTIFIER .)
    IS_EQUAL_TO     reduce using rule 209 (scalar -> IDENTIFIER .)
    IS_NOT_EQUAL    reduce using rule 209 (scalar -> IDENTIFIER .)
    LESS_THAN       reduce using rule 209 (scalar -> IDENTIFIER .)
    LESS_THAN_OR_EQUAL reduce using rule 209 (scalar -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 209 (scalar -> IDENTIFIER .)
    GRATER_THAN_OR_EQUAL reduce using rule 209 (scalar -> IDENTIFIER .)
    INSTANCEOF      reduce using rule 209 (scalar -> IDENTIFIER .)
    SPACESHIP       reduce using rule 209 (scalar -> IDENTIFIER .)
    QUESTION        reduce using rule 209 (scalar -> IDENTIFIER .)
    RPAREN          reduce using rule 209 (scalar -> IDENTIFIER .)
    COMMA           reduce using rule 209 (scalar -> IDENTIFIER .)
    DOUBLE_ARROW    reduce using rule 209 (scalar -> IDENTIFIER .)
    RBRACE          reduce using rule 209 (scalar -> IDENTIFIER .)
    COLON           reduce using rule 209 (scalar -> IDENTIFIER .)
    RBRACKET        reduce using rule 209 (scalar -> IDENTIFIER .)
    CONSTANT_ENCAPSED_STRING shift and go to state 142
    LPAREN          shift and go to state 144

    fucntion_call_body             shift and go to state 143

state 28

    (88) expr -> variable .
    (89) expr -> variable . EQUALS expr
    (90) expr -> variable . EQUALS AND expr
    (128) expr -> variable . PLUS_EQUAL expr
    (129) expr -> variable . MINUS_EQUAL expr
    (130) expr -> variable . MUL_EQUAL expr
    (131) expr -> variable . DIV_EQUAL expr
    (132) expr -> variable . CONCAT_EQUAL expr
    (133) expr -> variable . MOD_EQUAL expr
    (134) expr -> variable . AND_EQUAL expr
    (135) expr -> variable . OR_EQUAL expr
    (136) expr -> variable . XOR_EQUAL expr
    (137) expr -> variable . SL_EQUAL expr
    (138) expr -> variable . SR_EQUAL expr
    (174) expr -> variable . INC
    (175) expr -> variable . DEC

    SEMI_COLON      reduce using rule 88 (expr -> variable .)
    LBRACE          reduce using rule 88 (expr -> variable .)
    BOOLEAN_AND     reduce using rule 88 (expr -> variable .)
    BOOLEAN_OR      reduce using rule 88 (expr -> variable .)
    LOGICAL_AND     reduce using rule 88 (expr -> variable .)
    LOGICAL_OR      reduce using rule 88 (expr -> variable .)
    LOGICAL_XOR     reduce using rule 88 (expr -> variable .)
    AND             reduce using rule 88 (expr -> variable .)
    OR              reduce using rule 88 (expr -> variable .)
    XOR             reduce using rule 88 (expr -> variable .)
    CONCAT          reduce using rule 88 (expr -> variable .)
    PLUS            reduce using rule 88 (expr -> variable .)
    MINUS           reduce using rule 88 (expr -> variable .)
    MUL             reduce using rule 88 (expr -> variable .)
    DIV             reduce using rule 88 (expr -> variable .)
    SL              reduce using rule 88 (expr -> variable .)
    SR              reduce using rule 88 (expr -> variable .)
    MOD             reduce using rule 88 (expr -> variable .)
    IS_IDENTICAL    reduce using rule 88 (expr -> variable .)
    IS_NOT_IDENTICAL reduce using rule 88 (expr -> variable .)
    IS_EQUAL_TO     reduce using rule 88 (expr -> variable .)
    IS_NOT_EQUAL    reduce using rule 88 (expr -> variable .)
    LESS_THAN       reduce using rule 88 (expr -> variable .)
    LESS_THAN_OR_EQUAL reduce using rule 88 (expr -> variable .)
    GREATER_THAN    reduce using rule 88 (expr -> variable .)
    GRATER_THAN_OR_EQUAL reduce using rule 88 (expr -> variable .)
    INSTANCEOF      reduce using rule 88 (expr -> variable .)
    SPACESHIP       reduce using rule 88 (expr -> variable .)
    QUESTION        reduce using rule 88 (expr -> variable .)
    RPAREN          reduce using rule 88 (expr -> variable .)
    COMMA           reduce using rule 88 (expr -> variable .)
    DOUBLE_ARROW    reduce using rule 88 (expr -> variable .)
    RBRACE          reduce using rule 88 (expr -> variable .)
    COLON           reduce using rule 88 (expr -> variable .)
    RBRACKET        reduce using rule 88 (expr -> variable .)
    EQUALS          shift and go to state 145
    PLUS_EQUAL      shift and go to state 146
    MINUS_EQUAL     shift and go to state 147
    MUL_EQUAL       shift and go to state 148
    DIV_EQUAL       shift and go to state 149
    CONCAT_EQUAL    shift and go to state 150
    MOD_EQUAL       shift and go to state 151
    AND_EQUAL       shift and go to state 152
    OR_EQUAL        shift and go to state 153
    XOR_EQUAL       shift and go to state 154
    SL_EQUAL        shift and go to state 155
    SR_EQUAL        shift and go to state 156
    INC             shift and go to state 157
    DEC             shift and go to state 158


state 29

    (91) expr -> CLONE . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 159
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 30

    (92) expr -> LIST . LPAREN assignment_list RPAREN EQUALS expr

    LPAREN          shift and go to state 160


state 31

    (111) expr -> scalar .

    SEMI_COLON      reduce using rule 111 (expr -> scalar .)
    LBRACE          reduce using rule 111 (expr -> scalar .)
    BOOLEAN_AND     reduce using rule 111 (expr -> scalar .)
    BOOLEAN_OR      reduce using rule 111 (expr -> scalar .)
    LOGICAL_AND     reduce using rule 111 (expr -> scalar .)
    LOGICAL_OR      reduce using rule 111 (expr -> scalar .)
    LOGICAL_XOR     reduce using rule 111 (expr -> scalar .)
    AND             reduce using rule 111 (expr -> scalar .)
    OR              reduce using rule 111 (expr -> scalar .)
    XOR             reduce using rule 111 (expr -> scalar .)
    CONCAT          reduce using rule 111 (expr -> scalar .)
    PLUS            reduce using rule 111 (expr -> scalar .)
    MINUS           reduce using rule 111 (expr -> scalar .)
    MUL             reduce using rule 111 (expr -> scalar .)
    DIV             reduce using rule 111 (expr -> scalar .)
    SL              reduce using rule 111 (expr -> scalar .)
    SR              reduce using rule 111 (expr -> scalar .)
    MOD             reduce using rule 111 (expr -> scalar .)
    IS_IDENTICAL    reduce using rule 111 (expr -> scalar .)
    IS_NOT_IDENTICAL reduce using rule 111 (expr -> scalar .)
    IS_EQUAL_TO     reduce using rule 111 (expr -> scalar .)
    IS_NOT_EQUAL    reduce using rule 111 (expr -> scalar .)
    LESS_THAN       reduce using rule 111 (expr -> scalar .)
    LESS_THAN_OR_EQUAL reduce using rule 111 (expr -> scalar .)
    GREATER_THAN    reduce using rule 111 (expr -> scalar .)
    GRATER_THAN_OR_EQUAL reduce using rule 111 (expr -> scalar .)
    INSTANCEOF      reduce using rule 111 (expr -> scalar .)
    SPACESHIP       reduce using rule 111 (expr -> scalar .)
    QUESTION        reduce using rule 111 (expr -> scalar .)
    RPAREN          reduce using rule 111 (expr -> scalar .)
    COMMA           reduce using rule 111 (expr -> scalar .)
    DOUBLE_ARROW    reduce using rule 111 (expr -> scalar .)
    RBRACE          reduce using rule 111 (expr -> scalar .)
    COLON           reduce using rule 111 (expr -> scalar .)
    RBRACKET        reduce using rule 111 (expr -> scalar .)


state 32

    (112) expr -> ARRAY . LPAREN array_pair_list RPAREN

    LPAREN          shift and go to state 161


state 33

    (113) expr -> LBRACKET . array_pair_list RBRACKET
    (114) array_pair_list -> . empty
    (115) array_pair_list -> . non_empty_array_pair_list possible_comma
    (275) empty -> .
    (116) non_empty_array_pair_list -> . non_empty_array_pair_list COMMA expr DOUBLE_ARROW AND variable
    (117) non_empty_array_pair_list -> . non_empty_array_pair_list COMMA expr DOUBLE_ARROW expr
    (118) non_empty_array_pair_list -> . expr DOUBLE_ARROW AND variable
    (119) non_empty_array_pair_list -> . expr DOUBLE_ARROW expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    RBRACKET        reduce using rule 275 (empty -> .)
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    array_pair_list                shift and go to state 162
    empty                          shift and go to state 163
    non_empty_array_pair_list      shift and go to state 164
    expr                           shift and go to state 165
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 34

    (166) expr -> PLUS . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 166
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 35

    (167) expr -> MINUS . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 167
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 36

    (168) expr -> NOT . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 168
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 37

    (169) expr -> BOOLEAN_NOT . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 169
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 38

    (172) expr -> INC . variable
    (98) variable -> . base_variable_with_function_calls
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    IDENTIFIER      shift and go to state 171
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    variable                       shift and go to state 170
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 39

    (173) expr -> DEC . variable
    (98) variable -> . base_variable_with_function_calls
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    IDENTIFIER      shift and go to state 171
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    variable                       shift and go to state 172
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 40

    (176) expr -> INT_CAST . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 173
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 41

    (177) expr -> ARRAY_CAST . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 174
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 42

    (178) expr -> STRING_CAST . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 175
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 43

    (179) expr -> DOUBLE_CAST . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 176
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 44

    (180) expr -> BOOL_CAST . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 177
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 45

    (181) expr -> UNSET_CAST . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 178
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 46

    (182) expr -> BINARY_CAST . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 179
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 47

    (183) expr -> ISSET . LPAREN isset_variables RPAREN

    LPAREN          shift and go to state 180


state 48

    (186) expr -> EMPTY . LPAREN expr RPAREN

    LPAREN          shift and go to state 181


state 49

    (187) expr -> EVAL . LPAREN expr RPAREN

    LPAREN          shift and go to state 182


state 50

    (188) expr -> INCLUDE . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 183
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 51

    (189) expr -> INCLUDE_ONCE . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 184
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 52

    (190) expr -> REQUIRE . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 185
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 53

    (191) expr -> REQUIRE_ONCE . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 186
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 54

    (194) expr -> exit_or_die .
    (195) expr -> exit_or_die . LPAREN RPAREN
    (196) expr -> exit_or_die . LPAREN expr RPAREN

    SEMI_COLON      reduce using rule 194 (expr -> exit_or_die .)
    LBRACE          reduce using rule 194 (expr -> exit_or_die .)
    BOOLEAN_AND     reduce using rule 194 (expr -> exit_or_die .)
    BOOLEAN_OR      reduce using rule 194 (expr -> exit_or_die .)
    LOGICAL_AND     reduce using rule 194 (expr -> exit_or_die .)
    LOGICAL_OR      reduce using rule 194 (expr -> exit_or_die .)
    LOGICAL_XOR     reduce using rule 194 (expr -> exit_or_die .)
    AND             reduce using rule 194 (expr -> exit_or_die .)
    OR              reduce using rule 194 (expr -> exit_or_die .)
    XOR             reduce using rule 194 (expr -> exit_or_die .)
    CONCAT          reduce using rule 194 (expr -> exit_or_die .)
    PLUS            reduce using rule 194 (expr -> exit_or_die .)
    MINUS           reduce using rule 194 (expr -> exit_or_die .)
    MUL             reduce using rule 194 (expr -> exit_or_die .)
    DIV             reduce using rule 194 (expr -> exit_or_die .)
    SL              reduce using rule 194 (expr -> exit_or_die .)
    SR              reduce using rule 194 (expr -> exit_or_die .)
    MOD             reduce using rule 194 (expr -> exit_or_die .)
    IS_IDENTICAL    reduce using rule 194 (expr -> exit_or_die .)
    IS_NOT_IDENTICAL reduce using rule 194 (expr -> exit_or_die .)
    IS_EQUAL_TO     reduce using rule 194 (expr -> exit_or_die .)
    IS_NOT_EQUAL    reduce using rule 194 (expr -> exit_or_die .)
    LESS_THAN       reduce using rule 194 (expr -> exit_or_die .)
    LESS_THAN_OR_EQUAL reduce using rule 194 (expr -> exit_or_die .)
    GREATER_THAN    reduce using rule 194 (expr -> exit_or_die .)
    GRATER_THAN_OR_EQUAL reduce using rule 194 (expr -> exit_or_die .)
    INSTANCEOF      reduce using rule 194 (expr -> exit_or_die .)
    SPACESHIP       reduce using rule 194 (expr -> exit_or_die .)
    QUESTION        reduce using rule 194 (expr -> exit_or_die .)
    RPAREN          reduce using rule 194 (expr -> exit_or_die .)
    COMMA           reduce using rule 194 (expr -> exit_or_die .)
    DOUBLE_ARROW    reduce using rule 194 (expr -> exit_or_die .)
    RBRACE          reduce using rule 194 (expr -> exit_or_die .)
    COLON           reduce using rule 194 (expr -> exit_or_die .)
    RBRACKET        reduce using rule 194 (expr -> exit_or_die .)
    LPAREN          shift and go to state 187


state 55

    (197) expr -> PRINT . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 188
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 56

    (198) expr -> AT . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 189
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 57

    (98) variable -> base_variable_with_function_calls .

    EQUALS          reduce using rule 98 (variable -> base_variable_with_function_calls .)
    PLUS_EQUAL      reduce using rule 98 (variable -> base_variable_with_function_calls .)
    MINUS_EQUAL     reduce using rule 98 (variable -> base_variable_with_function_calls .)
    MUL_EQUAL       reduce using rule 98 (variable -> base_variable_with_function_calls .)
    DIV_EQUAL       reduce using rule 98 (variable -> base_variable_with_function_calls .)
    CONCAT_EQUAL    reduce using rule 98 (variable -> base_variable_with_function_calls .)
    MOD_EQUAL       reduce using rule 98 (variable -> base_variable_with_function_calls .)
    AND_EQUAL       reduce using rule 98 (variable -> base_variable_with_function_calls .)
    OR_EQUAL        reduce using rule 98 (variable -> base_variable_with_function_calls .)
    XOR_EQUAL       reduce using rule 98 (variable -> base_variable_with_function_calls .)
    SL_EQUAL        reduce using rule 98 (variable -> base_variable_with_function_calls .)
    SR_EQUAL        reduce using rule 98 (variable -> base_variable_with_function_calls .)
    INC             reduce using rule 98 (variable -> base_variable_with_function_calls .)
    DEC             reduce using rule 98 (variable -> base_variable_with_function_calls .)
    SEMI_COLON      reduce using rule 98 (variable -> base_variable_with_function_calls .)
    LBRACE          reduce using rule 98 (variable -> base_variable_with_function_calls .)
    BOOLEAN_AND     reduce using rule 98 (variable -> base_variable_with_function_calls .)
    BOOLEAN_OR      reduce using rule 98 (variable -> base_variable_with_function_calls .)
    LOGICAL_AND     reduce using rule 98 (variable -> base_variable_with_function_calls .)
    LOGICAL_OR      reduce using rule 98 (variable -> base_variable_with_function_calls .)
    LOGICAL_XOR     reduce using rule 98 (variable -> base_variable_with_function_calls .)
    AND             reduce using rule 98 (variable -> base_variable_with_function_calls .)
    OR              reduce using rule 98 (variable -> base_variable_with_function_calls .)
    XOR             reduce using rule 98 (variable -> base_variable_with_function_calls .)
    CONCAT          reduce using rule 98 (variable -> base_variable_with_function_calls .)
    PLUS            reduce using rule 98 (variable -> base_variable_with_function_calls .)
    MINUS           reduce using rule 98 (variable -> base_variable_with_function_calls .)
    MUL             reduce using rule 98 (variable -> base_variable_with_function_calls .)
    DIV             reduce using rule 98 (variable -> base_variable_with_function_calls .)
    SL              reduce using rule 98 (variable -> base_variable_with_function_calls .)
    SR              reduce using rule 98 (variable -> base_variable_with_function_calls .)
    MOD             reduce using rule 98 (variable -> base_variable_with_function_calls .)
    IS_IDENTICAL    reduce using rule 98 (variable -> base_variable_with_function_calls .)
    IS_NOT_IDENTICAL reduce using rule 98 (variable -> base_variable_with_function_calls .)
    IS_EQUAL_TO     reduce using rule 98 (variable -> base_variable_with_function_calls .)
    IS_NOT_EQUAL    reduce using rule 98 (variable -> base_variable_with_function_calls .)
    LESS_THAN       reduce using rule 98 (variable -> base_variable_with_function_calls .)
    LESS_THAN_OR_EQUAL reduce using rule 98 (variable -> base_variable_with_function_calls .)
    GREATER_THAN    reduce using rule 98 (variable -> base_variable_with_function_calls .)
    GRATER_THAN_OR_EQUAL reduce using rule 98 (variable -> base_variable_with_function_calls .)
    INSTANCEOF      reduce using rule 98 (variable -> base_variable_with_function_calls .)
    SPACESHIP       reduce using rule 98 (variable -> base_variable_with_function_calls .)
    QUESTION        reduce using rule 98 (variable -> base_variable_with_function_calls .)
    RPAREN          reduce using rule 98 (variable -> base_variable_with_function_calls .)
    COMMA           reduce using rule 98 (variable -> base_variable_with_function_calls .)
    DOUBLE_ARROW    reduce using rule 98 (variable -> base_variable_with_function_calls .)
    RBRACE          reduce using rule 98 (variable -> base_variable_with_function_calls .)
    COLON           reduce using rule 98 (variable -> base_variable_with_function_calls .)
    RBRACKET        reduce using rule 98 (variable -> base_variable_with_function_calls .)


state 58

    (201) scalar -> common_scalar .

    SEMI_COLON      reduce using rule 201 (scalar -> common_scalar .)
    LBRACE          reduce using rule 201 (scalar -> common_scalar .)
    BOOLEAN_AND     reduce using rule 201 (scalar -> common_scalar .)
    BOOLEAN_OR      reduce using rule 201 (scalar -> common_scalar .)
    LOGICAL_AND     reduce using rule 201 (scalar -> common_scalar .)
    LOGICAL_OR      reduce using rule 201 (scalar -> common_scalar .)
    LOGICAL_XOR     reduce using rule 201 (scalar -> common_scalar .)
    AND             reduce using rule 201 (scalar -> common_scalar .)
    OR              reduce using rule 201 (scalar -> common_scalar .)
    XOR             reduce using rule 201 (scalar -> common_scalar .)
    CONCAT          reduce using rule 201 (scalar -> common_scalar .)
    PLUS            reduce using rule 201 (scalar -> common_scalar .)
    MINUS           reduce using rule 201 (scalar -> common_scalar .)
    MUL             reduce using rule 201 (scalar -> common_scalar .)
    DIV             reduce using rule 201 (scalar -> common_scalar .)
    SL              reduce using rule 201 (scalar -> common_scalar .)
    SR              reduce using rule 201 (scalar -> common_scalar .)
    MOD             reduce using rule 201 (scalar -> common_scalar .)
    IS_IDENTICAL    reduce using rule 201 (scalar -> common_scalar .)
    IS_NOT_IDENTICAL reduce using rule 201 (scalar -> common_scalar .)
    IS_EQUAL_TO     reduce using rule 201 (scalar -> common_scalar .)
    IS_NOT_EQUAL    reduce using rule 201 (scalar -> common_scalar .)
    LESS_THAN       reduce using rule 201 (scalar -> common_scalar .)
    LESS_THAN_OR_EQUAL reduce using rule 201 (scalar -> common_scalar .)
    GREATER_THAN    reduce using rule 201 (scalar -> common_scalar .)
    GRATER_THAN_OR_EQUAL reduce using rule 201 (scalar -> common_scalar .)
    INSTANCEOF      reduce using rule 201 (scalar -> common_scalar .)
    SPACESHIP       reduce using rule 201 (scalar -> common_scalar .)
    QUESTION        reduce using rule 201 (scalar -> common_scalar .)
    RPAREN          reduce using rule 201 (scalar -> common_scalar .)
    COMMA           reduce using rule 201 (scalar -> common_scalar .)
    DOUBLE_ARROW    reduce using rule 201 (scalar -> common_scalar .)
    RBRACE          reduce using rule 201 (scalar -> common_scalar .)
    COLON           reduce using rule 201 (scalar -> common_scalar .)
    RBRACKET        reduce using rule 201 (scalar -> common_scalar .)


state 59

    (202) scalar -> DOUBLE_QUOTE . encaps_list DOUBLE_QUOTE
    (264) encaps_list -> . encaps_list encaps_var
    (265) encaps_list -> . empty
    (269) encaps_list -> . encaps_list ENCAPSED_AND_WHITESPACE
    (275) empty -> .

    DOUBLE_QUOTE    reduce using rule 275 (empty -> .)
    ENCAPSED_AND_WHITESPACE reduce using rule 275 (empty -> .)
    VARIABLE        reduce using rule 275 (empty -> .)
    DOLLAR_OPEN_CURLY_BRACES reduce using rule 275 (empty -> .)
    CURLY_OPEN      reduce using rule 275 (empty -> .)

    encaps_list                    shift and go to state 190
    empty                          shift and go to state 191

state 60

    (204) scalar -> scalar_heredoc .

    SEMI_COLON      reduce using rule 204 (scalar -> scalar_heredoc .)
    LBRACE          reduce using rule 204 (scalar -> scalar_heredoc .)
    BOOLEAN_AND     reduce using rule 204 (scalar -> scalar_heredoc .)
    BOOLEAN_OR      reduce using rule 204 (scalar -> scalar_heredoc .)
    LOGICAL_AND     reduce using rule 204 (scalar -> scalar_heredoc .)
    LOGICAL_OR      reduce using rule 204 (scalar -> scalar_heredoc .)
    LOGICAL_XOR     reduce using rule 204 (scalar -> scalar_heredoc .)
    AND             reduce using rule 204 (scalar -> scalar_heredoc .)
    OR              reduce using rule 204 (scalar -> scalar_heredoc .)
    XOR             reduce using rule 204 (scalar -> scalar_heredoc .)
    CONCAT          reduce using rule 204 (scalar -> scalar_heredoc .)
    PLUS            reduce using rule 204 (scalar -> scalar_heredoc .)
    MINUS           reduce using rule 204 (scalar -> scalar_heredoc .)
    MUL             reduce using rule 204 (scalar -> scalar_heredoc .)
    DIV             reduce using rule 204 (scalar -> scalar_heredoc .)
    SL              reduce using rule 204 (scalar -> scalar_heredoc .)
    SR              reduce using rule 204 (scalar -> scalar_heredoc .)
    MOD             reduce using rule 204 (scalar -> scalar_heredoc .)
    IS_IDENTICAL    reduce using rule 204 (scalar -> scalar_heredoc .)
    IS_NOT_IDENTICAL reduce using rule 204 (scalar -> scalar_heredoc .)
    IS_EQUAL_TO     reduce using rule 204 (scalar -> scalar_heredoc .)
    IS_NOT_EQUAL    reduce using rule 204 (scalar -> scalar_heredoc .)
    LESS_THAN       reduce using rule 204 (scalar -> scalar_heredoc .)
    LESS_THAN_OR_EQUAL reduce using rule 204 (scalar -> scalar_heredoc .)
    GREATER_THAN    reduce using rule 204 (scalar -> scalar_heredoc .)
    GRATER_THAN_OR_EQUAL reduce using rule 204 (scalar -> scalar_heredoc .)
    INSTANCEOF      reduce using rule 204 (scalar -> scalar_heredoc .)
    SPACESHIP       reduce using rule 204 (scalar -> scalar_heredoc .)
    QUESTION        reduce using rule 204 (scalar -> scalar_heredoc .)
    RPAREN          reduce using rule 204 (scalar -> scalar_heredoc .)
    COMMA           reduce using rule 204 (scalar -> scalar_heredoc .)
    DOUBLE_ARROW    reduce using rule 204 (scalar -> scalar_heredoc .)
    RBRACE          reduce using rule 204 (scalar -> scalar_heredoc .)
    COLON           reduce using rule 204 (scalar -> scalar_heredoc .)
    RBRACKET        reduce using rule 204 (scalar -> scalar_heredoc .)


state 61

    (205) scalar -> nowdoc .

    SEMI_COLON      reduce using rule 205 (scalar -> nowdoc .)
    LBRACE          reduce using rule 205 (scalar -> nowdoc .)
    BOOLEAN_AND     reduce using rule 205 (scalar -> nowdoc .)
    BOOLEAN_OR      reduce using rule 205 (scalar -> nowdoc .)
    LOGICAL_AND     reduce using rule 205 (scalar -> nowdoc .)
    LOGICAL_OR      reduce using rule 205 (scalar -> nowdoc .)
    LOGICAL_XOR     reduce using rule 205 (scalar -> nowdoc .)
    AND             reduce using rule 205 (scalar -> nowdoc .)
    OR              reduce using rule 205 (scalar -> nowdoc .)
    XOR             reduce using rule 205 (scalar -> nowdoc .)
    CONCAT          reduce using rule 205 (scalar -> nowdoc .)
    PLUS            reduce using rule 205 (scalar -> nowdoc .)
    MINUS           reduce using rule 205 (scalar -> nowdoc .)
    MUL             reduce using rule 205 (scalar -> nowdoc .)
    DIV             reduce using rule 205 (scalar -> nowdoc .)
    SL              reduce using rule 205 (scalar -> nowdoc .)
    SR              reduce using rule 205 (scalar -> nowdoc .)
    MOD             reduce using rule 205 (scalar -> nowdoc .)
    IS_IDENTICAL    reduce using rule 205 (scalar -> nowdoc .)
    IS_NOT_IDENTICAL reduce using rule 205 (scalar -> nowdoc .)
    IS_EQUAL_TO     reduce using rule 205 (scalar -> nowdoc .)
    IS_NOT_EQUAL    reduce using rule 205 (scalar -> nowdoc .)
    LESS_THAN       reduce using rule 205 (scalar -> nowdoc .)
    LESS_THAN_OR_EQUAL reduce using rule 205 (scalar -> nowdoc .)
    GREATER_THAN    reduce using rule 205 (scalar -> nowdoc .)
    GRATER_THAN_OR_EQUAL reduce using rule 205 (scalar -> nowdoc .)
    INSTANCEOF      reduce using rule 205 (scalar -> nowdoc .)
    SPACESHIP       reduce using rule 205 (scalar -> nowdoc .)
    QUESTION        reduce using rule 205 (scalar -> nowdoc .)
    RPAREN          reduce using rule 205 (scalar -> nowdoc .)
    COMMA           reduce using rule 205 (scalar -> nowdoc .)
    DOUBLE_ARROW    reduce using rule 205 (scalar -> nowdoc .)
    RBRACE          reduce using rule 205 (scalar -> nowdoc .)
    COLON           reduce using rule 205 (scalar -> nowdoc .)
    RBRACKET        reduce using rule 205 (scalar -> nowdoc .)


state 62

    (192) exit_or_die -> EXIT .

    LPAREN          reduce using rule 192 (exit_or_die -> EXIT .)
    SEMI_COLON      reduce using rule 192 (exit_or_die -> EXIT .)
    LBRACE          reduce using rule 192 (exit_or_die -> EXIT .)
    BOOLEAN_AND     reduce using rule 192 (exit_or_die -> EXIT .)
    BOOLEAN_OR      reduce using rule 192 (exit_or_die -> EXIT .)
    LOGICAL_AND     reduce using rule 192 (exit_or_die -> EXIT .)
    LOGICAL_OR      reduce using rule 192 (exit_or_die -> EXIT .)
    LOGICAL_XOR     reduce using rule 192 (exit_or_die -> EXIT .)
    AND             reduce using rule 192 (exit_or_die -> EXIT .)
    OR              reduce using rule 192 (exit_or_die -> EXIT .)
    XOR             reduce using rule 192 (exit_or_die -> EXIT .)
    CONCAT          reduce using rule 192 (exit_or_die -> EXIT .)
    PLUS            reduce using rule 192 (exit_or_die -> EXIT .)
    MINUS           reduce using rule 192 (exit_or_die -> EXIT .)
    MUL             reduce using rule 192 (exit_or_die -> EXIT .)
    DIV             reduce using rule 192 (exit_or_die -> EXIT .)
    SL              reduce using rule 192 (exit_or_die -> EXIT .)
    SR              reduce using rule 192 (exit_or_die -> EXIT .)
    MOD             reduce using rule 192 (exit_or_die -> EXIT .)
    IS_IDENTICAL    reduce using rule 192 (exit_or_die -> EXIT .)
    IS_NOT_IDENTICAL reduce using rule 192 (exit_or_die -> EXIT .)
    IS_EQUAL_TO     reduce using rule 192 (exit_or_die -> EXIT .)
    IS_NOT_EQUAL    reduce using rule 192 (exit_or_die -> EXIT .)
    LESS_THAN       reduce using rule 192 (exit_or_die -> EXIT .)
    LESS_THAN_OR_EQUAL reduce using rule 192 (exit_or_die -> EXIT .)
    GREATER_THAN    reduce using rule 192 (exit_or_die -> EXIT .)
    GRATER_THAN_OR_EQUAL reduce using rule 192 (exit_or_die -> EXIT .)
    INSTANCEOF      reduce using rule 192 (exit_or_die -> EXIT .)
    SPACESHIP       reduce using rule 192 (exit_or_die -> EXIT .)
    QUESTION        reduce using rule 192 (exit_or_die -> EXIT .)
    RPAREN          reduce using rule 192 (exit_or_die -> EXIT .)
    COMMA           reduce using rule 192 (exit_or_die -> EXIT .)
    DOUBLE_ARROW    reduce using rule 192 (exit_or_die -> EXIT .)
    RBRACE          reduce using rule 192 (exit_or_die -> EXIT .)
    COLON           reduce using rule 192 (exit_or_die -> EXIT .)
    RBRACKET        reduce using rule 192 (exit_or_die -> EXIT .)


state 63

    (193) exit_or_die -> DIE .

    LPAREN          reduce using rule 193 (exit_or_die -> DIE .)
    SEMI_COLON      reduce using rule 193 (exit_or_die -> DIE .)
    LBRACE          reduce using rule 193 (exit_or_die -> DIE .)
    BOOLEAN_AND     reduce using rule 193 (exit_or_die -> DIE .)
    BOOLEAN_OR      reduce using rule 193 (exit_or_die -> DIE .)
    LOGICAL_AND     reduce using rule 193 (exit_or_die -> DIE .)
    LOGICAL_OR      reduce using rule 193 (exit_or_die -> DIE .)
    LOGICAL_XOR     reduce using rule 193 (exit_or_die -> DIE .)
    AND             reduce using rule 193 (exit_or_die -> DIE .)
    OR              reduce using rule 193 (exit_or_die -> DIE .)
    XOR             reduce using rule 193 (exit_or_die -> DIE .)
    CONCAT          reduce using rule 193 (exit_or_die -> DIE .)
    PLUS            reduce using rule 193 (exit_or_die -> DIE .)
    MINUS           reduce using rule 193 (exit_or_die -> DIE .)
    MUL             reduce using rule 193 (exit_or_die -> DIE .)
    DIV             reduce using rule 193 (exit_or_die -> DIE .)
    SL              reduce using rule 193 (exit_or_die -> DIE .)
    SR              reduce using rule 193 (exit_or_die -> DIE .)
    MOD             reduce using rule 193 (exit_or_die -> DIE .)
    IS_IDENTICAL    reduce using rule 193 (exit_or_die -> DIE .)
    IS_NOT_IDENTICAL reduce using rule 193 (exit_or_die -> DIE .)
    IS_EQUAL_TO     reduce using rule 193 (exit_or_die -> DIE .)
    IS_NOT_EQUAL    reduce using rule 193 (exit_or_die -> DIE .)
    LESS_THAN       reduce using rule 193 (exit_or_die -> DIE .)
    LESS_THAN_OR_EQUAL reduce using rule 193 (exit_or_die -> DIE .)
    GREATER_THAN    reduce using rule 193 (exit_or_die -> DIE .)
    GRATER_THAN_OR_EQUAL reduce using rule 193 (exit_or_die -> DIE .)
    INSTANCEOF      reduce using rule 193 (exit_or_die -> DIE .)
    SPACESHIP       reduce using rule 193 (exit_or_die -> DIE .)
    QUESTION        reduce using rule 193 (exit_or_die -> DIE .)
    RPAREN          reduce using rule 193 (exit_or_die -> DIE .)
    COMMA           reduce using rule 193 (exit_or_die -> DIE .)
    DOUBLE_ARROW    reduce using rule 193 (exit_or_die -> DIE .)
    RBRACE          reduce using rule 193 (exit_or_die -> DIE .)
    COLON           reduce using rule 193 (exit_or_die -> DIE .)
    RBRACKET        reduce using rule 193 (exit_or_die -> DIE .)


state 64

    (99) base_variable_with_function_calls -> base_variable .

    EQUALS          reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    PLUS_EQUAL      reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    MINUS_EQUAL     reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    MUL_EQUAL       reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    DIV_EQUAL       reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    CONCAT_EQUAL    reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    MOD_EQUAL       reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    AND_EQUAL       reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    OR_EQUAL        reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    XOR_EQUAL       reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    SL_EQUAL        reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    SR_EQUAL        reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    INC             reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    DEC             reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    SEMI_COLON      reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    LBRACE          reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    BOOLEAN_AND     reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    BOOLEAN_OR      reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    LOGICAL_AND     reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    LOGICAL_OR      reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    LOGICAL_XOR     reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    AND             reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    OR              reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    XOR             reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    CONCAT          reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    PLUS            reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    MINUS           reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    MUL             reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    DIV             reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    SL              reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    SR              reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    MOD             reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    IS_IDENTICAL    reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    IS_NOT_IDENTICAL reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    IS_EQUAL_TO     reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    IS_NOT_EQUAL    reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    LESS_THAN       reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    LESS_THAN_OR_EQUAL reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    GREATER_THAN    reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    GRATER_THAN_OR_EQUAL reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    INSTANCEOF      reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    SPACESHIP       reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    QUESTION        reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    RPAREN          reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    COMMA           reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    DOUBLE_ARROW    reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    RBRACE          reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    COLON           reduce using rule 99 (base_variable_with_function_calls -> base_variable .)
    RBRACKET        reduce using rule 99 (base_variable_with_function_calls -> base_variable .)


state 65

    (100) base_variable_with_function_calls -> function_call .

    EQUALS          reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    PLUS_EQUAL      reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    MINUS_EQUAL     reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    MUL_EQUAL       reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    DIV_EQUAL       reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    CONCAT_EQUAL    reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    MOD_EQUAL       reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    AND_EQUAL       reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    OR_EQUAL        reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    XOR_EQUAL       reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    SL_EQUAL        reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    SR_EQUAL        reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    INC             reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    DEC             reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    SEMI_COLON      reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    LBRACE          reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    BOOLEAN_AND     reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    BOOLEAN_OR      reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    LOGICAL_AND     reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    LOGICAL_OR      reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    LOGICAL_XOR     reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    AND             reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    OR              reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    XOR             reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    CONCAT          reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    PLUS            reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    MINUS           reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    MUL             reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    DIV             reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    SL              reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    SR              reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    MOD             reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    IS_IDENTICAL    reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    IS_NOT_IDENTICAL reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    IS_EQUAL_TO     reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    IS_NOT_EQUAL    reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    LESS_THAN       reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    LESS_THAN_OR_EQUAL reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    GREATER_THAN    reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    GRATER_THAN_OR_EQUAL reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    INSTANCEOF      reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    SPACESHIP       reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    QUESTION        reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    RPAREN          reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    COMMA           reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    DOUBLE_ARROW    reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    RBRACE          reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    COLON           reduce using rule 100 (base_variable_with_function_calls -> function_call .)
    RBRACKET        reduce using rule 100 (base_variable_with_function_calls -> function_call .)


state 66

    (210) common_scalar -> INT_NUMBER .

    SEMI_COLON      reduce using rule 210 (common_scalar -> INT_NUMBER .)
    LBRACE          reduce using rule 210 (common_scalar -> INT_NUMBER .)
    BOOLEAN_AND     reduce using rule 210 (common_scalar -> INT_NUMBER .)
    BOOLEAN_OR      reduce using rule 210 (common_scalar -> INT_NUMBER .)
    LOGICAL_AND     reduce using rule 210 (common_scalar -> INT_NUMBER .)
    LOGICAL_OR      reduce using rule 210 (common_scalar -> INT_NUMBER .)
    LOGICAL_XOR     reduce using rule 210 (common_scalar -> INT_NUMBER .)
    AND             reduce using rule 210 (common_scalar -> INT_NUMBER .)
    OR              reduce using rule 210 (common_scalar -> INT_NUMBER .)
    XOR             reduce using rule 210 (common_scalar -> INT_NUMBER .)
    CONCAT          reduce using rule 210 (common_scalar -> INT_NUMBER .)
    PLUS            reduce using rule 210 (common_scalar -> INT_NUMBER .)
    MINUS           reduce using rule 210 (common_scalar -> INT_NUMBER .)
    MUL             reduce using rule 210 (common_scalar -> INT_NUMBER .)
    DIV             reduce using rule 210 (common_scalar -> INT_NUMBER .)
    SL              reduce using rule 210 (common_scalar -> INT_NUMBER .)
    SR              reduce using rule 210 (common_scalar -> INT_NUMBER .)
    MOD             reduce using rule 210 (common_scalar -> INT_NUMBER .)
    IS_IDENTICAL    reduce using rule 210 (common_scalar -> INT_NUMBER .)
    IS_NOT_IDENTICAL reduce using rule 210 (common_scalar -> INT_NUMBER .)
    IS_EQUAL_TO     reduce using rule 210 (common_scalar -> INT_NUMBER .)
    IS_NOT_EQUAL    reduce using rule 210 (common_scalar -> INT_NUMBER .)
    LESS_THAN       reduce using rule 210 (common_scalar -> INT_NUMBER .)
    LESS_THAN_OR_EQUAL reduce using rule 210 (common_scalar -> INT_NUMBER .)
    GREATER_THAN    reduce using rule 210 (common_scalar -> INT_NUMBER .)
    GRATER_THAN_OR_EQUAL reduce using rule 210 (common_scalar -> INT_NUMBER .)
    INSTANCEOF      reduce using rule 210 (common_scalar -> INT_NUMBER .)
    SPACESHIP       reduce using rule 210 (common_scalar -> INT_NUMBER .)
    QUESTION        reduce using rule 210 (common_scalar -> INT_NUMBER .)
    RPAREN          reduce using rule 210 (common_scalar -> INT_NUMBER .)
    COMMA           reduce using rule 210 (common_scalar -> INT_NUMBER .)
    DOUBLE_ARROW    reduce using rule 210 (common_scalar -> INT_NUMBER .)
    RBRACE          reduce using rule 210 (common_scalar -> INT_NUMBER .)
    COLON           reduce using rule 210 (common_scalar -> INT_NUMBER .)
    RBRACKET        reduce using rule 210 (common_scalar -> INT_NUMBER .)


state 67

    (211) common_scalar -> FLOAT_NUMBER .

    SEMI_COLON      reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    LBRACE          reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    BOOLEAN_AND     reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    BOOLEAN_OR      reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    LOGICAL_AND     reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    LOGICAL_OR      reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    LOGICAL_XOR     reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    AND             reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    OR              reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    XOR             reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    CONCAT          reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    PLUS            reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    MINUS           reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    MUL             reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    DIV             reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    SL              reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    SR              reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    MOD             reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    IS_IDENTICAL    reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    IS_NOT_IDENTICAL reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    IS_EQUAL_TO     reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    IS_NOT_EQUAL    reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    LESS_THAN       reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    LESS_THAN_OR_EQUAL reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    GREATER_THAN    reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    GRATER_THAN_OR_EQUAL reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    INSTANCEOF      reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    SPACESHIP       reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    QUESTION        reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    RPAREN          reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    COMMA           reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    DOUBLE_ARROW    reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    RBRACE          reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    COLON           reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)
    RBRACKET        reduce using rule 211 (common_scalar -> FLOAT_NUMBER .)


state 68

    (212) common_scalar -> CONSTANT_ENCAPSED_STRING .

    SEMI_COLON      reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    LBRACE          reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    BOOLEAN_AND     reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    BOOLEAN_OR      reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    LOGICAL_AND     reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    LOGICAL_OR      reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    LOGICAL_XOR     reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    AND             reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    OR              reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    XOR             reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    CONCAT          reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    PLUS            reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    MINUS           reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    MUL             reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    DIV             reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    SL              reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    SR              reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    MOD             reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    IS_IDENTICAL    reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    IS_NOT_IDENTICAL reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    IS_EQUAL_TO     reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    IS_NOT_EQUAL    reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    LESS_THAN       reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    LESS_THAN_OR_EQUAL reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    GREATER_THAN    reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    GRATER_THAN_OR_EQUAL reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    INSTANCEOF      reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    SPACESHIP       reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    QUESTION        reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    RPAREN          reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    COMMA           reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    DOUBLE_ARROW    reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    RBRACE          reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    COLON           reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    RBRACKET        reduce using rule 212 (common_scalar -> CONSTANT_ENCAPSED_STRING .)


state 69

    (214) common_scalar -> FUNC_C .

    SEMI_COLON      reduce using rule 214 (common_scalar -> FUNC_C .)
    LBRACE          reduce using rule 214 (common_scalar -> FUNC_C .)
    BOOLEAN_AND     reduce using rule 214 (common_scalar -> FUNC_C .)
    BOOLEAN_OR      reduce using rule 214 (common_scalar -> FUNC_C .)
    LOGICAL_AND     reduce using rule 214 (common_scalar -> FUNC_C .)
    LOGICAL_OR      reduce using rule 214 (common_scalar -> FUNC_C .)
    LOGICAL_XOR     reduce using rule 214 (common_scalar -> FUNC_C .)
    AND             reduce using rule 214 (common_scalar -> FUNC_C .)
    OR              reduce using rule 214 (common_scalar -> FUNC_C .)
    XOR             reduce using rule 214 (common_scalar -> FUNC_C .)
    CONCAT          reduce using rule 214 (common_scalar -> FUNC_C .)
    PLUS            reduce using rule 214 (common_scalar -> FUNC_C .)
    MINUS           reduce using rule 214 (common_scalar -> FUNC_C .)
    MUL             reduce using rule 214 (common_scalar -> FUNC_C .)
    DIV             reduce using rule 214 (common_scalar -> FUNC_C .)
    SL              reduce using rule 214 (common_scalar -> FUNC_C .)
    SR              reduce using rule 214 (common_scalar -> FUNC_C .)
    MOD             reduce using rule 214 (common_scalar -> FUNC_C .)
    IS_IDENTICAL    reduce using rule 214 (common_scalar -> FUNC_C .)
    IS_NOT_IDENTICAL reduce using rule 214 (common_scalar -> FUNC_C .)
    IS_EQUAL_TO     reduce using rule 214 (common_scalar -> FUNC_C .)
    IS_NOT_EQUAL    reduce using rule 214 (common_scalar -> FUNC_C .)
    LESS_THAN       reduce using rule 214 (common_scalar -> FUNC_C .)
    LESS_THAN_OR_EQUAL reduce using rule 214 (common_scalar -> FUNC_C .)
    GREATER_THAN    reduce using rule 214 (common_scalar -> FUNC_C .)
    GRATER_THAN_OR_EQUAL reduce using rule 214 (common_scalar -> FUNC_C .)
    INSTANCEOF      reduce using rule 214 (common_scalar -> FUNC_C .)
    SPACESHIP       reduce using rule 214 (common_scalar -> FUNC_C .)
    QUESTION        reduce using rule 214 (common_scalar -> FUNC_C .)
    RPAREN          reduce using rule 214 (common_scalar -> FUNC_C .)
    COMMA           reduce using rule 214 (common_scalar -> FUNC_C .)
    DOUBLE_ARROW    reduce using rule 214 (common_scalar -> FUNC_C .)
    RBRACE          reduce using rule 214 (common_scalar -> FUNC_C .)
    COLON           reduce using rule 214 (common_scalar -> FUNC_C .)
    RBRACKET        reduce using rule 214 (common_scalar -> FUNC_C .)


state 70

    (215) common_scalar -> METHOD_C .

    SEMI_COLON      reduce using rule 215 (common_scalar -> METHOD_C .)
    LBRACE          reduce using rule 215 (common_scalar -> METHOD_C .)
    BOOLEAN_AND     reduce using rule 215 (common_scalar -> METHOD_C .)
    BOOLEAN_OR      reduce using rule 215 (common_scalar -> METHOD_C .)
    LOGICAL_AND     reduce using rule 215 (common_scalar -> METHOD_C .)
    LOGICAL_OR      reduce using rule 215 (common_scalar -> METHOD_C .)
    LOGICAL_XOR     reduce using rule 215 (common_scalar -> METHOD_C .)
    AND             reduce using rule 215 (common_scalar -> METHOD_C .)
    OR              reduce using rule 215 (common_scalar -> METHOD_C .)
    XOR             reduce using rule 215 (common_scalar -> METHOD_C .)
    CONCAT          reduce using rule 215 (common_scalar -> METHOD_C .)
    PLUS            reduce using rule 215 (common_scalar -> METHOD_C .)
    MINUS           reduce using rule 215 (common_scalar -> METHOD_C .)
    MUL             reduce using rule 215 (common_scalar -> METHOD_C .)
    DIV             reduce using rule 215 (common_scalar -> METHOD_C .)
    SL              reduce using rule 215 (common_scalar -> METHOD_C .)
    SR              reduce using rule 215 (common_scalar -> METHOD_C .)
    MOD             reduce using rule 215 (common_scalar -> METHOD_C .)
    IS_IDENTICAL    reduce using rule 215 (common_scalar -> METHOD_C .)
    IS_NOT_IDENTICAL reduce using rule 215 (common_scalar -> METHOD_C .)
    IS_EQUAL_TO     reduce using rule 215 (common_scalar -> METHOD_C .)
    IS_NOT_EQUAL    reduce using rule 215 (common_scalar -> METHOD_C .)
    LESS_THAN       reduce using rule 215 (common_scalar -> METHOD_C .)
    LESS_THAN_OR_EQUAL reduce using rule 215 (common_scalar -> METHOD_C .)
    GREATER_THAN    reduce using rule 215 (common_scalar -> METHOD_C .)
    GRATER_THAN_OR_EQUAL reduce using rule 215 (common_scalar -> METHOD_C .)
    INSTANCEOF      reduce using rule 215 (common_scalar -> METHOD_C .)
    SPACESHIP       reduce using rule 215 (common_scalar -> METHOD_C .)
    QUESTION        reduce using rule 215 (common_scalar -> METHOD_C .)
    RPAREN          reduce using rule 215 (common_scalar -> METHOD_C .)
    COMMA           reduce using rule 215 (common_scalar -> METHOD_C .)
    DOUBLE_ARROW    reduce using rule 215 (common_scalar -> METHOD_C .)
    RBRACE          reduce using rule 215 (common_scalar -> METHOD_C .)
    COLON           reduce using rule 215 (common_scalar -> METHOD_C .)
    RBRACKET        reduce using rule 215 (common_scalar -> METHOD_C .)


state 71

    (216) common_scalar -> LINE .

    SEMI_COLON      reduce using rule 216 (common_scalar -> LINE .)
    LBRACE          reduce using rule 216 (common_scalar -> LINE .)
    BOOLEAN_AND     reduce using rule 216 (common_scalar -> LINE .)
    BOOLEAN_OR      reduce using rule 216 (common_scalar -> LINE .)
    LOGICAL_AND     reduce using rule 216 (common_scalar -> LINE .)
    LOGICAL_OR      reduce using rule 216 (common_scalar -> LINE .)
    LOGICAL_XOR     reduce using rule 216 (common_scalar -> LINE .)
    AND             reduce using rule 216 (common_scalar -> LINE .)
    OR              reduce using rule 216 (common_scalar -> LINE .)
    XOR             reduce using rule 216 (common_scalar -> LINE .)
    CONCAT          reduce using rule 216 (common_scalar -> LINE .)
    PLUS            reduce using rule 216 (common_scalar -> LINE .)
    MINUS           reduce using rule 216 (common_scalar -> LINE .)
    MUL             reduce using rule 216 (common_scalar -> LINE .)
    DIV             reduce using rule 216 (common_scalar -> LINE .)
    SL              reduce using rule 216 (common_scalar -> LINE .)
    SR              reduce using rule 216 (common_scalar -> LINE .)
    MOD             reduce using rule 216 (common_scalar -> LINE .)
    IS_IDENTICAL    reduce using rule 216 (common_scalar -> LINE .)
    IS_NOT_IDENTICAL reduce using rule 216 (common_scalar -> LINE .)
    IS_EQUAL_TO     reduce using rule 216 (common_scalar -> LINE .)
    IS_NOT_EQUAL    reduce using rule 216 (common_scalar -> LINE .)
    LESS_THAN       reduce using rule 216 (common_scalar -> LINE .)
    LESS_THAN_OR_EQUAL reduce using rule 216 (common_scalar -> LINE .)
    GREATER_THAN    reduce using rule 216 (common_scalar -> LINE .)
    GRATER_THAN_OR_EQUAL reduce using rule 216 (common_scalar -> LINE .)
    INSTANCEOF      reduce using rule 216 (common_scalar -> LINE .)
    SPACESHIP       reduce using rule 216 (common_scalar -> LINE .)
    QUESTION        reduce using rule 216 (common_scalar -> LINE .)
    RPAREN          reduce using rule 216 (common_scalar -> LINE .)
    COMMA           reduce using rule 216 (common_scalar -> LINE .)
    DOUBLE_ARROW    reduce using rule 216 (common_scalar -> LINE .)
    RBRACE          reduce using rule 216 (common_scalar -> LINE .)
    COLON           reduce using rule 216 (common_scalar -> LINE .)
    RBRACKET        reduce using rule 216 (common_scalar -> LINE .)


state 72

    (217) common_scalar -> FILE .

    SEMI_COLON      reduce using rule 217 (common_scalar -> FILE .)
    LBRACE          reduce using rule 217 (common_scalar -> FILE .)
    BOOLEAN_AND     reduce using rule 217 (common_scalar -> FILE .)
    BOOLEAN_OR      reduce using rule 217 (common_scalar -> FILE .)
    LOGICAL_AND     reduce using rule 217 (common_scalar -> FILE .)
    LOGICAL_OR      reduce using rule 217 (common_scalar -> FILE .)
    LOGICAL_XOR     reduce using rule 217 (common_scalar -> FILE .)
    AND             reduce using rule 217 (common_scalar -> FILE .)
    OR              reduce using rule 217 (common_scalar -> FILE .)
    XOR             reduce using rule 217 (common_scalar -> FILE .)
    CONCAT          reduce using rule 217 (common_scalar -> FILE .)
    PLUS            reduce using rule 217 (common_scalar -> FILE .)
    MINUS           reduce using rule 217 (common_scalar -> FILE .)
    MUL             reduce using rule 217 (common_scalar -> FILE .)
    DIV             reduce using rule 217 (common_scalar -> FILE .)
    SL              reduce using rule 217 (common_scalar -> FILE .)
    SR              reduce using rule 217 (common_scalar -> FILE .)
    MOD             reduce using rule 217 (common_scalar -> FILE .)
    IS_IDENTICAL    reduce using rule 217 (common_scalar -> FILE .)
    IS_NOT_IDENTICAL reduce using rule 217 (common_scalar -> FILE .)
    IS_EQUAL_TO     reduce using rule 217 (common_scalar -> FILE .)
    IS_NOT_EQUAL    reduce using rule 217 (common_scalar -> FILE .)
    LESS_THAN       reduce using rule 217 (common_scalar -> FILE .)
    LESS_THAN_OR_EQUAL reduce using rule 217 (common_scalar -> FILE .)
    GREATER_THAN    reduce using rule 217 (common_scalar -> FILE .)
    GRATER_THAN_OR_EQUAL reduce using rule 217 (common_scalar -> FILE .)
    INSTANCEOF      reduce using rule 217 (common_scalar -> FILE .)
    SPACESHIP       reduce using rule 217 (common_scalar -> FILE .)
    QUESTION        reduce using rule 217 (common_scalar -> FILE .)
    RPAREN          reduce using rule 217 (common_scalar -> FILE .)
    COMMA           reduce using rule 217 (common_scalar -> FILE .)
    DOUBLE_ARROW    reduce using rule 217 (common_scalar -> FILE .)
    RBRACE          reduce using rule 217 (common_scalar -> FILE .)
    COLON           reduce using rule 217 (common_scalar -> FILE .)
    RBRACKET        reduce using rule 217 (common_scalar -> FILE .)


state 73

    (218) common_scalar -> DIR .

    SEMI_COLON      reduce using rule 218 (common_scalar -> DIR .)
    LBRACE          reduce using rule 218 (common_scalar -> DIR .)
    BOOLEAN_AND     reduce using rule 218 (common_scalar -> DIR .)
    BOOLEAN_OR      reduce using rule 218 (common_scalar -> DIR .)
    LOGICAL_AND     reduce using rule 218 (common_scalar -> DIR .)
    LOGICAL_OR      reduce using rule 218 (common_scalar -> DIR .)
    LOGICAL_XOR     reduce using rule 218 (common_scalar -> DIR .)
    AND             reduce using rule 218 (common_scalar -> DIR .)
    OR              reduce using rule 218 (common_scalar -> DIR .)
    XOR             reduce using rule 218 (common_scalar -> DIR .)
    CONCAT          reduce using rule 218 (common_scalar -> DIR .)
    PLUS            reduce using rule 218 (common_scalar -> DIR .)
    MINUS           reduce using rule 218 (common_scalar -> DIR .)
    MUL             reduce using rule 218 (common_scalar -> DIR .)
    DIV             reduce using rule 218 (common_scalar -> DIR .)
    SL              reduce using rule 218 (common_scalar -> DIR .)
    SR              reduce using rule 218 (common_scalar -> DIR .)
    MOD             reduce using rule 218 (common_scalar -> DIR .)
    IS_IDENTICAL    reduce using rule 218 (common_scalar -> DIR .)
    IS_NOT_IDENTICAL reduce using rule 218 (common_scalar -> DIR .)
    IS_EQUAL_TO     reduce using rule 218 (common_scalar -> DIR .)
    IS_NOT_EQUAL    reduce using rule 218 (common_scalar -> DIR .)
    LESS_THAN       reduce using rule 218 (common_scalar -> DIR .)
    LESS_THAN_OR_EQUAL reduce using rule 218 (common_scalar -> DIR .)
    GREATER_THAN    reduce using rule 218 (common_scalar -> DIR .)
    GRATER_THAN_OR_EQUAL reduce using rule 218 (common_scalar -> DIR .)
    INSTANCEOF      reduce using rule 218 (common_scalar -> DIR .)
    SPACESHIP       reduce using rule 218 (common_scalar -> DIR .)
    QUESTION        reduce using rule 218 (common_scalar -> DIR .)
    RPAREN          reduce using rule 218 (common_scalar -> DIR .)
    COMMA           reduce using rule 218 (common_scalar -> DIR .)
    DOUBLE_ARROW    reduce using rule 218 (common_scalar -> DIR .)
    RBRACE          reduce using rule 218 (common_scalar -> DIR .)
    COLON           reduce using rule 218 (common_scalar -> DIR .)
    RBRACKET        reduce using rule 218 (common_scalar -> DIR .)


state 74

    (206) scalar_heredoc -> START_HEREDOC . encaps_list END_HEREDOC
    (264) encaps_list -> . encaps_list encaps_var
    (265) encaps_list -> . empty
    (269) encaps_list -> . encaps_list ENCAPSED_AND_WHITESPACE
    (275) empty -> .

    END_HEREDOC     reduce using rule 275 (empty -> .)
    ENCAPSED_AND_WHITESPACE reduce using rule 275 (empty -> .)
    VARIABLE        reduce using rule 275 (empty -> .)
    DOLLAR_OPEN_CURLY_BRACES reduce using rule 275 (empty -> .)
    CURLY_OPEN      reduce using rule 275 (empty -> .)

    encaps_list                    shift and go to state 192
    empty                          shift and go to state 191

state 75

    (200) nowdoc -> START_NOWDOC . nowdoc_text_content END_NOWDOC
    (207) nowdoc_text_content -> . nowdoc_text_content ENCAPSED_AND_WHITESPACE
    (208) nowdoc_text_content -> . empty
    (275) empty -> .

    END_NOWDOC      reduce using rule 275 (empty -> .)
    ENCAPSED_AND_WHITESPACE reduce using rule 275 (empty -> .)

    nowdoc_text_content            shift and go to state 193
    empty                          shift and go to state 194

state 76

    (104) base_variable -> compound_variable .
    (110) variable_without_objects -> compound_variable .

    EQUALS          reduce using rule 104 (base_variable -> compound_variable .)
    PLUS_EQUAL      reduce using rule 104 (base_variable -> compound_variable .)
    MINUS_EQUAL     reduce using rule 104 (base_variable -> compound_variable .)
    MUL_EQUAL       reduce using rule 104 (base_variable -> compound_variable .)
    DIV_EQUAL       reduce using rule 104 (base_variable -> compound_variable .)
    CONCAT_EQUAL    reduce using rule 104 (base_variable -> compound_variable .)
    MOD_EQUAL       reduce using rule 104 (base_variable -> compound_variable .)
    AND_EQUAL       reduce using rule 104 (base_variable -> compound_variable .)
    OR_EQUAL        reduce using rule 104 (base_variable -> compound_variable .)
    XOR_EQUAL       reduce using rule 104 (base_variable -> compound_variable .)
    SL_EQUAL        reduce using rule 104 (base_variable -> compound_variable .)
    SR_EQUAL        reduce using rule 104 (base_variable -> compound_variable .)
    INC             reduce using rule 104 (base_variable -> compound_variable .)
    DEC             reduce using rule 104 (base_variable -> compound_variable .)
    SEMI_COLON      reduce using rule 104 (base_variable -> compound_variable .)
    LBRACE          reduce using rule 104 (base_variable -> compound_variable .)
    BOOLEAN_AND     reduce using rule 104 (base_variable -> compound_variable .)
    BOOLEAN_OR      reduce using rule 104 (base_variable -> compound_variable .)
    LOGICAL_AND     reduce using rule 104 (base_variable -> compound_variable .)
    LOGICAL_OR      reduce using rule 104 (base_variable -> compound_variable .)
    LOGICAL_XOR     reduce using rule 104 (base_variable -> compound_variable .)
    AND             reduce using rule 104 (base_variable -> compound_variable .)
    OR              reduce using rule 104 (base_variable -> compound_variable .)
    XOR             reduce using rule 104 (base_variable -> compound_variable .)
    CONCAT          reduce using rule 104 (base_variable -> compound_variable .)
    PLUS            reduce using rule 104 (base_variable -> compound_variable .)
    MINUS           reduce using rule 104 (base_variable -> compound_variable .)
    MUL             reduce using rule 104 (base_variable -> compound_variable .)
    DIV             reduce using rule 104 (base_variable -> compound_variable .)
    SL              reduce using rule 104 (base_variable -> compound_variable .)
    SR              reduce using rule 104 (base_variable -> compound_variable .)
    MOD             reduce using rule 104 (base_variable -> compound_variable .)
    IS_IDENTICAL    reduce using rule 104 (base_variable -> compound_variable .)
    IS_NOT_IDENTICAL reduce using rule 104 (base_variable -> compound_variable .)
    IS_EQUAL_TO     reduce using rule 104 (base_variable -> compound_variable .)
    IS_NOT_EQUAL    reduce using rule 104 (base_variable -> compound_variable .)
    LESS_THAN       reduce using rule 104 (base_variable -> compound_variable .)
    LESS_THAN_OR_EQUAL reduce using rule 104 (base_variable -> compound_variable .)
    GREATER_THAN    reduce using rule 104 (base_variable -> compound_variable .)
    GRATER_THAN_OR_EQUAL reduce using rule 104 (base_variable -> compound_variable .)
    INSTANCEOF      reduce using rule 104 (base_variable -> compound_variable .)
    SPACESHIP       reduce using rule 104 (base_variable -> compound_variable .)
    QUESTION        reduce using rule 104 (base_variable -> compound_variable .)
    RPAREN          reduce using rule 104 (base_variable -> compound_variable .)
    COMMA           reduce using rule 104 (base_variable -> compound_variable .)
    DOUBLE_ARROW    reduce using rule 104 (base_variable -> compound_variable .)
    RBRACE          reduce using rule 104 (base_variable -> compound_variable .)
    COLON           reduce using rule 104 (base_variable -> compound_variable .)
    RBRACKET        reduce using rule 104 (base_variable -> compound_variable .)
    LPAREN          reduce using rule 110 (variable_without_objects -> compound_variable .)


state 77

    (103) function_call -> variable_without_objects . LPAREN function_call_parameter_list RPAREN

    LPAREN          shift and go to state 195


state 78

    (106) compound_variable -> VARIABLE .

    EQUALS          reduce using rule 106 (compound_variable -> VARIABLE .)
    PLUS_EQUAL      reduce using rule 106 (compound_variable -> VARIABLE .)
    MINUS_EQUAL     reduce using rule 106 (compound_variable -> VARIABLE .)
    MUL_EQUAL       reduce using rule 106 (compound_variable -> VARIABLE .)
    DIV_EQUAL       reduce using rule 106 (compound_variable -> VARIABLE .)
    CONCAT_EQUAL    reduce using rule 106 (compound_variable -> VARIABLE .)
    MOD_EQUAL       reduce using rule 106 (compound_variable -> VARIABLE .)
    AND_EQUAL       reduce using rule 106 (compound_variable -> VARIABLE .)
    OR_EQUAL        reduce using rule 106 (compound_variable -> VARIABLE .)
    XOR_EQUAL       reduce using rule 106 (compound_variable -> VARIABLE .)
    SL_EQUAL        reduce using rule 106 (compound_variable -> VARIABLE .)
    SR_EQUAL        reduce using rule 106 (compound_variable -> VARIABLE .)
    INC             reduce using rule 106 (compound_variable -> VARIABLE .)
    DEC             reduce using rule 106 (compound_variable -> VARIABLE .)
    SEMI_COLON      reduce using rule 106 (compound_variable -> VARIABLE .)
    LBRACE          reduce using rule 106 (compound_variable -> VARIABLE .)
    BOOLEAN_AND     reduce using rule 106 (compound_variable -> VARIABLE .)
    BOOLEAN_OR      reduce using rule 106 (compound_variable -> VARIABLE .)
    LOGICAL_AND     reduce using rule 106 (compound_variable -> VARIABLE .)
    LOGICAL_OR      reduce using rule 106 (compound_variable -> VARIABLE .)
    LOGICAL_XOR     reduce using rule 106 (compound_variable -> VARIABLE .)
    AND             reduce using rule 106 (compound_variable -> VARIABLE .)
    OR              reduce using rule 106 (compound_variable -> VARIABLE .)
    XOR             reduce using rule 106 (compound_variable -> VARIABLE .)
    CONCAT          reduce using rule 106 (compound_variable -> VARIABLE .)
    PLUS            reduce using rule 106 (compound_variable -> VARIABLE .)
    MINUS           reduce using rule 106 (compound_variable -> VARIABLE .)
    MUL             reduce using rule 106 (compound_variable -> VARIABLE .)
    DIV             reduce using rule 106 (compound_variable -> VARIABLE .)
    SL              reduce using rule 106 (compound_variable -> VARIABLE .)
    SR              reduce using rule 106 (compound_variable -> VARIABLE .)
    MOD             reduce using rule 106 (compound_variable -> VARIABLE .)
    IS_IDENTICAL    reduce using rule 106 (compound_variable -> VARIABLE .)
    IS_NOT_IDENTICAL reduce using rule 106 (compound_variable -> VARIABLE .)
    IS_EQUAL_TO     reduce using rule 106 (compound_variable -> VARIABLE .)
    IS_NOT_EQUAL    reduce using rule 106 (compound_variable -> VARIABLE .)
    LESS_THAN       reduce using rule 106 (compound_variable -> VARIABLE .)
    LESS_THAN_OR_EQUAL reduce using rule 106 (compound_variable -> VARIABLE .)
    GREATER_THAN    reduce using rule 106 (compound_variable -> VARIABLE .)
    GRATER_THAN_OR_EQUAL reduce using rule 106 (compound_variable -> VARIABLE .)
    INSTANCEOF      reduce using rule 106 (compound_variable -> VARIABLE .)
    SPACESHIP       reduce using rule 106 (compound_variable -> VARIABLE .)
    QUESTION        reduce using rule 106 (compound_variable -> VARIABLE .)
    LPAREN          reduce using rule 106 (compound_variable -> VARIABLE .)
    RPAREN          reduce using rule 106 (compound_variable -> VARIABLE .)
    COMMA           reduce using rule 106 (compound_variable -> VARIABLE .)
    DOUBLE_ARROW    reduce using rule 106 (compound_variable -> VARIABLE .)
    RBRACE          reduce using rule 106 (compound_variable -> VARIABLE .)
    COLON           reduce using rule 106 (compound_variable -> VARIABLE .)
    RBRACKET        reduce using rule 106 (compound_variable -> VARIABLE .)


state 79

    (107) compound_variable -> DOLLAR . LBRACE expr RBRACE

    LBRACE          shift and go to state 196


state 80

    (6) top_statement -> HALT_COMPILER LPAREN . RPAREN SEMI_COLON

    RPAREN          shift and go to state 197


state 81

    (199) expr -> LPAREN expr . RPAREN
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    RPAREN          shift and go to state 198
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 82

    (127) expr -> FUNCTION . is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (78) is_reference -> . AND
    (79) is_reference -> . empty
    (275) empty -> .

    AND             shift and go to state 139
    LPAREN          reduce using rule 275 (empty -> .)

    is_reference                   shift and go to state 199
    empty                          shift and go to state 140

state 83

    (7) top_statement -> CONST constant_declarations . SEMI_COLON
    (8) constant_declarations -> constant_declarations . COMMA constant_declaration

    SEMI_COLON      shift and go to state 200
    COMMA           shift and go to state 201


state 84

    (9) constant_declarations -> constant_declaration .

    SEMI_COLON      reduce using rule 9 (constant_declarations -> constant_declaration .)
    COMMA           reduce using rule 9 (constant_declarations -> constant_declaration .)


state 85

    (10) constant_declaration -> IDENTIFIER . EQUALS static_expr

    EQUALS          shift and go to state 202


state 86

    (17) statement -> LBRACE inner_statement_list . RBRACE
    (11) inner_statement_list -> inner_statement_list . inner_statement
    (13) inner_statement -> . statement
    (14) inner_statement -> . function_declaration_statement
    (15) inner_statement -> . YIELD SEMI_COLON
    (16) inner_statement -> . YIELD expr SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list
    (19) statement -> . IF LPAREN expr RPAREN statement elseif_list ELSE statement
    (20) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (21) statement -> . WHILE LPAREN expr RPAREN while_statement
    (22) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (23) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (24) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (25) statement -> . BREAK SEMI_COLON
    (26) statement -> . BREAK expr SEMI_COLON
    (27) statement -> . CONTINUE SEMI_COLON
    (28) statement -> . CONTINUE expr SEMI_COLON
    (29) statement -> . RETURN SEMI_COLON
    (30) statement -> . RETURN expr SEMI_COLON
    (31) statement -> . GLOBAL global_var_list SEMI_COLON
    (32) statement -> . STATIC static_var_list SEMI_COLON
    (33) statement -> . ECHO echo_expr_list SEMI_COLON
    (34) statement -> . INLINE_HTML
    (35) statement -> . expr SEMI_COLON
    (36) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (37) statement -> . SEMI_COLON
    (77) function_declaration_statement -> . FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    RBRACE          shift and go to state 203
    YIELD           shift and go to state 207
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    FUNCTION        shift and go to state 26
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    inner_statement                shift and go to state 204
    statement                      shift and go to state 205
    function_declaration_statement shift and go to state 206
    expr                           shift and go to state 13
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 87

    (12) inner_statement_list -> empty .

    RBRACE          reduce using rule 12 (inner_statement_list -> empty .)
    YIELD           reduce using rule 12 (inner_statement_list -> empty .)
    LBRACE          reduce using rule 12 (inner_statement_list -> empty .)
    IF              reduce using rule 12 (inner_statement_list -> empty .)
    WHILE           reduce using rule 12 (inner_statement_list -> empty .)
    DO              reduce using rule 12 (inner_statement_list -> empty .)
    FOR             reduce using rule 12 (inner_statement_list -> empty .)
    SWITCH          reduce using rule 12 (inner_statement_list -> empty .)
    BREAK           reduce using rule 12 (inner_statement_list -> empty .)
    CONTINUE        reduce using rule 12 (inner_statement_list -> empty .)
    RETURN          reduce using rule 12 (inner_statement_list -> empty .)
    GLOBAL          reduce using rule 12 (inner_statement_list -> empty .)
    STATIC          reduce using rule 12 (inner_statement_list -> empty .)
    ECHO            reduce using rule 12 (inner_statement_list -> empty .)
    INLINE_HTML     reduce using rule 12 (inner_statement_list -> empty .)
    UNSET           reduce using rule 12 (inner_statement_list -> empty .)
    SEMI_COLON      reduce using rule 12 (inner_statement_list -> empty .)
    FUNCTION        reduce using rule 12 (inner_statement_list -> empty .)
    CLONE           reduce using rule 12 (inner_statement_list -> empty .)
    LIST            reduce using rule 12 (inner_statement_list -> empty .)
    ARRAY           reduce using rule 12 (inner_statement_list -> empty .)
    LBRACKET        reduce using rule 12 (inner_statement_list -> empty .)
    PLUS            reduce using rule 12 (inner_statement_list -> empty .)
    MINUS           reduce using rule 12 (inner_statement_list -> empty .)
    NOT             reduce using rule 12 (inner_statement_list -> empty .)
    BOOLEAN_NOT     reduce using rule 12 (inner_statement_list -> empty .)
    INC             reduce using rule 12 (inner_statement_list -> empty .)
    DEC             reduce using rule 12 (inner_statement_list -> empty .)
    INT_CAST        reduce using rule 12 (inner_statement_list -> empty .)
    ARRAY_CAST      reduce using rule 12 (inner_statement_list -> empty .)
    STRING_CAST     reduce using rule 12 (inner_statement_list -> empty .)
    DOUBLE_CAST     reduce using rule 12 (inner_statement_list -> empty .)
    BOOL_CAST       reduce using rule 12 (inner_statement_list -> empty .)
    UNSET_CAST      reduce using rule 12 (inner_statement_list -> empty .)
    BINARY_CAST     reduce using rule 12 (inner_statement_list -> empty .)
    ISSET           reduce using rule 12 (inner_statement_list -> empty .)
    EMPTY           reduce using rule 12 (inner_statement_list -> empty .)
    EVAL            reduce using rule 12 (inner_statement_list -> empty .)
    INCLUDE         reduce using rule 12 (inner_statement_list -> empty .)
    INCLUDE_ONCE    reduce using rule 12 (inner_statement_list -> empty .)
    REQUIRE         reduce using rule 12 (inner_statement_list -> empty .)
    REQUIRE_ONCE    reduce using rule 12 (inner_statement_list -> empty .)
    PRINT           reduce using rule 12 (inner_statement_list -> empty .)
    AT              reduce using rule 12 (inner_statement_list -> empty .)
    LPAREN          reduce using rule 12 (inner_statement_list -> empty .)
    DOUBLE_QUOTE    reduce using rule 12 (inner_statement_list -> empty .)
    IDENTIFIER      reduce using rule 12 (inner_statement_list -> empty .)
    EXIT            reduce using rule 12 (inner_statement_list -> empty .)
    DIE             reduce using rule 12 (inner_statement_list -> empty .)
    INT_NUMBER      reduce using rule 12 (inner_statement_list -> empty .)
    FLOAT_NUMBER    reduce using rule 12 (inner_statement_list -> empty .)
    CONSTANT_ENCAPSED_STRING reduce using rule 12 (inner_statement_list -> empty .)
    FUNC_C          reduce using rule 12 (inner_statement_list -> empty .)
    METHOD_C        reduce using rule 12 (inner_statement_list -> empty .)
    LINE            reduce using rule 12 (inner_statement_list -> empty .)
    FILE            reduce using rule 12 (inner_statement_list -> empty .)
    DIR             reduce using rule 12 (inner_statement_list -> empty .)
    START_HEREDOC   reduce using rule 12 (inner_statement_list -> empty .)
    START_NOWDOC    reduce using rule 12 (inner_statement_list -> empty .)
    VARIABLE        reduce using rule 12 (inner_statement_list -> empty .)
    DOLLAR          reduce using rule 12 (inner_statement_list -> empty .)
    ELSEIF          reduce using rule 12 (inner_statement_list -> empty .)
    ELSE            reduce using rule 12 (inner_statement_list -> empty .)
    ENDIF           reduce using rule 12 (inner_statement_list -> empty .)
    ENDWHILE        reduce using rule 12 (inner_statement_list -> empty .)
    ENDSWITCH       reduce using rule 12 (inner_statement_list -> empty .)
    ENDFOR          reduce using rule 12 (inner_statement_list -> empty .)
    CASE            reduce using rule 12 (inner_statement_list -> empty .)
    DEFAULT         reduce using rule 12 (inner_statement_list -> empty .)


state 88

    (18) statement -> IF LPAREN . expr RPAREN statement elseif_list
    (19) statement -> IF LPAREN . expr RPAREN statement elseif_list ELSE statement
    (20) statement -> IF LPAREN . expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 208
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 89

    (35) statement -> expr SEMI_COLON .

    HALT_COMPILER   reduce using rule 35 (statement -> expr SEMI_COLON .)
    CONST           reduce using rule 35 (statement -> expr SEMI_COLON .)
    LBRACE          reduce using rule 35 (statement -> expr SEMI_COLON .)
    IF              reduce using rule 35 (statement -> expr SEMI_COLON .)
    WHILE           reduce using rule 35 (statement -> expr SEMI_COLON .)
    DO              reduce using rule 35 (statement -> expr SEMI_COLON .)
    FOR             reduce using rule 35 (statement -> expr SEMI_COLON .)
    SWITCH          reduce using rule 35 (statement -> expr SEMI_COLON .)
    BREAK           reduce using rule 35 (statement -> expr SEMI_COLON .)
    CONTINUE        reduce using rule 35 (statement -> expr SEMI_COLON .)
    RETURN          reduce using rule 35 (statement -> expr SEMI_COLON .)
    GLOBAL          reduce using rule 35 (statement -> expr SEMI_COLON .)
    STATIC          reduce using rule 35 (statement -> expr SEMI_COLON .)
    ECHO            reduce using rule 35 (statement -> expr SEMI_COLON .)
    INLINE_HTML     reduce using rule 35 (statement -> expr SEMI_COLON .)
    UNSET           reduce using rule 35 (statement -> expr SEMI_COLON .)
    SEMI_COLON      reduce using rule 35 (statement -> expr SEMI_COLON .)
    FUNCTION        reduce using rule 35 (statement -> expr SEMI_COLON .)
    CLONE           reduce using rule 35 (statement -> expr SEMI_COLON .)
    LIST            reduce using rule 35 (statement -> expr SEMI_COLON .)
    ARRAY           reduce using rule 35 (statement -> expr SEMI_COLON .)
    LBRACKET        reduce using rule 35 (statement -> expr SEMI_COLON .)
    PLUS            reduce using rule 35 (statement -> expr SEMI_COLON .)
    MINUS           reduce using rule 35 (statement -> expr SEMI_COLON .)
    NOT             reduce using rule 35 (statement -> expr SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 35 (statement -> expr SEMI_COLON .)
    INC             reduce using rule 35 (statement -> expr SEMI_COLON .)
    DEC             reduce using rule 35 (statement -> expr SEMI_COLON .)
    INT_CAST        reduce using rule 35 (statement -> expr SEMI_COLON .)
    ARRAY_CAST      reduce using rule 35 (statement -> expr SEMI_COLON .)
    STRING_CAST     reduce using rule 35 (statement -> expr SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 35 (statement -> expr SEMI_COLON .)
    BOOL_CAST       reduce using rule 35 (statement -> expr SEMI_COLON .)
    UNSET_CAST      reduce using rule 35 (statement -> expr SEMI_COLON .)
    BINARY_CAST     reduce using rule 35 (statement -> expr SEMI_COLON .)
    ISSET           reduce using rule 35 (statement -> expr SEMI_COLON .)
    EMPTY           reduce using rule 35 (statement -> expr SEMI_COLON .)
    EVAL            reduce using rule 35 (statement -> expr SEMI_COLON .)
    INCLUDE         reduce using rule 35 (statement -> expr SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 35 (statement -> expr SEMI_COLON .)
    REQUIRE         reduce using rule 35 (statement -> expr SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 35 (statement -> expr SEMI_COLON .)
    PRINT           reduce using rule 35 (statement -> expr SEMI_COLON .)
    AT              reduce using rule 35 (statement -> expr SEMI_COLON .)
    LPAREN          reduce using rule 35 (statement -> expr SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 35 (statement -> expr SEMI_COLON .)
    IDENTIFIER      reduce using rule 35 (statement -> expr SEMI_COLON .)
    EXIT            reduce using rule 35 (statement -> expr SEMI_COLON .)
    DIE             reduce using rule 35 (statement -> expr SEMI_COLON .)
    INT_NUMBER      reduce using rule 35 (statement -> expr SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 35 (statement -> expr SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 35 (statement -> expr SEMI_COLON .)
    FUNC_C          reduce using rule 35 (statement -> expr SEMI_COLON .)
    METHOD_C        reduce using rule 35 (statement -> expr SEMI_COLON .)
    LINE            reduce using rule 35 (statement -> expr SEMI_COLON .)
    FILE            reduce using rule 35 (statement -> expr SEMI_COLON .)
    DIR             reduce using rule 35 (statement -> expr SEMI_COLON .)
    START_HEREDOC   reduce using rule 35 (statement -> expr SEMI_COLON .)
    START_NOWDOC    reduce using rule 35 (statement -> expr SEMI_COLON .)
    VARIABLE        reduce using rule 35 (statement -> expr SEMI_COLON .)
    DOLLAR          reduce using rule 35 (statement -> expr SEMI_COLON .)
    $end            reduce using rule 35 (statement -> expr SEMI_COLON .)
    RBRACE          reduce using rule 35 (statement -> expr SEMI_COLON .)
    YIELD           reduce using rule 35 (statement -> expr SEMI_COLON .)
    ELSE            reduce using rule 35 (statement -> expr SEMI_COLON .)
    ELSEIF          reduce using rule 35 (statement -> expr SEMI_COLON .)
    ENDIF           reduce using rule 35 (statement -> expr SEMI_COLON .)
    ENDWHILE        reduce using rule 35 (statement -> expr SEMI_COLON .)
    ENDSWITCH       reduce using rule 35 (statement -> expr SEMI_COLON .)
    ENDFOR          reduce using rule 35 (statement -> expr SEMI_COLON .)
    CASE            reduce using rule 35 (statement -> expr SEMI_COLON .)
    DEFAULT         reduce using rule 35 (statement -> expr SEMI_COLON .)


state 90

    (105) expr -> expr LBRACE . dim_offset RBRACE
    (108) dim_offset -> . expr
    (109) dim_offset -> . empty
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (275) empty -> .
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    RBRACE          reduce using rule 275 (empty -> .)
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 209
    dim_offset                     shift and go to state 210
    empty                          shift and go to state 211
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 91

    (139) expr -> expr BOOLEAN_AND . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 212
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 92

    (140) expr -> expr BOOLEAN_OR . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 213
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 93

    (141) expr -> expr LOGICAL_AND . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 214
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 94

    (142) expr -> expr LOGICAL_OR . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 215
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 95

    (143) expr -> expr LOGICAL_XOR . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 216
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 96

    (144) expr -> expr AND . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 217
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 97

    (145) expr -> expr OR . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 218
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 98

    (146) expr -> expr XOR . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 219
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 99

    (147) expr -> expr CONCAT . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 220
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 100

    (148) expr -> expr PLUS . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 221
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 101

    (149) expr -> expr MINUS . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 222
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 102

    (150) expr -> expr MUL . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 223
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 103

    (151) expr -> expr DIV . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 224
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 104

    (152) expr -> expr SL . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 225
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 105

    (153) expr -> expr SR . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 226
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 106

    (154) expr -> expr MOD . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 227
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 107

    (155) expr -> expr IS_IDENTICAL . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 228
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 108

    (156) expr -> expr IS_NOT_IDENTICAL . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 229
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 109

    (157) expr -> expr IS_EQUAL_TO . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 230
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 110

    (158) expr -> expr IS_NOT_EQUAL . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 231
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 111

    (159) expr -> expr LESS_THAN . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 232
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 112

    (160) expr -> expr LESS_THAN_OR_EQUAL . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 233
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 113

    (161) expr -> expr GREATER_THAN . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 234
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 114

    (162) expr -> expr GRATER_THAN_OR_EQUAL . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 235
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 115

    (163) expr -> expr INSTANCEOF . expr
    (165) expr -> expr INSTANCEOF . STATIC
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    STATIC          shift and go to state 237
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 236
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 116

    (164) expr -> expr SPACESHIP . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 238
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 117

    (170) expr -> expr QUESTION . expr COLON expr
    (171) expr -> expr QUESTION . COLON expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    COLON           shift and go to state 240
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 239
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 118

    (21) statement -> WHILE LPAREN . expr RPAREN while_statement
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 241
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 119

    (22) statement -> DO statement . WHILE LPAREN expr RPAREN SEMI_COLON

    WHILE           shift and go to state 242


state 120

    (23) statement -> FOR LPAREN . for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (46) for_expr -> . empty
    (47) for_expr -> . non_empty_for_expr
    (275) empty -> .
    (48) non_empty_for_expr -> . non_empty_for_expr COMMA expr
    (49) non_empty_for_expr -> . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    SEMI_COLON      reduce using rule 275 (empty -> .)
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    for_expr                       shift and go to state 243
    empty                          shift and go to state 244
    non_empty_for_expr             shift and go to state 245
    expr                           shift and go to state 246
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 121

    (24) statement -> SWITCH LPAREN . expr RPAREN switch_case_list
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 247
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 122

    (25) statement -> BREAK SEMI_COLON .

    HALT_COMPILER   reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    CONST           reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    LBRACE          reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    IF              reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    WHILE           reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    DO              reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    FOR             reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    SWITCH          reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    BREAK           reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    CONTINUE        reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    RETURN          reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    GLOBAL          reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    STATIC          reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    ECHO            reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    INLINE_HTML     reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    UNSET           reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    SEMI_COLON      reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    FUNCTION        reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    CLONE           reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    LIST            reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    ARRAY           reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    LBRACKET        reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    PLUS            reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    MINUS           reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    NOT             reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    INC             reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    DEC             reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    INT_CAST        reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    ARRAY_CAST      reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    STRING_CAST     reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    BOOL_CAST       reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    UNSET_CAST      reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    BINARY_CAST     reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    ISSET           reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    EMPTY           reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    EVAL            reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    INCLUDE         reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    REQUIRE         reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    PRINT           reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    AT              reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    LPAREN          reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    IDENTIFIER      reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    EXIT            reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    DIE             reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    INT_NUMBER      reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    FUNC_C          reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    METHOD_C        reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    LINE            reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    FILE            reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    DIR             reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    START_HEREDOC   reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    START_NOWDOC    reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    VARIABLE        reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    DOLLAR          reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    $end            reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    RBRACE          reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    YIELD           reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    ELSE            reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    ELSEIF          reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    ENDIF           reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    ENDWHILE        reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    ENDSWITCH       reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    ENDFOR          reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    CASE            reduce using rule 25 (statement -> BREAK SEMI_COLON .)
    DEFAULT         reduce using rule 25 (statement -> BREAK SEMI_COLON .)


state 123

    (26) statement -> BREAK expr . SEMI_COLON
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      shift and go to state 248
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 124

    (27) statement -> CONTINUE SEMI_COLON .

    HALT_COMPILER   reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    CONST           reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    LBRACE          reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    IF              reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    WHILE           reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    DO              reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    FOR             reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    SWITCH          reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    BREAK           reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    CONTINUE        reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    RETURN          reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    GLOBAL          reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    STATIC          reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    ECHO            reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    INLINE_HTML     reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    UNSET           reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    SEMI_COLON      reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    FUNCTION        reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    CLONE           reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    LIST            reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    ARRAY           reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    LBRACKET        reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    PLUS            reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    MINUS           reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    NOT             reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    INC             reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    DEC             reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    INT_CAST        reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    ARRAY_CAST      reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    STRING_CAST     reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    BOOL_CAST       reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    UNSET_CAST      reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    BINARY_CAST     reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    ISSET           reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    EMPTY           reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    EVAL            reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    INCLUDE         reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    REQUIRE         reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    PRINT           reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    AT              reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    LPAREN          reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    IDENTIFIER      reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    EXIT            reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    DIE             reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    INT_NUMBER      reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    FUNC_C          reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    METHOD_C        reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    LINE            reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    FILE            reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    DIR             reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    START_HEREDOC   reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    START_NOWDOC    reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    VARIABLE        reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    DOLLAR          reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    $end            reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    RBRACE          reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    YIELD           reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    ELSE            reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    ELSEIF          reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    ENDIF           reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    ENDWHILE        reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    ENDSWITCH       reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    ENDFOR          reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    CASE            reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)
    DEFAULT         reduce using rule 27 (statement -> CONTINUE SEMI_COLON .)


state 125

    (28) statement -> CONTINUE expr . SEMI_COLON
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      shift and go to state 249
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 126

    (29) statement -> RETURN SEMI_COLON .

    HALT_COMPILER   reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    CONST           reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    LBRACE          reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    IF              reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    WHILE           reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    DO              reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    FOR             reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    SWITCH          reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    BREAK           reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    CONTINUE        reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    RETURN          reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    GLOBAL          reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    STATIC          reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    ECHO            reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    INLINE_HTML     reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    UNSET           reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    SEMI_COLON      reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    FUNCTION        reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    CLONE           reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    LIST            reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    ARRAY           reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    LBRACKET        reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    PLUS            reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    MINUS           reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    NOT             reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    INC             reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    DEC             reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    INT_CAST        reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    ARRAY_CAST      reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    STRING_CAST     reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    BOOL_CAST       reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    UNSET_CAST      reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    BINARY_CAST     reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    ISSET           reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    EMPTY           reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    EVAL            reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    INCLUDE         reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    REQUIRE         reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    PRINT           reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    AT              reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    LPAREN          reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    IDENTIFIER      reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    EXIT            reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    DIE             reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    INT_NUMBER      reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    FUNC_C          reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    METHOD_C        reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    LINE            reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    FILE            reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    DIR             reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    START_HEREDOC   reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    START_NOWDOC    reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    VARIABLE        reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    DOLLAR          reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    $end            reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    RBRACE          reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    YIELD           reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    ELSE            reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    ELSEIF          reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    ENDIF           reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    ENDWHILE        reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    ENDSWITCH       reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    ENDFOR          reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    CASE            reduce using rule 29 (statement -> RETURN SEMI_COLON .)
    DEFAULT         reduce using rule 29 (statement -> RETURN SEMI_COLON .)


state 127

    (30) statement -> RETURN expr . SEMI_COLON
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      shift and go to state 250
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 128

    (31) statement -> GLOBAL global_var_list . SEMI_COLON
    (63) global_var_list -> global_var_list . COMMA global_var

    SEMI_COLON      shift and go to state 251
    COMMA           shift and go to state 252


state 129

    (64) global_var_list -> global_var .

    SEMI_COLON      reduce using rule 64 (global_var_list -> global_var .)
    COMMA           reduce using rule 64 (global_var_list -> global_var .)


state 130

    (65) global_var -> VARIABLE .

    SEMI_COLON      reduce using rule 65 (global_var -> VARIABLE .)
    COMMA           reduce using rule 65 (global_var -> VARIABLE .)


state 131

    (66) global_var -> DOLLAR . variable
    (67) global_var -> DOLLAR . LBRACE expr RBRACE
    (98) variable -> . base_variable_with_function_calls
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    LBRACE          shift and go to state 254
    IDENTIFIER      shift and go to state 171
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    variable                       shift and go to state 253
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 132

    (32) statement -> STATIC static_var_list . SEMI_COLON
    (68) static_var_list -> static_var_list . COMMA static_var

    SEMI_COLON      shift and go to state 255
    COMMA           shift and go to state 256


state 133

    (69) static_var_list -> static_var .

    SEMI_COLON      reduce using rule 69 (static_var_list -> static_var .)
    COMMA           reduce using rule 69 (static_var_list -> static_var .)


state 134

    (70) static_var -> VARIABLE . EQUALS static_scalar
    (71) static_var -> VARIABLE .

    EQUALS          shift and go to state 257
    SEMI_COLON      reduce using rule 71 (static_var -> VARIABLE .)
    COMMA           reduce using rule 71 (static_var -> VARIABLE .)


state 135

    (33) statement -> ECHO echo_expr_list . SEMI_COLON
    (72) echo_expr_list -> echo_expr_list . COMMA expr

    SEMI_COLON      shift and go to state 258
    COMMA           shift and go to state 259


state 136

    (73) echo_expr_list -> expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 73 (echo_expr_list -> expr .)
    COMMA           reduce using rule 73 (echo_expr_list -> expr .)
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 137

    (36) statement -> UNSET LPAREN . unset_variables RPAREN SEMI_COLON
    (74) unset_variables -> . unset_variables COMMA unset_variable
    (75) unset_variables -> . unset_variable
    (76) unset_variable -> . variable
    (98) variable -> . base_variable_with_function_calls
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    IDENTIFIER      shift and go to state 171
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    unset_variables                shift and go to state 260
    unset_variable                 shift and go to state 261
    variable                       shift and go to state 262
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 138

    (77) function_declaration_statement -> FUNCTION is_reference . IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (127) expr -> FUNCTION is_reference . LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE

    IDENTIFIER      shift and go to state 263
    LPAREN          shift and go to state 264


state 139

    (78) is_reference -> AND .

    IDENTIFIER      reduce using rule 78 (is_reference -> AND .)
    LPAREN          reduce using rule 78 (is_reference -> AND .)


state 140

    (79) is_reference -> empty .

    IDENTIFIER      reduce using rule 79 (is_reference -> empty .)
    LPAREN          reduce using rule 79 (is_reference -> empty .)


state 141

    (203) scalar -> IDENTIFIER DOUBLE_QUOTE . encaps_list DOUBLE_QUOTE
    (264) encaps_list -> . encaps_list encaps_var
    (265) encaps_list -> . empty
    (269) encaps_list -> . encaps_list ENCAPSED_AND_WHITESPACE
    (275) empty -> .

    DOUBLE_QUOTE    reduce using rule 275 (empty -> .)
    ENCAPSED_AND_WHITESPACE reduce using rule 275 (empty -> .)
    VARIABLE        reduce using rule 275 (empty -> .)
    DOLLAR_OPEN_CURLY_BRACES reduce using rule 275 (empty -> .)
    CURLY_OPEN      reduce using rule 275 (empty -> .)

    encaps_list                    shift and go to state 265
    empty                          shift and go to state 191

state 142

    (213) common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .

    SEMI_COLON      reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    LBRACE          reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    BOOLEAN_AND     reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    BOOLEAN_OR      reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    LOGICAL_AND     reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    LOGICAL_OR      reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    LOGICAL_XOR     reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    AND             reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    OR              reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    XOR             reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    CONCAT          reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    PLUS            reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    MINUS           reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    MUL             reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    DIV             reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    SL              reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    SR              reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    MOD             reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    IS_IDENTICAL    reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    IS_NOT_IDENTICAL reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    IS_EQUAL_TO     reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    IS_NOT_EQUAL    reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    LESS_THAN       reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    LESS_THAN_OR_EQUAL reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    GREATER_THAN    reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    GRATER_THAN_OR_EQUAL reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    INSTANCEOF      reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    SPACESHIP       reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    QUESTION        reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    RPAREN          reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    COMMA           reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    DOUBLE_ARROW    reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    RBRACE          reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    COLON           reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    RBRACKET        reduce using rule 213 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)


state 143

    (101) function_call -> IDENTIFIER fucntion_call_body .

    EQUALS          reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    PLUS_EQUAL      reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    MINUS_EQUAL     reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    MUL_EQUAL       reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    DIV_EQUAL       reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    CONCAT_EQUAL    reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    MOD_EQUAL       reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    AND_EQUAL       reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    OR_EQUAL        reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    XOR_EQUAL       reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    SL_EQUAL        reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    SR_EQUAL        reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    INC             reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    DEC             reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    SEMI_COLON      reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    LBRACE          reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    BOOLEAN_AND     reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    BOOLEAN_OR      reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    LOGICAL_AND     reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    LOGICAL_OR      reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    LOGICAL_XOR     reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    AND             reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    OR              reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    XOR             reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    CONCAT          reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    PLUS            reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    MINUS           reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    MUL             reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    DIV             reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    SL              reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    SR              reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    MOD             reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    IS_IDENTICAL    reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    IS_NOT_IDENTICAL reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    IS_EQUAL_TO     reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    IS_NOT_EQUAL    reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    LESS_THAN       reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    LESS_THAN_OR_EQUAL reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    GREATER_THAN    reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    GRATER_THAN_OR_EQUAL reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    INSTANCEOF      reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    SPACESHIP       reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    QUESTION        reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    RPAREN          reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    COMMA           reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    DOUBLE_ARROW    reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    RBRACE          reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    COLON           reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)
    RBRACKET        reduce using rule 101 (function_call -> IDENTIFIER fucntion_call_body .)


state 144

    (102) fucntion_call_body -> LPAREN . function_call_parameter_list RPAREN
    (122) function_call_parameter_list -> . function_call_parameter_list COMMA function_call_parameter
    (123) function_call_parameter_list -> . function_call_parameter
    (124) function_call_parameter_list -> . empty
    (125) function_call_parameter -> . expr
    (126) function_call_parameter -> . AND variable
    (275) empty -> .
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    AND             shift and go to state 270
    RPAREN          reduce using rule 275 (empty -> .)
    COMMA           reduce using rule 275 (empty -> .)
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    function_call_parameter_list   shift and go to state 266
    function_call_parameter        shift and go to state 267
    empty                          shift and go to state 268
    expr                           shift and go to state 269
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 145

    (89) expr -> variable EQUALS . expr
    (90) expr -> variable EQUALS . AND expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    AND             shift and go to state 272
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    variable                       shift and go to state 28
    expr                           shift and go to state 271
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 146

    (128) expr -> variable PLUS_EQUAL . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    variable                       shift and go to state 28
    expr                           shift and go to state 273
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 147

    (129) expr -> variable MINUS_EQUAL . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    variable                       shift and go to state 28
    expr                           shift and go to state 274
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 148

    (130) expr -> variable MUL_EQUAL . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    variable                       shift and go to state 28
    expr                           shift and go to state 275
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 149

    (131) expr -> variable DIV_EQUAL . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    variable                       shift and go to state 28
    expr                           shift and go to state 276
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 150

    (132) expr -> variable CONCAT_EQUAL . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    variable                       shift and go to state 28
    expr                           shift and go to state 277
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 151

    (133) expr -> variable MOD_EQUAL . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    variable                       shift and go to state 28
    expr                           shift and go to state 278
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 152

    (134) expr -> variable AND_EQUAL . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    variable                       shift and go to state 28
    expr                           shift and go to state 279
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 153

    (135) expr -> variable OR_EQUAL . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    variable                       shift and go to state 28
    expr                           shift and go to state 280
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 154

    (136) expr -> variable XOR_EQUAL . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    variable                       shift and go to state 28
    expr                           shift and go to state 281
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 155

    (137) expr -> variable SL_EQUAL . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    variable                       shift and go to state 28
    expr                           shift and go to state 282
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 156

    (138) expr -> variable SR_EQUAL . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    variable                       shift and go to state 28
    expr                           shift and go to state 283
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 157

    (174) expr -> variable INC .

    SEMI_COLON      reduce using rule 174 (expr -> variable INC .)
    LBRACE          reduce using rule 174 (expr -> variable INC .)
    BOOLEAN_AND     reduce using rule 174 (expr -> variable INC .)
    BOOLEAN_OR      reduce using rule 174 (expr -> variable INC .)
    LOGICAL_AND     reduce using rule 174 (expr -> variable INC .)
    LOGICAL_OR      reduce using rule 174 (expr -> variable INC .)
    LOGICAL_XOR     reduce using rule 174 (expr -> variable INC .)
    AND             reduce using rule 174 (expr -> variable INC .)
    OR              reduce using rule 174 (expr -> variable INC .)
    XOR             reduce using rule 174 (expr -> variable INC .)
    CONCAT          reduce using rule 174 (expr -> variable INC .)
    PLUS            reduce using rule 174 (expr -> variable INC .)
    MINUS           reduce using rule 174 (expr -> variable INC .)
    MUL             reduce using rule 174 (expr -> variable INC .)
    DIV             reduce using rule 174 (expr -> variable INC .)
    SL              reduce using rule 174 (expr -> variable INC .)
    SR              reduce using rule 174 (expr -> variable INC .)
    MOD             reduce using rule 174 (expr -> variable INC .)
    IS_IDENTICAL    reduce using rule 174 (expr -> variable INC .)
    IS_NOT_IDENTICAL reduce using rule 174 (expr -> variable INC .)
    IS_EQUAL_TO     reduce using rule 174 (expr -> variable INC .)
    IS_NOT_EQUAL    reduce using rule 174 (expr -> variable INC .)
    LESS_THAN       reduce using rule 174 (expr -> variable INC .)
    LESS_THAN_OR_EQUAL reduce using rule 174 (expr -> variable INC .)
    GREATER_THAN    reduce using rule 174 (expr -> variable INC .)
    GRATER_THAN_OR_EQUAL reduce using rule 174 (expr -> variable INC .)
    INSTANCEOF      reduce using rule 174 (expr -> variable INC .)
    SPACESHIP       reduce using rule 174 (expr -> variable INC .)
    QUESTION        reduce using rule 174 (expr -> variable INC .)
    RPAREN          reduce using rule 174 (expr -> variable INC .)
    COMMA           reduce using rule 174 (expr -> variable INC .)
    DOUBLE_ARROW    reduce using rule 174 (expr -> variable INC .)
    RBRACE          reduce using rule 174 (expr -> variable INC .)
    COLON           reduce using rule 174 (expr -> variable INC .)
    RBRACKET        reduce using rule 174 (expr -> variable INC .)


state 158

    (175) expr -> variable DEC .

    SEMI_COLON      reduce using rule 175 (expr -> variable DEC .)
    LBRACE          reduce using rule 175 (expr -> variable DEC .)
    BOOLEAN_AND     reduce using rule 175 (expr -> variable DEC .)
    BOOLEAN_OR      reduce using rule 175 (expr -> variable DEC .)
    LOGICAL_AND     reduce using rule 175 (expr -> variable DEC .)
    LOGICAL_OR      reduce using rule 175 (expr -> variable DEC .)
    LOGICAL_XOR     reduce using rule 175 (expr -> variable DEC .)
    AND             reduce using rule 175 (expr -> variable DEC .)
    OR              reduce using rule 175 (expr -> variable DEC .)
    XOR             reduce using rule 175 (expr -> variable DEC .)
    CONCAT          reduce using rule 175 (expr -> variable DEC .)
    PLUS            reduce using rule 175 (expr -> variable DEC .)
    MINUS           reduce using rule 175 (expr -> variable DEC .)
    MUL             reduce using rule 175 (expr -> variable DEC .)
    DIV             reduce using rule 175 (expr -> variable DEC .)
    SL              reduce using rule 175 (expr -> variable DEC .)
    SR              reduce using rule 175 (expr -> variable DEC .)
    MOD             reduce using rule 175 (expr -> variable DEC .)
    IS_IDENTICAL    reduce using rule 175 (expr -> variable DEC .)
    IS_NOT_IDENTICAL reduce using rule 175 (expr -> variable DEC .)
    IS_EQUAL_TO     reduce using rule 175 (expr -> variable DEC .)
    IS_NOT_EQUAL    reduce using rule 175 (expr -> variable DEC .)
    LESS_THAN       reduce using rule 175 (expr -> variable DEC .)
    LESS_THAN_OR_EQUAL reduce using rule 175 (expr -> variable DEC .)
    GREATER_THAN    reduce using rule 175 (expr -> variable DEC .)
    GRATER_THAN_OR_EQUAL reduce using rule 175 (expr -> variable DEC .)
    INSTANCEOF      reduce using rule 175 (expr -> variable DEC .)
    SPACESHIP       reduce using rule 175 (expr -> variable DEC .)
    QUESTION        reduce using rule 175 (expr -> variable DEC .)
    RPAREN          reduce using rule 175 (expr -> variable DEC .)
    COMMA           reduce using rule 175 (expr -> variable DEC .)
    DOUBLE_ARROW    reduce using rule 175 (expr -> variable DEC .)
    RBRACE          reduce using rule 175 (expr -> variable DEC .)
    COLON           reduce using rule 175 (expr -> variable DEC .)
    RBRACKET        reduce using rule 175 (expr -> variable DEC .)


state 159

    (91) expr -> CLONE expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 91 (expr -> CLONE expr .)
    LBRACE          reduce using rule 91 (expr -> CLONE expr .)
    BOOLEAN_AND     reduce using rule 91 (expr -> CLONE expr .)
    BOOLEAN_OR      reduce using rule 91 (expr -> CLONE expr .)
    LOGICAL_AND     reduce using rule 91 (expr -> CLONE expr .)
    LOGICAL_OR      reduce using rule 91 (expr -> CLONE expr .)
    LOGICAL_XOR     reduce using rule 91 (expr -> CLONE expr .)
    AND             reduce using rule 91 (expr -> CLONE expr .)
    OR              reduce using rule 91 (expr -> CLONE expr .)
    XOR             reduce using rule 91 (expr -> CLONE expr .)
    CONCAT          reduce using rule 91 (expr -> CLONE expr .)
    PLUS            reduce using rule 91 (expr -> CLONE expr .)
    MINUS           reduce using rule 91 (expr -> CLONE expr .)
    MUL             reduce using rule 91 (expr -> CLONE expr .)
    DIV             reduce using rule 91 (expr -> CLONE expr .)
    SL              reduce using rule 91 (expr -> CLONE expr .)
    SR              reduce using rule 91 (expr -> CLONE expr .)
    MOD             reduce using rule 91 (expr -> CLONE expr .)
    IS_IDENTICAL    reduce using rule 91 (expr -> CLONE expr .)
    IS_NOT_IDENTICAL reduce using rule 91 (expr -> CLONE expr .)
    IS_EQUAL_TO     reduce using rule 91 (expr -> CLONE expr .)
    IS_NOT_EQUAL    reduce using rule 91 (expr -> CLONE expr .)
    LESS_THAN       reduce using rule 91 (expr -> CLONE expr .)
    LESS_THAN_OR_EQUAL reduce using rule 91 (expr -> CLONE expr .)
    GREATER_THAN    reduce using rule 91 (expr -> CLONE expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 91 (expr -> CLONE expr .)
    INSTANCEOF      reduce using rule 91 (expr -> CLONE expr .)
    SPACESHIP       reduce using rule 91 (expr -> CLONE expr .)
    QUESTION        reduce using rule 91 (expr -> CLONE expr .)
    RPAREN          reduce using rule 91 (expr -> CLONE expr .)
    COMMA           reduce using rule 91 (expr -> CLONE expr .)
    DOUBLE_ARROW    reduce using rule 91 (expr -> CLONE expr .)
    RBRACE          reduce using rule 91 (expr -> CLONE expr .)
    COLON           reduce using rule 91 (expr -> CLONE expr .)
    RBRACKET        reduce using rule 91 (expr -> CLONE expr .)

  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! CONCAT          [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! MUL             [ shift and go to state 102 ]
  ! DIV             [ shift and go to state 103 ]
  ! SL              [ shift and go to state 104 ]
  ! SR              [ shift and go to state 105 ]
  ! MOD             [ shift and go to state 106 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! INSTANCEOF      [ shift and go to state 115 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 160

    (92) expr -> LIST LPAREN . assignment_list RPAREN EQUALS expr
    (93) assignment_list -> . assignment_list COMMA assignment_list_element
    (94) assignment_list -> . assignment_list_element
    (95) assignment_list_element -> . variable
    (96) assignment_list_element -> . empty
    (97) assignment_list_element -> . LIST LPAREN assignment_list RPAREN
    (98) variable -> . base_variable_with_function_calls
    (275) empty -> .
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    LIST            shift and go to state 284
    RPAREN          reduce using rule 275 (empty -> .)
    COMMA           reduce using rule 275 (empty -> .)
    IDENTIFIER      shift and go to state 171
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    assignment_list                shift and go to state 285
    assignment_list_element        shift and go to state 286
    variable                       shift and go to state 287
    empty                          shift and go to state 288
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 161

    (112) expr -> ARRAY LPAREN . array_pair_list RPAREN
    (114) array_pair_list -> . empty
    (115) array_pair_list -> . non_empty_array_pair_list possible_comma
    (275) empty -> .
    (116) non_empty_array_pair_list -> . non_empty_array_pair_list COMMA expr DOUBLE_ARROW AND variable
    (117) non_empty_array_pair_list -> . non_empty_array_pair_list COMMA expr DOUBLE_ARROW expr
    (118) non_empty_array_pair_list -> . expr DOUBLE_ARROW AND variable
    (119) non_empty_array_pair_list -> . expr DOUBLE_ARROW expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    RPAREN          reduce using rule 275 (empty -> .)
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    array_pair_list                shift and go to state 289
    empty                          shift and go to state 163
    non_empty_array_pair_list      shift and go to state 164
    expr                           shift and go to state 165
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 162

    (113) expr -> LBRACKET array_pair_list . RBRACKET

    RBRACKET        shift and go to state 290


state 163

    (114) array_pair_list -> empty .

    RBRACKET        reduce using rule 114 (array_pair_list -> empty .)
    RPAREN          reduce using rule 114 (array_pair_list -> empty .)


state 164

    (115) array_pair_list -> non_empty_array_pair_list . possible_comma
    (116) non_empty_array_pair_list -> non_empty_array_pair_list . COMMA expr DOUBLE_ARROW AND variable
    (117) non_empty_array_pair_list -> non_empty_array_pair_list . COMMA expr DOUBLE_ARROW expr
    (120) possible_comma -> . empty
    (121) possible_comma -> . COMMA
    (275) empty -> .

    COMMA           shift and go to state 292
    RBRACKET        reduce using rule 275 (empty -> .)
    RPAREN          reduce using rule 275 (empty -> .)

    possible_comma                 shift and go to state 291
    empty                          shift and go to state 293

state 165

    (118) non_empty_array_pair_list -> expr . DOUBLE_ARROW AND variable
    (119) non_empty_array_pair_list -> expr . DOUBLE_ARROW expr
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    DOUBLE_ARROW    shift and go to state 294
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 166

    (166) expr -> PLUS expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 166 (expr -> PLUS expr .)
    LBRACE          reduce using rule 166 (expr -> PLUS expr .)
    BOOLEAN_AND     reduce using rule 166 (expr -> PLUS expr .)
    BOOLEAN_OR      reduce using rule 166 (expr -> PLUS expr .)
    LOGICAL_AND     reduce using rule 166 (expr -> PLUS expr .)
    LOGICAL_OR      reduce using rule 166 (expr -> PLUS expr .)
    LOGICAL_XOR     reduce using rule 166 (expr -> PLUS expr .)
    AND             reduce using rule 166 (expr -> PLUS expr .)
    OR              reduce using rule 166 (expr -> PLUS expr .)
    XOR             reduce using rule 166 (expr -> PLUS expr .)
    CONCAT          reduce using rule 166 (expr -> PLUS expr .)
    PLUS            reduce using rule 166 (expr -> PLUS expr .)
    MINUS           reduce using rule 166 (expr -> PLUS expr .)
    SL              reduce using rule 166 (expr -> PLUS expr .)
    SR              reduce using rule 166 (expr -> PLUS expr .)
    IS_IDENTICAL    reduce using rule 166 (expr -> PLUS expr .)
    IS_NOT_IDENTICAL reduce using rule 166 (expr -> PLUS expr .)
    IS_EQUAL_TO     reduce using rule 166 (expr -> PLUS expr .)
    IS_NOT_EQUAL    reduce using rule 166 (expr -> PLUS expr .)
    LESS_THAN       reduce using rule 166 (expr -> PLUS expr .)
    LESS_THAN_OR_EQUAL reduce using rule 166 (expr -> PLUS expr .)
    GREATER_THAN    reduce using rule 166 (expr -> PLUS expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 166 (expr -> PLUS expr .)
    SPACESHIP       reduce using rule 166 (expr -> PLUS expr .)
    QUESTION        reduce using rule 166 (expr -> PLUS expr .)
    RPAREN          reduce using rule 166 (expr -> PLUS expr .)
    COMMA           reduce using rule 166 (expr -> PLUS expr .)
    DOUBLE_ARROW    reduce using rule 166 (expr -> PLUS expr .)
    RBRACE          reduce using rule 166 (expr -> PLUS expr .)
    COLON           reduce using rule 166 (expr -> PLUS expr .)
    RBRACKET        reduce using rule 166 (expr -> PLUS expr .)
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    MOD             shift and go to state 106
    INSTANCEOF      shift and go to state 115

  ! MUL             [ reduce using rule 166 (expr -> PLUS expr .) ]
  ! DIV             [ reduce using rule 166 (expr -> PLUS expr .) ]
  ! MOD             [ reduce using rule 166 (expr -> PLUS expr .) ]
  ! INSTANCEOF      [ reduce using rule 166 (expr -> PLUS expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! CONCAT          [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! SL              [ shift and go to state 104 ]
  ! SR              [ shift and go to state 105 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 167

    (167) expr -> MINUS expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 167 (expr -> MINUS expr .)
    LBRACE          reduce using rule 167 (expr -> MINUS expr .)
    BOOLEAN_AND     reduce using rule 167 (expr -> MINUS expr .)
    BOOLEAN_OR      reduce using rule 167 (expr -> MINUS expr .)
    LOGICAL_AND     reduce using rule 167 (expr -> MINUS expr .)
    LOGICAL_OR      reduce using rule 167 (expr -> MINUS expr .)
    LOGICAL_XOR     reduce using rule 167 (expr -> MINUS expr .)
    AND             reduce using rule 167 (expr -> MINUS expr .)
    OR              reduce using rule 167 (expr -> MINUS expr .)
    XOR             reduce using rule 167 (expr -> MINUS expr .)
    CONCAT          reduce using rule 167 (expr -> MINUS expr .)
    PLUS            reduce using rule 167 (expr -> MINUS expr .)
    MINUS           reduce using rule 167 (expr -> MINUS expr .)
    SL              reduce using rule 167 (expr -> MINUS expr .)
    SR              reduce using rule 167 (expr -> MINUS expr .)
    IS_IDENTICAL    reduce using rule 167 (expr -> MINUS expr .)
    IS_NOT_IDENTICAL reduce using rule 167 (expr -> MINUS expr .)
    IS_EQUAL_TO     reduce using rule 167 (expr -> MINUS expr .)
    IS_NOT_EQUAL    reduce using rule 167 (expr -> MINUS expr .)
    LESS_THAN       reduce using rule 167 (expr -> MINUS expr .)
    LESS_THAN_OR_EQUAL reduce using rule 167 (expr -> MINUS expr .)
    GREATER_THAN    reduce using rule 167 (expr -> MINUS expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 167 (expr -> MINUS expr .)
    SPACESHIP       reduce using rule 167 (expr -> MINUS expr .)
    QUESTION        reduce using rule 167 (expr -> MINUS expr .)
    RPAREN          reduce using rule 167 (expr -> MINUS expr .)
    COMMA           reduce using rule 167 (expr -> MINUS expr .)
    DOUBLE_ARROW    reduce using rule 167 (expr -> MINUS expr .)
    RBRACE          reduce using rule 167 (expr -> MINUS expr .)
    COLON           reduce using rule 167 (expr -> MINUS expr .)
    RBRACKET        reduce using rule 167 (expr -> MINUS expr .)
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    MOD             shift and go to state 106
    INSTANCEOF      shift and go to state 115

  ! MUL             [ reduce using rule 167 (expr -> MINUS expr .) ]
  ! DIV             [ reduce using rule 167 (expr -> MINUS expr .) ]
  ! MOD             [ reduce using rule 167 (expr -> MINUS expr .) ]
  ! INSTANCEOF      [ reduce using rule 167 (expr -> MINUS expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! CONCAT          [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! SL              [ shift and go to state 104 ]
  ! SR              [ shift and go to state 105 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 168

    (168) expr -> NOT expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 168 (expr -> NOT expr .)
    LBRACE          reduce using rule 168 (expr -> NOT expr .)
    BOOLEAN_AND     reduce using rule 168 (expr -> NOT expr .)
    BOOLEAN_OR      reduce using rule 168 (expr -> NOT expr .)
    LOGICAL_AND     reduce using rule 168 (expr -> NOT expr .)
    LOGICAL_OR      reduce using rule 168 (expr -> NOT expr .)
    LOGICAL_XOR     reduce using rule 168 (expr -> NOT expr .)
    AND             reduce using rule 168 (expr -> NOT expr .)
    OR              reduce using rule 168 (expr -> NOT expr .)
    XOR             reduce using rule 168 (expr -> NOT expr .)
    CONCAT          reduce using rule 168 (expr -> NOT expr .)
    PLUS            reduce using rule 168 (expr -> NOT expr .)
    MINUS           reduce using rule 168 (expr -> NOT expr .)
    MUL             reduce using rule 168 (expr -> NOT expr .)
    DIV             reduce using rule 168 (expr -> NOT expr .)
    SL              reduce using rule 168 (expr -> NOT expr .)
    SR              reduce using rule 168 (expr -> NOT expr .)
    MOD             reduce using rule 168 (expr -> NOT expr .)
    IS_IDENTICAL    reduce using rule 168 (expr -> NOT expr .)
    IS_NOT_IDENTICAL reduce using rule 168 (expr -> NOT expr .)
    IS_EQUAL_TO     reduce using rule 168 (expr -> NOT expr .)
    IS_NOT_EQUAL    reduce using rule 168 (expr -> NOT expr .)
    LESS_THAN       reduce using rule 168 (expr -> NOT expr .)
    LESS_THAN_OR_EQUAL reduce using rule 168 (expr -> NOT expr .)
    GREATER_THAN    reduce using rule 168 (expr -> NOT expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 168 (expr -> NOT expr .)
    INSTANCEOF      reduce using rule 168 (expr -> NOT expr .)
    SPACESHIP       reduce using rule 168 (expr -> NOT expr .)
    QUESTION        reduce using rule 168 (expr -> NOT expr .)
    RPAREN          reduce using rule 168 (expr -> NOT expr .)
    COMMA           reduce using rule 168 (expr -> NOT expr .)
    DOUBLE_ARROW    reduce using rule 168 (expr -> NOT expr .)
    RBRACE          reduce using rule 168 (expr -> NOT expr .)
    COLON           reduce using rule 168 (expr -> NOT expr .)
    RBRACKET        reduce using rule 168 (expr -> NOT expr .)

  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! CONCAT          [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! MUL             [ shift and go to state 102 ]
  ! DIV             [ shift and go to state 103 ]
  ! SL              [ shift and go to state 104 ]
  ! SR              [ shift and go to state 105 ]
  ! MOD             [ shift and go to state 106 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! INSTANCEOF      [ shift and go to state 115 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 169

    (169) expr -> BOOLEAN_NOT expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    LBRACE          reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    BOOLEAN_AND     reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    BOOLEAN_OR      reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    LOGICAL_AND     reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    LOGICAL_OR      reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    LOGICAL_XOR     reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    AND             reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    OR              reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    XOR             reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    CONCAT          reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    PLUS            reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    MINUS           reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    MUL             reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    DIV             reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    SL              reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    SR              reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    MOD             reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    IS_IDENTICAL    reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    IS_NOT_IDENTICAL reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    IS_EQUAL_TO     reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    IS_NOT_EQUAL    reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    LESS_THAN       reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    LESS_THAN_OR_EQUAL reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    GREATER_THAN    reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    SPACESHIP       reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    QUESTION        reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    RPAREN          reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    COMMA           reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    DOUBLE_ARROW    reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    RBRACE          reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    COLON           reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    RBRACKET        reduce using rule 169 (expr -> BOOLEAN_NOT expr .)
    INSTANCEOF      shift and go to state 115

  ! INSTANCEOF      [ reduce using rule 169 (expr -> BOOLEAN_NOT expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! CONCAT          [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! MUL             [ shift and go to state 102 ]
  ! DIV             [ shift and go to state 103 ]
  ! SL              [ shift and go to state 104 ]
  ! SR              [ shift and go to state 105 ]
  ! MOD             [ shift and go to state 106 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 170

    (172) expr -> INC variable .

    SEMI_COLON      reduce using rule 172 (expr -> INC variable .)
    LBRACE          reduce using rule 172 (expr -> INC variable .)
    BOOLEAN_AND     reduce using rule 172 (expr -> INC variable .)
    BOOLEAN_OR      reduce using rule 172 (expr -> INC variable .)
    LOGICAL_AND     reduce using rule 172 (expr -> INC variable .)
    LOGICAL_OR      reduce using rule 172 (expr -> INC variable .)
    LOGICAL_XOR     reduce using rule 172 (expr -> INC variable .)
    AND             reduce using rule 172 (expr -> INC variable .)
    OR              reduce using rule 172 (expr -> INC variable .)
    XOR             reduce using rule 172 (expr -> INC variable .)
    CONCAT          reduce using rule 172 (expr -> INC variable .)
    PLUS            reduce using rule 172 (expr -> INC variable .)
    MINUS           reduce using rule 172 (expr -> INC variable .)
    MUL             reduce using rule 172 (expr -> INC variable .)
    DIV             reduce using rule 172 (expr -> INC variable .)
    SL              reduce using rule 172 (expr -> INC variable .)
    SR              reduce using rule 172 (expr -> INC variable .)
    MOD             reduce using rule 172 (expr -> INC variable .)
    IS_IDENTICAL    reduce using rule 172 (expr -> INC variable .)
    IS_NOT_IDENTICAL reduce using rule 172 (expr -> INC variable .)
    IS_EQUAL_TO     reduce using rule 172 (expr -> INC variable .)
    IS_NOT_EQUAL    reduce using rule 172 (expr -> INC variable .)
    LESS_THAN       reduce using rule 172 (expr -> INC variable .)
    LESS_THAN_OR_EQUAL reduce using rule 172 (expr -> INC variable .)
    GREATER_THAN    reduce using rule 172 (expr -> INC variable .)
    GRATER_THAN_OR_EQUAL reduce using rule 172 (expr -> INC variable .)
    INSTANCEOF      reduce using rule 172 (expr -> INC variable .)
    SPACESHIP       reduce using rule 172 (expr -> INC variable .)
    QUESTION        reduce using rule 172 (expr -> INC variable .)
    RPAREN          reduce using rule 172 (expr -> INC variable .)
    COMMA           reduce using rule 172 (expr -> INC variable .)
    DOUBLE_ARROW    reduce using rule 172 (expr -> INC variable .)
    RBRACE          reduce using rule 172 (expr -> INC variable .)
    COLON           reduce using rule 172 (expr -> INC variable .)
    RBRACKET        reduce using rule 172 (expr -> INC variable .)


state 171

    (101) function_call -> IDENTIFIER . fucntion_call_body
    (102) fucntion_call_body -> . LPAREN function_call_parameter_list RPAREN

    LPAREN          shift and go to state 144

    fucntion_call_body             shift and go to state 143

state 172

    (173) expr -> DEC variable .

    SEMI_COLON      reduce using rule 173 (expr -> DEC variable .)
    LBRACE          reduce using rule 173 (expr -> DEC variable .)
    BOOLEAN_AND     reduce using rule 173 (expr -> DEC variable .)
    BOOLEAN_OR      reduce using rule 173 (expr -> DEC variable .)
    LOGICAL_AND     reduce using rule 173 (expr -> DEC variable .)
    LOGICAL_OR      reduce using rule 173 (expr -> DEC variable .)
    LOGICAL_XOR     reduce using rule 173 (expr -> DEC variable .)
    AND             reduce using rule 173 (expr -> DEC variable .)
    OR              reduce using rule 173 (expr -> DEC variable .)
    XOR             reduce using rule 173 (expr -> DEC variable .)
    CONCAT          reduce using rule 173 (expr -> DEC variable .)
    PLUS            reduce using rule 173 (expr -> DEC variable .)
    MINUS           reduce using rule 173 (expr -> DEC variable .)
    MUL             reduce using rule 173 (expr -> DEC variable .)
    DIV             reduce using rule 173 (expr -> DEC variable .)
    SL              reduce using rule 173 (expr -> DEC variable .)
    SR              reduce using rule 173 (expr -> DEC variable .)
    MOD             reduce using rule 173 (expr -> DEC variable .)
    IS_IDENTICAL    reduce using rule 173 (expr -> DEC variable .)
    IS_NOT_IDENTICAL reduce using rule 173 (expr -> DEC variable .)
    IS_EQUAL_TO     reduce using rule 173 (expr -> DEC variable .)
    IS_NOT_EQUAL    reduce using rule 173 (expr -> DEC variable .)
    LESS_THAN       reduce using rule 173 (expr -> DEC variable .)
    LESS_THAN_OR_EQUAL reduce using rule 173 (expr -> DEC variable .)
    GREATER_THAN    reduce using rule 173 (expr -> DEC variable .)
    GRATER_THAN_OR_EQUAL reduce using rule 173 (expr -> DEC variable .)
    INSTANCEOF      reduce using rule 173 (expr -> DEC variable .)
    SPACESHIP       reduce using rule 173 (expr -> DEC variable .)
    QUESTION        reduce using rule 173 (expr -> DEC variable .)
    RPAREN          reduce using rule 173 (expr -> DEC variable .)
    COMMA           reduce using rule 173 (expr -> DEC variable .)
    DOUBLE_ARROW    reduce using rule 173 (expr -> DEC variable .)
    RBRACE          reduce using rule 173 (expr -> DEC variable .)
    COLON           reduce using rule 173 (expr -> DEC variable .)
    RBRACKET        reduce using rule 173 (expr -> DEC variable .)


state 173

    (176) expr -> INT_CAST expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 176 (expr -> INT_CAST expr .)
    LBRACE          reduce using rule 176 (expr -> INT_CAST expr .)
    BOOLEAN_AND     reduce using rule 176 (expr -> INT_CAST expr .)
    BOOLEAN_OR      reduce using rule 176 (expr -> INT_CAST expr .)
    LOGICAL_AND     reduce using rule 176 (expr -> INT_CAST expr .)
    LOGICAL_OR      reduce using rule 176 (expr -> INT_CAST expr .)
    LOGICAL_XOR     reduce using rule 176 (expr -> INT_CAST expr .)
    AND             reduce using rule 176 (expr -> INT_CAST expr .)
    OR              reduce using rule 176 (expr -> INT_CAST expr .)
    XOR             reduce using rule 176 (expr -> INT_CAST expr .)
    CONCAT          reduce using rule 176 (expr -> INT_CAST expr .)
    PLUS            reduce using rule 176 (expr -> INT_CAST expr .)
    MINUS           reduce using rule 176 (expr -> INT_CAST expr .)
    MUL             reduce using rule 176 (expr -> INT_CAST expr .)
    DIV             reduce using rule 176 (expr -> INT_CAST expr .)
    SL              reduce using rule 176 (expr -> INT_CAST expr .)
    SR              reduce using rule 176 (expr -> INT_CAST expr .)
    MOD             reduce using rule 176 (expr -> INT_CAST expr .)
    IS_IDENTICAL    reduce using rule 176 (expr -> INT_CAST expr .)
    IS_NOT_IDENTICAL reduce using rule 176 (expr -> INT_CAST expr .)
    IS_EQUAL_TO     reduce using rule 176 (expr -> INT_CAST expr .)
    IS_NOT_EQUAL    reduce using rule 176 (expr -> INT_CAST expr .)
    LESS_THAN       reduce using rule 176 (expr -> INT_CAST expr .)
    LESS_THAN_OR_EQUAL reduce using rule 176 (expr -> INT_CAST expr .)
    GREATER_THAN    reduce using rule 176 (expr -> INT_CAST expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 176 (expr -> INT_CAST expr .)
    INSTANCEOF      reduce using rule 176 (expr -> INT_CAST expr .)
    SPACESHIP       reduce using rule 176 (expr -> INT_CAST expr .)
    QUESTION        reduce using rule 176 (expr -> INT_CAST expr .)
    RPAREN          reduce using rule 176 (expr -> INT_CAST expr .)
    COMMA           reduce using rule 176 (expr -> INT_CAST expr .)
    DOUBLE_ARROW    reduce using rule 176 (expr -> INT_CAST expr .)
    RBRACE          reduce using rule 176 (expr -> INT_CAST expr .)
    COLON           reduce using rule 176 (expr -> INT_CAST expr .)
    RBRACKET        reduce using rule 176 (expr -> INT_CAST expr .)

  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! CONCAT          [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! MUL             [ shift and go to state 102 ]
  ! DIV             [ shift and go to state 103 ]
  ! SL              [ shift and go to state 104 ]
  ! SR              [ shift and go to state 105 ]
  ! MOD             [ shift and go to state 106 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! INSTANCEOF      [ shift and go to state 115 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 174

    (177) expr -> ARRAY_CAST expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 177 (expr -> ARRAY_CAST expr .)
    LBRACE          reduce using rule 177 (expr -> ARRAY_CAST expr .)
    BOOLEAN_AND     reduce using rule 177 (expr -> ARRAY_CAST expr .)
    BOOLEAN_OR      reduce using rule 177 (expr -> ARRAY_CAST expr .)
    LOGICAL_AND     reduce using rule 177 (expr -> ARRAY_CAST expr .)
    LOGICAL_OR      reduce using rule 177 (expr -> ARRAY_CAST expr .)
    LOGICAL_XOR     reduce using rule 177 (expr -> ARRAY_CAST expr .)
    AND             reduce using rule 177 (expr -> ARRAY_CAST expr .)
    OR              reduce using rule 177 (expr -> ARRAY_CAST expr .)
    XOR             reduce using rule 177 (expr -> ARRAY_CAST expr .)
    CONCAT          reduce using rule 177 (expr -> ARRAY_CAST expr .)
    PLUS            reduce using rule 177 (expr -> ARRAY_CAST expr .)
    MINUS           reduce using rule 177 (expr -> ARRAY_CAST expr .)
    MUL             reduce using rule 177 (expr -> ARRAY_CAST expr .)
    DIV             reduce using rule 177 (expr -> ARRAY_CAST expr .)
    SL              reduce using rule 177 (expr -> ARRAY_CAST expr .)
    SR              reduce using rule 177 (expr -> ARRAY_CAST expr .)
    MOD             reduce using rule 177 (expr -> ARRAY_CAST expr .)
    IS_IDENTICAL    reduce using rule 177 (expr -> ARRAY_CAST expr .)
    IS_NOT_IDENTICAL reduce using rule 177 (expr -> ARRAY_CAST expr .)
    IS_EQUAL_TO     reduce using rule 177 (expr -> ARRAY_CAST expr .)
    IS_NOT_EQUAL    reduce using rule 177 (expr -> ARRAY_CAST expr .)
    LESS_THAN       reduce using rule 177 (expr -> ARRAY_CAST expr .)
    LESS_THAN_OR_EQUAL reduce using rule 177 (expr -> ARRAY_CAST expr .)
    GREATER_THAN    reduce using rule 177 (expr -> ARRAY_CAST expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 177 (expr -> ARRAY_CAST expr .)
    INSTANCEOF      reduce using rule 177 (expr -> ARRAY_CAST expr .)
    SPACESHIP       reduce using rule 177 (expr -> ARRAY_CAST expr .)
    QUESTION        reduce using rule 177 (expr -> ARRAY_CAST expr .)
    RPAREN          reduce using rule 177 (expr -> ARRAY_CAST expr .)
    COMMA           reduce using rule 177 (expr -> ARRAY_CAST expr .)
    DOUBLE_ARROW    reduce using rule 177 (expr -> ARRAY_CAST expr .)
    RBRACE          reduce using rule 177 (expr -> ARRAY_CAST expr .)
    COLON           reduce using rule 177 (expr -> ARRAY_CAST expr .)
    RBRACKET        reduce using rule 177 (expr -> ARRAY_CAST expr .)

  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! CONCAT          [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! MUL             [ shift and go to state 102 ]
  ! DIV             [ shift and go to state 103 ]
  ! SL              [ shift and go to state 104 ]
  ! SR              [ shift and go to state 105 ]
  ! MOD             [ shift and go to state 106 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! INSTANCEOF      [ shift and go to state 115 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 175

    (178) expr -> STRING_CAST expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 178 (expr -> STRING_CAST expr .)
    LBRACE          reduce using rule 178 (expr -> STRING_CAST expr .)
    BOOLEAN_AND     reduce using rule 178 (expr -> STRING_CAST expr .)
    BOOLEAN_OR      reduce using rule 178 (expr -> STRING_CAST expr .)
    LOGICAL_AND     reduce using rule 178 (expr -> STRING_CAST expr .)
    LOGICAL_OR      reduce using rule 178 (expr -> STRING_CAST expr .)
    LOGICAL_XOR     reduce using rule 178 (expr -> STRING_CAST expr .)
    AND             reduce using rule 178 (expr -> STRING_CAST expr .)
    OR              reduce using rule 178 (expr -> STRING_CAST expr .)
    XOR             reduce using rule 178 (expr -> STRING_CAST expr .)
    CONCAT          reduce using rule 178 (expr -> STRING_CAST expr .)
    PLUS            reduce using rule 178 (expr -> STRING_CAST expr .)
    MINUS           reduce using rule 178 (expr -> STRING_CAST expr .)
    MUL             reduce using rule 178 (expr -> STRING_CAST expr .)
    DIV             reduce using rule 178 (expr -> STRING_CAST expr .)
    SL              reduce using rule 178 (expr -> STRING_CAST expr .)
    SR              reduce using rule 178 (expr -> STRING_CAST expr .)
    MOD             reduce using rule 178 (expr -> STRING_CAST expr .)
    IS_IDENTICAL    reduce using rule 178 (expr -> STRING_CAST expr .)
    IS_NOT_IDENTICAL reduce using rule 178 (expr -> STRING_CAST expr .)
    IS_EQUAL_TO     reduce using rule 178 (expr -> STRING_CAST expr .)
    IS_NOT_EQUAL    reduce using rule 178 (expr -> STRING_CAST expr .)
    LESS_THAN       reduce using rule 178 (expr -> STRING_CAST expr .)
    LESS_THAN_OR_EQUAL reduce using rule 178 (expr -> STRING_CAST expr .)
    GREATER_THAN    reduce using rule 178 (expr -> STRING_CAST expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 178 (expr -> STRING_CAST expr .)
    INSTANCEOF      reduce using rule 178 (expr -> STRING_CAST expr .)
    SPACESHIP       reduce using rule 178 (expr -> STRING_CAST expr .)
    QUESTION        reduce using rule 178 (expr -> STRING_CAST expr .)
    RPAREN          reduce using rule 178 (expr -> STRING_CAST expr .)
    COMMA           reduce using rule 178 (expr -> STRING_CAST expr .)
    DOUBLE_ARROW    reduce using rule 178 (expr -> STRING_CAST expr .)
    RBRACE          reduce using rule 178 (expr -> STRING_CAST expr .)
    COLON           reduce using rule 178 (expr -> STRING_CAST expr .)
    RBRACKET        reduce using rule 178 (expr -> STRING_CAST expr .)

  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! CONCAT          [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! MUL             [ shift and go to state 102 ]
  ! DIV             [ shift and go to state 103 ]
  ! SL              [ shift and go to state 104 ]
  ! SR              [ shift and go to state 105 ]
  ! MOD             [ shift and go to state 106 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! INSTANCEOF      [ shift and go to state 115 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 176

    (179) expr -> DOUBLE_CAST expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    LBRACE          reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    BOOLEAN_AND     reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    BOOLEAN_OR      reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    LOGICAL_AND     reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    LOGICAL_OR      reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    LOGICAL_XOR     reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    AND             reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    OR              reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    XOR             reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    CONCAT          reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    PLUS            reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    MINUS           reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    MUL             reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    DIV             reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    SL              reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    SR              reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    MOD             reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    IS_IDENTICAL    reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    IS_NOT_IDENTICAL reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    IS_EQUAL_TO     reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    IS_NOT_EQUAL    reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    LESS_THAN       reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    LESS_THAN_OR_EQUAL reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    GREATER_THAN    reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    INSTANCEOF      reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    SPACESHIP       reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    QUESTION        reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    RPAREN          reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    COMMA           reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    DOUBLE_ARROW    reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    RBRACE          reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    COLON           reduce using rule 179 (expr -> DOUBLE_CAST expr .)
    RBRACKET        reduce using rule 179 (expr -> DOUBLE_CAST expr .)

  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! CONCAT          [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! MUL             [ shift and go to state 102 ]
  ! DIV             [ shift and go to state 103 ]
  ! SL              [ shift and go to state 104 ]
  ! SR              [ shift and go to state 105 ]
  ! MOD             [ shift and go to state 106 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! INSTANCEOF      [ shift and go to state 115 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 177

    (180) expr -> BOOL_CAST expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 180 (expr -> BOOL_CAST expr .)
    LBRACE          reduce using rule 180 (expr -> BOOL_CAST expr .)
    BOOLEAN_AND     reduce using rule 180 (expr -> BOOL_CAST expr .)
    BOOLEAN_OR      reduce using rule 180 (expr -> BOOL_CAST expr .)
    LOGICAL_AND     reduce using rule 180 (expr -> BOOL_CAST expr .)
    LOGICAL_OR      reduce using rule 180 (expr -> BOOL_CAST expr .)
    LOGICAL_XOR     reduce using rule 180 (expr -> BOOL_CAST expr .)
    AND             reduce using rule 180 (expr -> BOOL_CAST expr .)
    OR              reduce using rule 180 (expr -> BOOL_CAST expr .)
    XOR             reduce using rule 180 (expr -> BOOL_CAST expr .)
    CONCAT          reduce using rule 180 (expr -> BOOL_CAST expr .)
    PLUS            reduce using rule 180 (expr -> BOOL_CAST expr .)
    MINUS           reduce using rule 180 (expr -> BOOL_CAST expr .)
    MUL             reduce using rule 180 (expr -> BOOL_CAST expr .)
    DIV             reduce using rule 180 (expr -> BOOL_CAST expr .)
    SL              reduce using rule 180 (expr -> BOOL_CAST expr .)
    SR              reduce using rule 180 (expr -> BOOL_CAST expr .)
    MOD             reduce using rule 180 (expr -> BOOL_CAST expr .)
    IS_IDENTICAL    reduce using rule 180 (expr -> BOOL_CAST expr .)
    IS_NOT_IDENTICAL reduce using rule 180 (expr -> BOOL_CAST expr .)
    IS_EQUAL_TO     reduce using rule 180 (expr -> BOOL_CAST expr .)
    IS_NOT_EQUAL    reduce using rule 180 (expr -> BOOL_CAST expr .)
    LESS_THAN       reduce using rule 180 (expr -> BOOL_CAST expr .)
    LESS_THAN_OR_EQUAL reduce using rule 180 (expr -> BOOL_CAST expr .)
    GREATER_THAN    reduce using rule 180 (expr -> BOOL_CAST expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 180 (expr -> BOOL_CAST expr .)
    INSTANCEOF      reduce using rule 180 (expr -> BOOL_CAST expr .)
    SPACESHIP       reduce using rule 180 (expr -> BOOL_CAST expr .)
    QUESTION        reduce using rule 180 (expr -> BOOL_CAST expr .)
    RPAREN          reduce using rule 180 (expr -> BOOL_CAST expr .)
    COMMA           reduce using rule 180 (expr -> BOOL_CAST expr .)
    DOUBLE_ARROW    reduce using rule 180 (expr -> BOOL_CAST expr .)
    RBRACE          reduce using rule 180 (expr -> BOOL_CAST expr .)
    COLON           reduce using rule 180 (expr -> BOOL_CAST expr .)
    RBRACKET        reduce using rule 180 (expr -> BOOL_CAST expr .)

  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! CONCAT          [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! MUL             [ shift and go to state 102 ]
  ! DIV             [ shift and go to state 103 ]
  ! SL              [ shift and go to state 104 ]
  ! SR              [ shift and go to state 105 ]
  ! MOD             [ shift and go to state 106 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! INSTANCEOF      [ shift and go to state 115 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 178

    (181) expr -> UNSET_CAST expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 181 (expr -> UNSET_CAST expr .)
    LBRACE          reduce using rule 181 (expr -> UNSET_CAST expr .)
    BOOLEAN_AND     reduce using rule 181 (expr -> UNSET_CAST expr .)
    BOOLEAN_OR      reduce using rule 181 (expr -> UNSET_CAST expr .)
    LOGICAL_AND     reduce using rule 181 (expr -> UNSET_CAST expr .)
    LOGICAL_OR      reduce using rule 181 (expr -> UNSET_CAST expr .)
    LOGICAL_XOR     reduce using rule 181 (expr -> UNSET_CAST expr .)
    AND             reduce using rule 181 (expr -> UNSET_CAST expr .)
    OR              reduce using rule 181 (expr -> UNSET_CAST expr .)
    XOR             reduce using rule 181 (expr -> UNSET_CAST expr .)
    CONCAT          reduce using rule 181 (expr -> UNSET_CAST expr .)
    PLUS            reduce using rule 181 (expr -> UNSET_CAST expr .)
    MINUS           reduce using rule 181 (expr -> UNSET_CAST expr .)
    MUL             reduce using rule 181 (expr -> UNSET_CAST expr .)
    DIV             reduce using rule 181 (expr -> UNSET_CAST expr .)
    SL              reduce using rule 181 (expr -> UNSET_CAST expr .)
    SR              reduce using rule 181 (expr -> UNSET_CAST expr .)
    MOD             reduce using rule 181 (expr -> UNSET_CAST expr .)
    IS_IDENTICAL    reduce using rule 181 (expr -> UNSET_CAST expr .)
    IS_NOT_IDENTICAL reduce using rule 181 (expr -> UNSET_CAST expr .)
    IS_EQUAL_TO     reduce using rule 181 (expr -> UNSET_CAST expr .)
    IS_NOT_EQUAL    reduce using rule 181 (expr -> UNSET_CAST expr .)
    LESS_THAN       reduce using rule 181 (expr -> UNSET_CAST expr .)
    LESS_THAN_OR_EQUAL reduce using rule 181 (expr -> UNSET_CAST expr .)
    GREATER_THAN    reduce using rule 181 (expr -> UNSET_CAST expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 181 (expr -> UNSET_CAST expr .)
    INSTANCEOF      reduce using rule 181 (expr -> UNSET_CAST expr .)
    SPACESHIP       reduce using rule 181 (expr -> UNSET_CAST expr .)
    QUESTION        reduce using rule 181 (expr -> UNSET_CAST expr .)
    RPAREN          reduce using rule 181 (expr -> UNSET_CAST expr .)
    COMMA           reduce using rule 181 (expr -> UNSET_CAST expr .)
    DOUBLE_ARROW    reduce using rule 181 (expr -> UNSET_CAST expr .)
    RBRACE          reduce using rule 181 (expr -> UNSET_CAST expr .)
    COLON           reduce using rule 181 (expr -> UNSET_CAST expr .)
    RBRACKET        reduce using rule 181 (expr -> UNSET_CAST expr .)

  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! CONCAT          [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! MUL             [ shift and go to state 102 ]
  ! DIV             [ shift and go to state 103 ]
  ! SL              [ shift and go to state 104 ]
  ! SR              [ shift and go to state 105 ]
  ! MOD             [ shift and go to state 106 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! INSTANCEOF      [ shift and go to state 115 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 179

    (182) expr -> BINARY_CAST expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 182 (expr -> BINARY_CAST expr .)
    LBRACE          reduce using rule 182 (expr -> BINARY_CAST expr .)
    BOOLEAN_AND     reduce using rule 182 (expr -> BINARY_CAST expr .)
    BOOLEAN_OR      reduce using rule 182 (expr -> BINARY_CAST expr .)
    LOGICAL_AND     reduce using rule 182 (expr -> BINARY_CAST expr .)
    LOGICAL_OR      reduce using rule 182 (expr -> BINARY_CAST expr .)
    LOGICAL_XOR     reduce using rule 182 (expr -> BINARY_CAST expr .)
    AND             reduce using rule 182 (expr -> BINARY_CAST expr .)
    OR              reduce using rule 182 (expr -> BINARY_CAST expr .)
    XOR             reduce using rule 182 (expr -> BINARY_CAST expr .)
    CONCAT          reduce using rule 182 (expr -> BINARY_CAST expr .)
    PLUS            reduce using rule 182 (expr -> BINARY_CAST expr .)
    MINUS           reduce using rule 182 (expr -> BINARY_CAST expr .)
    MUL             reduce using rule 182 (expr -> BINARY_CAST expr .)
    DIV             reduce using rule 182 (expr -> BINARY_CAST expr .)
    SL              reduce using rule 182 (expr -> BINARY_CAST expr .)
    SR              reduce using rule 182 (expr -> BINARY_CAST expr .)
    MOD             reduce using rule 182 (expr -> BINARY_CAST expr .)
    IS_IDENTICAL    reduce using rule 182 (expr -> BINARY_CAST expr .)
    IS_NOT_IDENTICAL reduce using rule 182 (expr -> BINARY_CAST expr .)
    IS_EQUAL_TO     reduce using rule 182 (expr -> BINARY_CAST expr .)
    IS_NOT_EQUAL    reduce using rule 182 (expr -> BINARY_CAST expr .)
    LESS_THAN       reduce using rule 182 (expr -> BINARY_CAST expr .)
    LESS_THAN_OR_EQUAL reduce using rule 182 (expr -> BINARY_CAST expr .)
    GREATER_THAN    reduce using rule 182 (expr -> BINARY_CAST expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 182 (expr -> BINARY_CAST expr .)
    INSTANCEOF      reduce using rule 182 (expr -> BINARY_CAST expr .)
    SPACESHIP       reduce using rule 182 (expr -> BINARY_CAST expr .)
    QUESTION        reduce using rule 182 (expr -> BINARY_CAST expr .)
    RPAREN          reduce using rule 182 (expr -> BINARY_CAST expr .)
    COMMA           reduce using rule 182 (expr -> BINARY_CAST expr .)
    DOUBLE_ARROW    reduce using rule 182 (expr -> BINARY_CAST expr .)
    RBRACE          reduce using rule 182 (expr -> BINARY_CAST expr .)
    COLON           reduce using rule 182 (expr -> BINARY_CAST expr .)
    RBRACKET        reduce using rule 182 (expr -> BINARY_CAST expr .)

  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! CONCAT          [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! MUL             [ shift and go to state 102 ]
  ! DIV             [ shift and go to state 103 ]
  ! SL              [ shift and go to state 104 ]
  ! SR              [ shift and go to state 105 ]
  ! MOD             [ shift and go to state 106 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! INSTANCEOF      [ shift and go to state 115 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 180

    (183) expr -> ISSET LPAREN . isset_variables RPAREN
    (184) isset_variables -> . isset_variables COMMA variable
    (185) isset_variables -> . variable
    (98) variable -> . base_variable_with_function_calls
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    IDENTIFIER      shift and go to state 171
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    isset_variables                shift and go to state 295
    variable                       shift and go to state 296
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 181

    (186) expr -> EMPTY LPAREN . expr RPAREN
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 297
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 182

    (187) expr -> EVAL LPAREN . expr RPAREN
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 298
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 183

    (188) expr -> INCLUDE expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 188 (expr -> INCLUDE expr .)
    LBRACE          reduce using rule 188 (expr -> INCLUDE expr .)
    RPAREN          reduce using rule 188 (expr -> INCLUDE expr .)
    COMMA           reduce using rule 188 (expr -> INCLUDE expr .)
    DOUBLE_ARROW    reduce using rule 188 (expr -> INCLUDE expr .)
    RBRACE          reduce using rule 188 (expr -> INCLUDE expr .)
    COLON           reduce using rule 188 (expr -> INCLUDE expr .)
    RBRACKET        reduce using rule 188 (expr -> INCLUDE expr .)
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117

  ! BOOLEAN_AND     [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! LOGICAL_AND     [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! LOGICAL_OR      [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! LOGICAL_XOR     [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! AND             [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! OR              [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! XOR             [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! CONCAT          [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! PLUS            [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! MINUS           [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! MUL             [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! DIV             [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! SL              [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! SR              [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! MOD             [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! LESS_THAN       [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! GREATER_THAN    [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! INSTANCEOF      [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! SPACESHIP       [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! QUESTION        [ reduce using rule 188 (expr -> INCLUDE expr .) ]
  ! LBRACE          [ shift and go to state 90 ]


state 184

    (189) expr -> INCLUDE_ONCE expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 189 (expr -> INCLUDE_ONCE expr .)
    LBRACE          reduce using rule 189 (expr -> INCLUDE_ONCE expr .)
    RPAREN          reduce using rule 189 (expr -> INCLUDE_ONCE expr .)
    COMMA           reduce using rule 189 (expr -> INCLUDE_ONCE expr .)
    DOUBLE_ARROW    reduce using rule 189 (expr -> INCLUDE_ONCE expr .)
    RBRACE          reduce using rule 189 (expr -> INCLUDE_ONCE expr .)
    COLON           reduce using rule 189 (expr -> INCLUDE_ONCE expr .)
    RBRACKET        reduce using rule 189 (expr -> INCLUDE_ONCE expr .)
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117

  ! BOOLEAN_AND     [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! LOGICAL_AND     [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! LOGICAL_OR      [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! LOGICAL_XOR     [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! AND             [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! OR              [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! XOR             [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! CONCAT          [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! PLUS            [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! MINUS           [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! MUL             [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! DIV             [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! SL              [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! SR              [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! MOD             [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! LESS_THAN       [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! GREATER_THAN    [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! INSTANCEOF      [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! SPACESHIP       [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! QUESTION        [ reduce using rule 189 (expr -> INCLUDE_ONCE expr .) ]
  ! LBRACE          [ shift and go to state 90 ]


state 185

    (190) expr -> REQUIRE expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 190 (expr -> REQUIRE expr .)
    LBRACE          reduce using rule 190 (expr -> REQUIRE expr .)
    RPAREN          reduce using rule 190 (expr -> REQUIRE expr .)
    COMMA           reduce using rule 190 (expr -> REQUIRE expr .)
    DOUBLE_ARROW    reduce using rule 190 (expr -> REQUIRE expr .)
    RBRACE          reduce using rule 190 (expr -> REQUIRE expr .)
    COLON           reduce using rule 190 (expr -> REQUIRE expr .)
    RBRACKET        reduce using rule 190 (expr -> REQUIRE expr .)
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117

  ! BOOLEAN_AND     [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! LOGICAL_AND     [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! LOGICAL_OR      [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! LOGICAL_XOR     [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! AND             [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! OR              [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! XOR             [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! CONCAT          [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! PLUS            [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! MINUS           [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! MUL             [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! DIV             [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! SL              [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! SR              [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! MOD             [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! LESS_THAN       [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! GREATER_THAN    [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! INSTANCEOF      [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! SPACESHIP       [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! QUESTION        [ reduce using rule 190 (expr -> REQUIRE expr .) ]
  ! LBRACE          [ shift and go to state 90 ]


state 186

    (191) expr -> REQUIRE_ONCE expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 191 (expr -> REQUIRE_ONCE expr .)
    LBRACE          reduce using rule 191 (expr -> REQUIRE_ONCE expr .)
    RPAREN          reduce using rule 191 (expr -> REQUIRE_ONCE expr .)
    COMMA           reduce using rule 191 (expr -> REQUIRE_ONCE expr .)
    DOUBLE_ARROW    reduce using rule 191 (expr -> REQUIRE_ONCE expr .)
    RBRACE          reduce using rule 191 (expr -> REQUIRE_ONCE expr .)
    COLON           reduce using rule 191 (expr -> REQUIRE_ONCE expr .)
    RBRACKET        reduce using rule 191 (expr -> REQUIRE_ONCE expr .)
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117

  ! BOOLEAN_AND     [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! LOGICAL_AND     [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! LOGICAL_OR      [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! LOGICAL_XOR     [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! AND             [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! OR              [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! XOR             [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! CONCAT          [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! PLUS            [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! MINUS           [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! MUL             [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! DIV             [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! SL              [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! SR              [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! MOD             [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! LESS_THAN       [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! GREATER_THAN    [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! INSTANCEOF      [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! SPACESHIP       [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! QUESTION        [ reduce using rule 191 (expr -> REQUIRE_ONCE expr .) ]
  ! LBRACE          [ shift and go to state 90 ]


state 187

    (195) expr -> exit_or_die LPAREN . RPAREN
    (196) expr -> exit_or_die LPAREN . expr RPAREN
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    RPAREN          shift and go to state 299
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    exit_or_die                    shift and go to state 54
    expr                           shift and go to state 300
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 188

    (197) expr -> PRINT expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 197 (expr -> PRINT expr .)
    LBRACE          reduce using rule 197 (expr -> PRINT expr .)
    LOGICAL_AND     reduce using rule 197 (expr -> PRINT expr .)
    LOGICAL_OR      reduce using rule 197 (expr -> PRINT expr .)
    LOGICAL_XOR     reduce using rule 197 (expr -> PRINT expr .)
    RPAREN          reduce using rule 197 (expr -> PRINT expr .)
    COMMA           reduce using rule 197 (expr -> PRINT expr .)
    DOUBLE_ARROW    reduce using rule 197 (expr -> PRINT expr .)
    RBRACE          reduce using rule 197 (expr -> PRINT expr .)
    COLON           reduce using rule 197 (expr -> PRINT expr .)
    RBRACKET        reduce using rule 197 (expr -> PRINT expr .)
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117

  ! BOOLEAN_AND     [ reduce using rule 197 (expr -> PRINT expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 197 (expr -> PRINT expr .) ]
  ! AND             [ reduce using rule 197 (expr -> PRINT expr .) ]
  ! OR              [ reduce using rule 197 (expr -> PRINT expr .) ]
  ! XOR             [ reduce using rule 197 (expr -> PRINT expr .) ]
  ! CONCAT          [ reduce using rule 197 (expr -> PRINT expr .) ]
  ! PLUS            [ reduce using rule 197 (expr -> PRINT expr .) ]
  ! MINUS           [ reduce using rule 197 (expr -> PRINT expr .) ]
  ! MUL             [ reduce using rule 197 (expr -> PRINT expr .) ]
  ! DIV             [ reduce using rule 197 (expr -> PRINT expr .) ]
  ! SL              [ reduce using rule 197 (expr -> PRINT expr .) ]
  ! SR              [ reduce using rule 197 (expr -> PRINT expr .) ]
  ! MOD             [ reduce using rule 197 (expr -> PRINT expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 197 (expr -> PRINT expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 197 (expr -> PRINT expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 197 (expr -> PRINT expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 197 (expr -> PRINT expr .) ]
  ! LESS_THAN       [ reduce using rule 197 (expr -> PRINT expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 197 (expr -> PRINT expr .) ]
  ! GREATER_THAN    [ reduce using rule 197 (expr -> PRINT expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 197 (expr -> PRINT expr .) ]
  ! INSTANCEOF      [ reduce using rule 197 (expr -> PRINT expr .) ]
  ! SPACESHIP       [ reduce using rule 197 (expr -> PRINT expr .) ]
  ! QUESTION        [ reduce using rule 197 (expr -> PRINT expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]


state 189

    (198) expr -> AT expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 198 (expr -> AT expr .)
    LBRACE          reduce using rule 198 (expr -> AT expr .)
    BOOLEAN_AND     reduce using rule 198 (expr -> AT expr .)
    BOOLEAN_OR      reduce using rule 198 (expr -> AT expr .)
    LOGICAL_AND     reduce using rule 198 (expr -> AT expr .)
    LOGICAL_OR      reduce using rule 198 (expr -> AT expr .)
    LOGICAL_XOR     reduce using rule 198 (expr -> AT expr .)
    AND             reduce using rule 198 (expr -> AT expr .)
    OR              reduce using rule 198 (expr -> AT expr .)
    XOR             reduce using rule 198 (expr -> AT expr .)
    CONCAT          reduce using rule 198 (expr -> AT expr .)
    PLUS            reduce using rule 198 (expr -> AT expr .)
    MINUS           reduce using rule 198 (expr -> AT expr .)
    MUL             reduce using rule 198 (expr -> AT expr .)
    DIV             reduce using rule 198 (expr -> AT expr .)
    SL              reduce using rule 198 (expr -> AT expr .)
    SR              reduce using rule 198 (expr -> AT expr .)
    MOD             reduce using rule 198 (expr -> AT expr .)
    IS_IDENTICAL    reduce using rule 198 (expr -> AT expr .)
    IS_NOT_IDENTICAL reduce using rule 198 (expr -> AT expr .)
    IS_EQUAL_TO     reduce using rule 198 (expr -> AT expr .)
    IS_NOT_EQUAL    reduce using rule 198 (expr -> AT expr .)
    LESS_THAN       reduce using rule 198 (expr -> AT expr .)
    LESS_THAN_OR_EQUAL reduce using rule 198 (expr -> AT expr .)
    GREATER_THAN    reduce using rule 198 (expr -> AT expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 198 (expr -> AT expr .)
    INSTANCEOF      reduce using rule 198 (expr -> AT expr .)
    SPACESHIP       reduce using rule 198 (expr -> AT expr .)
    QUESTION        reduce using rule 198 (expr -> AT expr .)
    RPAREN          reduce using rule 198 (expr -> AT expr .)
    COMMA           reduce using rule 198 (expr -> AT expr .)
    DOUBLE_ARROW    reduce using rule 198 (expr -> AT expr .)
    RBRACE          reduce using rule 198 (expr -> AT expr .)
    COLON           reduce using rule 198 (expr -> AT expr .)
    RBRACKET        reduce using rule 198 (expr -> AT expr .)

  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! CONCAT          [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! MUL             [ shift and go to state 102 ]
  ! DIV             [ shift and go to state 103 ]
  ! SL              [ shift and go to state 104 ]
  ! SR              [ shift and go to state 105 ]
  ! MOD             [ shift and go to state 106 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! INSTANCEOF      [ shift and go to state 115 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 190

    (202) scalar -> DOUBLE_QUOTE encaps_list . DOUBLE_QUOTE
    (264) encaps_list -> encaps_list . encaps_var
    (269) encaps_list -> encaps_list . ENCAPSED_AND_WHITESPACE
    (266) encaps_var -> . VARIABLE
    (267) encaps_var -> . VARIABLE LBRACKET encaps_var_offset RBRACKET
    (268) encaps_var -> . DOLLAR_OPEN_CURLY_BRACES expr RBRACE
    (270) encaps_var -> . DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr RBRACKET RBRACE
    (271) encaps_var -> . CURLY_OPEN variable RBRACE

    DOUBLE_QUOTE    shift and go to state 301
    ENCAPSED_AND_WHITESPACE shift and go to state 303
    VARIABLE        shift and go to state 304
    DOLLAR_OPEN_CURLY_BRACES shift and go to state 305
    CURLY_OPEN      shift and go to state 306

    encaps_var                     shift and go to state 302

state 191

    (265) encaps_list -> empty .

    DOUBLE_QUOTE    reduce using rule 265 (encaps_list -> empty .)
    ENCAPSED_AND_WHITESPACE reduce using rule 265 (encaps_list -> empty .)
    VARIABLE        reduce using rule 265 (encaps_list -> empty .)
    DOLLAR_OPEN_CURLY_BRACES reduce using rule 265 (encaps_list -> empty .)
    CURLY_OPEN      reduce using rule 265 (encaps_list -> empty .)
    END_HEREDOC     reduce using rule 265 (encaps_list -> empty .)


state 192

    (206) scalar_heredoc -> START_HEREDOC encaps_list . END_HEREDOC
    (264) encaps_list -> encaps_list . encaps_var
    (269) encaps_list -> encaps_list . ENCAPSED_AND_WHITESPACE
    (266) encaps_var -> . VARIABLE
    (267) encaps_var -> . VARIABLE LBRACKET encaps_var_offset RBRACKET
    (268) encaps_var -> . DOLLAR_OPEN_CURLY_BRACES expr RBRACE
    (270) encaps_var -> . DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr RBRACKET RBRACE
    (271) encaps_var -> . CURLY_OPEN variable RBRACE

    END_HEREDOC     shift and go to state 307
    ENCAPSED_AND_WHITESPACE shift and go to state 303
    VARIABLE        shift and go to state 304
    DOLLAR_OPEN_CURLY_BRACES shift and go to state 305
    CURLY_OPEN      shift and go to state 306

    encaps_var                     shift and go to state 302

state 193

    (200) nowdoc -> START_NOWDOC nowdoc_text_content . END_NOWDOC
    (207) nowdoc_text_content -> nowdoc_text_content . ENCAPSED_AND_WHITESPACE

    END_NOWDOC      shift and go to state 308
    ENCAPSED_AND_WHITESPACE shift and go to state 309


state 194

    (208) nowdoc_text_content -> empty .

    END_NOWDOC      reduce using rule 208 (nowdoc_text_content -> empty .)
    ENCAPSED_AND_WHITESPACE reduce using rule 208 (nowdoc_text_content -> empty .)


state 195

    (103) function_call -> variable_without_objects LPAREN . function_call_parameter_list RPAREN
    (122) function_call_parameter_list -> . function_call_parameter_list COMMA function_call_parameter
    (123) function_call_parameter_list -> . function_call_parameter
    (124) function_call_parameter_list -> . empty
    (125) function_call_parameter -> . expr
    (126) function_call_parameter -> . AND variable
    (275) empty -> .
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    AND             shift and go to state 270
    RPAREN          reduce using rule 275 (empty -> .)
    COMMA           reduce using rule 275 (empty -> .)
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    variable_without_objects       shift and go to state 77
    function_call_parameter_list   shift and go to state 310
    function_call_parameter        shift and go to state 267
    empty                          shift and go to state 268
    expr                           shift and go to state 269
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76

state 196

    (107) compound_variable -> DOLLAR LBRACE . expr RBRACE
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 311
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 197

    (6) top_statement -> HALT_COMPILER LPAREN RPAREN . SEMI_COLON

    SEMI_COLON      shift and go to state 312


state 198

    (199) expr -> LPAREN expr RPAREN .

    SEMI_COLON      reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    LBRACE          reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    BOOLEAN_AND     reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    BOOLEAN_OR      reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    LOGICAL_AND     reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    LOGICAL_OR      reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    LOGICAL_XOR     reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    AND             reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    OR              reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    XOR             reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    CONCAT          reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    MUL             reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    DIV             reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    SL              reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    SR              reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    MOD             reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    IS_IDENTICAL    reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    IS_EQUAL_TO     reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    IS_NOT_EQUAL    reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    LESS_THAN       reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    GREATER_THAN    reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    GRATER_THAN_OR_EQUAL reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    INSTANCEOF      reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    SPACESHIP       reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    QUESTION        reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    COMMA           reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    DOUBLE_ARROW    reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    RBRACE          reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    COLON           reduce using rule 199 (expr -> LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 199 (expr -> LPAREN expr RPAREN .)


state 199

    (127) expr -> FUNCTION is_reference . LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE

    LPAREN          shift and go to state 264


state 200

    (7) top_statement -> CONST constant_declarations SEMI_COLON .

    HALT_COMPILER   reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    CONST           reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    LBRACE          reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    IF              reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    WHILE           reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    DO              reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    FOR             reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    SWITCH          reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    BREAK           reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    CONTINUE        reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    RETURN          reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    GLOBAL          reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    STATIC          reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    ECHO            reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    INLINE_HTML     reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    UNSET           reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    SEMI_COLON      reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    FUNCTION        reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    CLONE           reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    LIST            reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    ARRAY           reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    LBRACKET        reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    PLUS            reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    MINUS           reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    NOT             reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    INC             reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    DEC             reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    INT_CAST        reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    ARRAY_CAST      reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    STRING_CAST     reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    BOOL_CAST       reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    UNSET_CAST      reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    BINARY_CAST     reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    ISSET           reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    EMPTY           reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    EVAL            reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    INCLUDE         reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    REQUIRE         reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    PRINT           reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    AT              reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    LPAREN          reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    IDENTIFIER      reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    EXIT            reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    DIE             reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    INT_NUMBER      reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    FUNC_C          reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    METHOD_C        reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    LINE            reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    FILE            reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    DIR             reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    START_HEREDOC   reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    START_NOWDOC    reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    VARIABLE        reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    DOLLAR          reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    $end            reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)


state 201

    (8) constant_declarations -> constant_declarations COMMA . constant_declaration
    (10) constant_declaration -> . IDENTIFIER EQUALS static_expr

    IDENTIFIER      shift and go to state 85

    constant_declaration           shift and go to state 313

state 202

    (10) constant_declaration -> IDENTIFIER EQUALS . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 315
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 203

    (17) statement -> LBRACE inner_statement_list RBRACE .

    HALT_COMPILER   reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    CONST           reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    LBRACE          reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    IF              reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    WHILE           reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    DO              reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    FOR             reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    SWITCH          reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    BREAK           reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    CONTINUE        reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    RETURN          reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    GLOBAL          reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    STATIC          reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    ECHO            reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    INLINE_HTML     reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    UNSET           reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    SEMI_COLON      reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    FUNCTION        reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    CLONE           reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    LIST            reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    ARRAY           reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    LBRACKET        reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    PLUS            reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    MINUS           reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    NOT             reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    BOOLEAN_NOT     reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    INC             reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    DEC             reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    INT_CAST        reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    ARRAY_CAST      reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    STRING_CAST     reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    DOUBLE_CAST     reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    BOOL_CAST       reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    UNSET_CAST      reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    BINARY_CAST     reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    ISSET           reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    EMPTY           reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    EVAL            reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    INCLUDE         reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    INCLUDE_ONCE    reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    REQUIRE         reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    REQUIRE_ONCE    reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    PRINT           reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    AT              reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    LPAREN          reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    DOUBLE_QUOTE    reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    IDENTIFIER      reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    EXIT            reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    DIE             reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    INT_NUMBER      reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    FLOAT_NUMBER    reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    CONSTANT_ENCAPSED_STRING reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    FUNC_C          reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    METHOD_C        reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    LINE            reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    FILE            reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    DIR             reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    START_HEREDOC   reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    START_NOWDOC    reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    VARIABLE        reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    DOLLAR          reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    $end            reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    RBRACE          reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    YIELD           reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    ELSE            reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    ELSEIF          reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    ENDIF           reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    ENDWHILE        reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    ENDSWITCH       reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    ENDFOR          reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    CASE            reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    DEFAULT         reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)


state 204

    (11) inner_statement_list -> inner_statement_list inner_statement .

    RBRACE          reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    YIELD           reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    LBRACE          reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    IF              reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    WHILE           reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    DO              reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    FOR             reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    SWITCH          reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    BREAK           reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    CONTINUE        reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    RETURN          reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    GLOBAL          reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    STATIC          reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    ECHO            reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    INLINE_HTML     reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    UNSET           reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    SEMI_COLON      reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    FUNCTION        reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    CLONE           reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    LIST            reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    ARRAY           reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    LBRACKET        reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    PLUS            reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    MINUS           reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    NOT             reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    BOOLEAN_NOT     reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    INC             reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    DEC             reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    INT_CAST        reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    ARRAY_CAST      reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    STRING_CAST     reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    DOUBLE_CAST     reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    BOOL_CAST       reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    UNSET_CAST      reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    BINARY_CAST     reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    ISSET           reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    EMPTY           reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    EVAL            reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    INCLUDE         reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    INCLUDE_ONCE    reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    REQUIRE         reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    REQUIRE_ONCE    reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    PRINT           reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    AT              reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    LPAREN          reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    DOUBLE_QUOTE    reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    IDENTIFIER      reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    EXIT            reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    DIE             reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    INT_NUMBER      reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    FLOAT_NUMBER    reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    FUNC_C          reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    METHOD_C        reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    LINE            reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    FILE            reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    DIR             reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    START_HEREDOC   reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    START_NOWDOC    reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    VARIABLE        reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    DOLLAR          reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    ELSEIF          reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    ELSE            reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    ENDIF           reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    ENDWHILE        reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    ENDSWITCH       reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    ENDFOR          reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    CASE            reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    DEFAULT         reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)


state 205

    (13) inner_statement -> statement .

    RBRACE          reduce using rule 13 (inner_statement -> statement .)
    YIELD           reduce using rule 13 (inner_statement -> statement .)
    LBRACE          reduce using rule 13 (inner_statement -> statement .)
    IF              reduce using rule 13 (inner_statement -> statement .)
    WHILE           reduce using rule 13 (inner_statement -> statement .)
    DO              reduce using rule 13 (inner_statement -> statement .)
    FOR             reduce using rule 13 (inner_statement -> statement .)
    SWITCH          reduce using rule 13 (inner_statement -> statement .)
    BREAK           reduce using rule 13 (inner_statement -> statement .)
    CONTINUE        reduce using rule 13 (inner_statement -> statement .)
    RETURN          reduce using rule 13 (inner_statement -> statement .)
    GLOBAL          reduce using rule 13 (inner_statement -> statement .)
    STATIC          reduce using rule 13 (inner_statement -> statement .)
    ECHO            reduce using rule 13 (inner_statement -> statement .)
    INLINE_HTML     reduce using rule 13 (inner_statement -> statement .)
    UNSET           reduce using rule 13 (inner_statement -> statement .)
    SEMI_COLON      reduce using rule 13 (inner_statement -> statement .)
    FUNCTION        reduce using rule 13 (inner_statement -> statement .)
    CLONE           reduce using rule 13 (inner_statement -> statement .)
    LIST            reduce using rule 13 (inner_statement -> statement .)
    ARRAY           reduce using rule 13 (inner_statement -> statement .)
    LBRACKET        reduce using rule 13 (inner_statement -> statement .)
    PLUS            reduce using rule 13 (inner_statement -> statement .)
    MINUS           reduce using rule 13 (inner_statement -> statement .)
    NOT             reduce using rule 13 (inner_statement -> statement .)
    BOOLEAN_NOT     reduce using rule 13 (inner_statement -> statement .)
    INC             reduce using rule 13 (inner_statement -> statement .)
    DEC             reduce using rule 13 (inner_statement -> statement .)
    INT_CAST        reduce using rule 13 (inner_statement -> statement .)
    ARRAY_CAST      reduce using rule 13 (inner_statement -> statement .)
    STRING_CAST     reduce using rule 13 (inner_statement -> statement .)
    DOUBLE_CAST     reduce using rule 13 (inner_statement -> statement .)
    BOOL_CAST       reduce using rule 13 (inner_statement -> statement .)
    UNSET_CAST      reduce using rule 13 (inner_statement -> statement .)
    BINARY_CAST     reduce using rule 13 (inner_statement -> statement .)
    ISSET           reduce using rule 13 (inner_statement -> statement .)
    EMPTY           reduce using rule 13 (inner_statement -> statement .)
    EVAL            reduce using rule 13 (inner_statement -> statement .)
    INCLUDE         reduce using rule 13 (inner_statement -> statement .)
    INCLUDE_ONCE    reduce using rule 13 (inner_statement -> statement .)
    REQUIRE         reduce using rule 13 (inner_statement -> statement .)
    REQUIRE_ONCE    reduce using rule 13 (inner_statement -> statement .)
    PRINT           reduce using rule 13 (inner_statement -> statement .)
    AT              reduce using rule 13 (inner_statement -> statement .)
    LPAREN          reduce using rule 13 (inner_statement -> statement .)
    DOUBLE_QUOTE    reduce using rule 13 (inner_statement -> statement .)
    IDENTIFIER      reduce using rule 13 (inner_statement -> statement .)
    EXIT            reduce using rule 13 (inner_statement -> statement .)
    DIE             reduce using rule 13 (inner_statement -> statement .)
    INT_NUMBER      reduce using rule 13 (inner_statement -> statement .)
    FLOAT_NUMBER    reduce using rule 13 (inner_statement -> statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 13 (inner_statement -> statement .)
    FUNC_C          reduce using rule 13 (inner_statement -> statement .)
    METHOD_C        reduce using rule 13 (inner_statement -> statement .)
    LINE            reduce using rule 13 (inner_statement -> statement .)
    FILE            reduce using rule 13 (inner_statement -> statement .)
    DIR             reduce using rule 13 (inner_statement -> statement .)
    START_HEREDOC   reduce using rule 13 (inner_statement -> statement .)
    START_NOWDOC    reduce using rule 13 (inner_statement -> statement .)
    VARIABLE        reduce using rule 13 (inner_statement -> statement .)
    DOLLAR          reduce using rule 13 (inner_statement -> statement .)
    ELSEIF          reduce using rule 13 (inner_statement -> statement .)
    ELSE            reduce using rule 13 (inner_statement -> statement .)
    ENDIF           reduce using rule 13 (inner_statement -> statement .)
    ENDWHILE        reduce using rule 13 (inner_statement -> statement .)
    ENDSWITCH       reduce using rule 13 (inner_statement -> statement .)
    ENDFOR          reduce using rule 13 (inner_statement -> statement .)
    CASE            reduce using rule 13 (inner_statement -> statement .)
    DEFAULT         reduce using rule 13 (inner_statement -> statement .)


state 206

    (14) inner_statement -> function_declaration_statement .

    RBRACE          reduce using rule 14 (inner_statement -> function_declaration_statement .)
    YIELD           reduce using rule 14 (inner_statement -> function_declaration_statement .)
    LBRACE          reduce using rule 14 (inner_statement -> function_declaration_statement .)
    IF              reduce using rule 14 (inner_statement -> function_declaration_statement .)
    WHILE           reduce using rule 14 (inner_statement -> function_declaration_statement .)
    DO              reduce using rule 14 (inner_statement -> function_declaration_statement .)
    FOR             reduce using rule 14 (inner_statement -> function_declaration_statement .)
    SWITCH          reduce using rule 14 (inner_statement -> function_declaration_statement .)
    BREAK           reduce using rule 14 (inner_statement -> function_declaration_statement .)
    CONTINUE        reduce using rule 14 (inner_statement -> function_declaration_statement .)
    RETURN          reduce using rule 14 (inner_statement -> function_declaration_statement .)
    GLOBAL          reduce using rule 14 (inner_statement -> function_declaration_statement .)
    STATIC          reduce using rule 14 (inner_statement -> function_declaration_statement .)
    ECHO            reduce using rule 14 (inner_statement -> function_declaration_statement .)
    INLINE_HTML     reduce using rule 14 (inner_statement -> function_declaration_statement .)
    UNSET           reduce using rule 14 (inner_statement -> function_declaration_statement .)
    SEMI_COLON      reduce using rule 14 (inner_statement -> function_declaration_statement .)
    FUNCTION        reduce using rule 14 (inner_statement -> function_declaration_statement .)
    CLONE           reduce using rule 14 (inner_statement -> function_declaration_statement .)
    LIST            reduce using rule 14 (inner_statement -> function_declaration_statement .)
    ARRAY           reduce using rule 14 (inner_statement -> function_declaration_statement .)
    LBRACKET        reduce using rule 14 (inner_statement -> function_declaration_statement .)
    PLUS            reduce using rule 14 (inner_statement -> function_declaration_statement .)
    MINUS           reduce using rule 14 (inner_statement -> function_declaration_statement .)
    NOT             reduce using rule 14 (inner_statement -> function_declaration_statement .)
    BOOLEAN_NOT     reduce using rule 14 (inner_statement -> function_declaration_statement .)
    INC             reduce using rule 14 (inner_statement -> function_declaration_statement .)
    DEC             reduce using rule 14 (inner_statement -> function_declaration_statement .)
    INT_CAST        reduce using rule 14 (inner_statement -> function_declaration_statement .)
    ARRAY_CAST      reduce using rule 14 (inner_statement -> function_declaration_statement .)
    STRING_CAST     reduce using rule 14 (inner_statement -> function_declaration_statement .)
    DOUBLE_CAST     reduce using rule 14 (inner_statement -> function_declaration_statement .)
    BOOL_CAST       reduce using rule 14 (inner_statement -> function_declaration_statement .)
    UNSET_CAST      reduce using rule 14 (inner_statement -> function_declaration_statement .)
    BINARY_CAST     reduce using rule 14 (inner_statement -> function_declaration_statement .)
    ISSET           reduce using rule 14 (inner_statement -> function_declaration_statement .)
    EMPTY           reduce using rule 14 (inner_statement -> function_declaration_statement .)
    EVAL            reduce using rule 14 (inner_statement -> function_declaration_statement .)
    INCLUDE         reduce using rule 14 (inner_statement -> function_declaration_statement .)
    INCLUDE_ONCE    reduce using rule 14 (inner_statement -> function_declaration_statement .)
    REQUIRE         reduce using rule 14 (inner_statement -> function_declaration_statement .)
    REQUIRE_ONCE    reduce using rule 14 (inner_statement -> function_declaration_statement .)
    PRINT           reduce using rule 14 (inner_statement -> function_declaration_statement .)
    AT              reduce using rule 14 (inner_statement -> function_declaration_statement .)
    LPAREN          reduce using rule 14 (inner_statement -> function_declaration_statement .)
    DOUBLE_QUOTE    reduce using rule 14 (inner_statement -> function_declaration_statement .)
    IDENTIFIER      reduce using rule 14 (inner_statement -> function_declaration_statement .)
    EXIT            reduce using rule 14 (inner_statement -> function_declaration_statement .)
    DIE             reduce using rule 14 (inner_statement -> function_declaration_statement .)
    INT_NUMBER      reduce using rule 14 (inner_statement -> function_declaration_statement .)
    FLOAT_NUMBER    reduce using rule 14 (inner_statement -> function_declaration_statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 14 (inner_statement -> function_declaration_statement .)
    FUNC_C          reduce using rule 14 (inner_statement -> function_declaration_statement .)
    METHOD_C        reduce using rule 14 (inner_statement -> function_declaration_statement .)
    LINE            reduce using rule 14 (inner_statement -> function_declaration_statement .)
    FILE            reduce using rule 14 (inner_statement -> function_declaration_statement .)
    DIR             reduce using rule 14 (inner_statement -> function_declaration_statement .)
    START_HEREDOC   reduce using rule 14 (inner_statement -> function_declaration_statement .)
    START_NOWDOC    reduce using rule 14 (inner_statement -> function_declaration_statement .)
    VARIABLE        reduce using rule 14 (inner_statement -> function_declaration_statement .)
    DOLLAR          reduce using rule 14 (inner_statement -> function_declaration_statement .)
    ELSEIF          reduce using rule 14 (inner_statement -> function_declaration_statement .)
    ELSE            reduce using rule 14 (inner_statement -> function_declaration_statement .)
    ENDIF           reduce using rule 14 (inner_statement -> function_declaration_statement .)
    ENDWHILE        reduce using rule 14 (inner_statement -> function_declaration_statement .)
    ENDSWITCH       reduce using rule 14 (inner_statement -> function_declaration_statement .)
    ENDFOR          reduce using rule 14 (inner_statement -> function_declaration_statement .)
    CASE            reduce using rule 14 (inner_statement -> function_declaration_statement .)
    DEFAULT         reduce using rule 14 (inner_statement -> function_declaration_statement .)


state 207

    (15) inner_statement -> YIELD . SEMI_COLON
    (16) inner_statement -> YIELD . expr SEMI_COLON
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    SEMI_COLON      shift and go to state 327
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 328
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 208

    (18) statement -> IF LPAREN expr . RPAREN statement elseif_list
    (19) statement -> IF LPAREN expr . RPAREN statement elseif_list ELSE statement
    (20) statement -> IF LPAREN expr . RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    RPAREN          shift and go to state 329
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 209

    (108) dim_offset -> expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    RBRACE          reduce using rule 108 (dim_offset -> expr .)
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 210

    (105) expr -> expr LBRACE dim_offset . RBRACE

    RBRACE          shift and go to state 330


state 211

    (109) dim_offset -> empty .

    RBRACE          reduce using rule 109 (dim_offset -> empty .)


state 212

    (139) expr -> expr BOOLEAN_AND expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 139 (expr -> expr BOOLEAN_AND expr .)
    LBRACE          reduce using rule 139 (expr -> expr BOOLEAN_AND expr .)
    BOOLEAN_AND     reduce using rule 139 (expr -> expr BOOLEAN_AND expr .)
    BOOLEAN_OR      reduce using rule 139 (expr -> expr BOOLEAN_AND expr .)
    LOGICAL_AND     reduce using rule 139 (expr -> expr BOOLEAN_AND expr .)
    LOGICAL_OR      reduce using rule 139 (expr -> expr BOOLEAN_AND expr .)
    LOGICAL_XOR     reduce using rule 139 (expr -> expr BOOLEAN_AND expr .)
    QUESTION        reduce using rule 139 (expr -> expr BOOLEAN_AND expr .)
    RPAREN          reduce using rule 139 (expr -> expr BOOLEAN_AND expr .)
    COMMA           reduce using rule 139 (expr -> expr BOOLEAN_AND expr .)
    DOUBLE_ARROW    reduce using rule 139 (expr -> expr BOOLEAN_AND expr .)
    RBRACE          reduce using rule 139 (expr -> expr BOOLEAN_AND expr .)
    COLON           reduce using rule 139 (expr -> expr BOOLEAN_AND expr .)
    RBRACKET        reduce using rule 139 (expr -> expr BOOLEAN_AND expr .)
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116

  ! AND             [ reduce using rule 139 (expr -> expr BOOLEAN_AND expr .) ]
  ! OR              [ reduce using rule 139 (expr -> expr BOOLEAN_AND expr .) ]
  ! XOR             [ reduce using rule 139 (expr -> expr BOOLEAN_AND expr .) ]
  ! CONCAT          [ reduce using rule 139 (expr -> expr BOOLEAN_AND expr .) ]
  ! PLUS            [ reduce using rule 139 (expr -> expr BOOLEAN_AND expr .) ]
  ! MINUS           [ reduce using rule 139 (expr -> expr BOOLEAN_AND expr .) ]
  ! MUL             [ reduce using rule 139 (expr -> expr BOOLEAN_AND expr .) ]
  ! DIV             [ reduce using rule 139 (expr -> expr BOOLEAN_AND expr .) ]
  ! SL              [ reduce using rule 139 (expr -> expr BOOLEAN_AND expr .) ]
  ! SR              [ reduce using rule 139 (expr -> expr BOOLEAN_AND expr .) ]
  ! MOD             [ reduce using rule 139 (expr -> expr BOOLEAN_AND expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 139 (expr -> expr BOOLEAN_AND expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 139 (expr -> expr BOOLEAN_AND expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 139 (expr -> expr BOOLEAN_AND expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 139 (expr -> expr BOOLEAN_AND expr .) ]
  ! LESS_THAN       [ reduce using rule 139 (expr -> expr BOOLEAN_AND expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 139 (expr -> expr BOOLEAN_AND expr .) ]
  ! GREATER_THAN    [ reduce using rule 139 (expr -> expr BOOLEAN_AND expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 139 (expr -> expr BOOLEAN_AND expr .) ]
  ! INSTANCEOF      [ reduce using rule 139 (expr -> expr BOOLEAN_AND expr .) ]
  ! SPACESHIP       [ reduce using rule 139 (expr -> expr BOOLEAN_AND expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! QUESTION        [ shift and go to state 117 ]


state 213

    (140) expr -> expr BOOLEAN_OR expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 140 (expr -> expr BOOLEAN_OR expr .)
    LBRACE          reduce using rule 140 (expr -> expr BOOLEAN_OR expr .)
    BOOLEAN_OR      reduce using rule 140 (expr -> expr BOOLEAN_OR expr .)
    LOGICAL_AND     reduce using rule 140 (expr -> expr BOOLEAN_OR expr .)
    LOGICAL_OR      reduce using rule 140 (expr -> expr BOOLEAN_OR expr .)
    LOGICAL_XOR     reduce using rule 140 (expr -> expr BOOLEAN_OR expr .)
    QUESTION        reduce using rule 140 (expr -> expr BOOLEAN_OR expr .)
    RPAREN          reduce using rule 140 (expr -> expr BOOLEAN_OR expr .)
    COMMA           reduce using rule 140 (expr -> expr BOOLEAN_OR expr .)
    DOUBLE_ARROW    reduce using rule 140 (expr -> expr BOOLEAN_OR expr .)
    RBRACE          reduce using rule 140 (expr -> expr BOOLEAN_OR expr .)
    COLON           reduce using rule 140 (expr -> expr BOOLEAN_OR expr .)
    RBRACKET        reduce using rule 140 (expr -> expr BOOLEAN_OR expr .)
    BOOLEAN_AND     shift and go to state 91
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116

  ! BOOLEAN_AND     [ reduce using rule 140 (expr -> expr BOOLEAN_OR expr .) ]
  ! AND             [ reduce using rule 140 (expr -> expr BOOLEAN_OR expr .) ]
  ! OR              [ reduce using rule 140 (expr -> expr BOOLEAN_OR expr .) ]
  ! XOR             [ reduce using rule 140 (expr -> expr BOOLEAN_OR expr .) ]
  ! CONCAT          [ reduce using rule 140 (expr -> expr BOOLEAN_OR expr .) ]
  ! PLUS            [ reduce using rule 140 (expr -> expr BOOLEAN_OR expr .) ]
  ! MINUS           [ reduce using rule 140 (expr -> expr BOOLEAN_OR expr .) ]
  ! MUL             [ reduce using rule 140 (expr -> expr BOOLEAN_OR expr .) ]
  ! DIV             [ reduce using rule 140 (expr -> expr BOOLEAN_OR expr .) ]
  ! SL              [ reduce using rule 140 (expr -> expr BOOLEAN_OR expr .) ]
  ! SR              [ reduce using rule 140 (expr -> expr BOOLEAN_OR expr .) ]
  ! MOD             [ reduce using rule 140 (expr -> expr BOOLEAN_OR expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 140 (expr -> expr BOOLEAN_OR expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 140 (expr -> expr BOOLEAN_OR expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 140 (expr -> expr BOOLEAN_OR expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 140 (expr -> expr BOOLEAN_OR expr .) ]
  ! LESS_THAN       [ reduce using rule 140 (expr -> expr BOOLEAN_OR expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 140 (expr -> expr BOOLEAN_OR expr .) ]
  ! GREATER_THAN    [ reduce using rule 140 (expr -> expr BOOLEAN_OR expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 140 (expr -> expr BOOLEAN_OR expr .) ]
  ! INSTANCEOF      [ reduce using rule 140 (expr -> expr BOOLEAN_OR expr .) ]
  ! SPACESHIP       [ reduce using rule 140 (expr -> expr BOOLEAN_OR expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! QUESTION        [ shift and go to state 117 ]


state 214

    (141) expr -> expr LOGICAL_AND expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 141 (expr -> expr LOGICAL_AND expr .)
    LBRACE          reduce using rule 141 (expr -> expr LOGICAL_AND expr .)
    LOGICAL_AND     reduce using rule 141 (expr -> expr LOGICAL_AND expr .)
    LOGICAL_OR      reduce using rule 141 (expr -> expr LOGICAL_AND expr .)
    LOGICAL_XOR     reduce using rule 141 (expr -> expr LOGICAL_AND expr .)
    RPAREN          reduce using rule 141 (expr -> expr LOGICAL_AND expr .)
    COMMA           reduce using rule 141 (expr -> expr LOGICAL_AND expr .)
    DOUBLE_ARROW    reduce using rule 141 (expr -> expr LOGICAL_AND expr .)
    RBRACE          reduce using rule 141 (expr -> expr LOGICAL_AND expr .)
    COLON           reduce using rule 141 (expr -> expr LOGICAL_AND expr .)
    RBRACKET        reduce using rule 141 (expr -> expr LOGICAL_AND expr .)
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117

  ! BOOLEAN_AND     [ reduce using rule 141 (expr -> expr LOGICAL_AND expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 141 (expr -> expr LOGICAL_AND expr .) ]
  ! AND             [ reduce using rule 141 (expr -> expr LOGICAL_AND expr .) ]
  ! OR              [ reduce using rule 141 (expr -> expr LOGICAL_AND expr .) ]
  ! XOR             [ reduce using rule 141 (expr -> expr LOGICAL_AND expr .) ]
  ! CONCAT          [ reduce using rule 141 (expr -> expr LOGICAL_AND expr .) ]
  ! PLUS            [ reduce using rule 141 (expr -> expr LOGICAL_AND expr .) ]
  ! MINUS           [ reduce using rule 141 (expr -> expr LOGICAL_AND expr .) ]
  ! MUL             [ reduce using rule 141 (expr -> expr LOGICAL_AND expr .) ]
  ! DIV             [ reduce using rule 141 (expr -> expr LOGICAL_AND expr .) ]
  ! SL              [ reduce using rule 141 (expr -> expr LOGICAL_AND expr .) ]
  ! SR              [ reduce using rule 141 (expr -> expr LOGICAL_AND expr .) ]
  ! MOD             [ reduce using rule 141 (expr -> expr LOGICAL_AND expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 141 (expr -> expr LOGICAL_AND expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 141 (expr -> expr LOGICAL_AND expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 141 (expr -> expr LOGICAL_AND expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 141 (expr -> expr LOGICAL_AND expr .) ]
  ! LESS_THAN       [ reduce using rule 141 (expr -> expr LOGICAL_AND expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 141 (expr -> expr LOGICAL_AND expr .) ]
  ! GREATER_THAN    [ reduce using rule 141 (expr -> expr LOGICAL_AND expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 141 (expr -> expr LOGICAL_AND expr .) ]
  ! INSTANCEOF      [ reduce using rule 141 (expr -> expr LOGICAL_AND expr .) ]
  ! SPACESHIP       [ reduce using rule 141 (expr -> expr LOGICAL_AND expr .) ]
  ! QUESTION        [ reduce using rule 141 (expr -> expr LOGICAL_AND expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]


state 215

    (142) expr -> expr LOGICAL_OR expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 142 (expr -> expr LOGICAL_OR expr .)
    LBRACE          reduce using rule 142 (expr -> expr LOGICAL_OR expr .)
    LOGICAL_OR      reduce using rule 142 (expr -> expr LOGICAL_OR expr .)
    RPAREN          reduce using rule 142 (expr -> expr LOGICAL_OR expr .)
    COMMA           reduce using rule 142 (expr -> expr LOGICAL_OR expr .)
    DOUBLE_ARROW    reduce using rule 142 (expr -> expr LOGICAL_OR expr .)
    RBRACE          reduce using rule 142 (expr -> expr LOGICAL_OR expr .)
    COLON           reduce using rule 142 (expr -> expr LOGICAL_OR expr .)
    RBRACKET        reduce using rule 142 (expr -> expr LOGICAL_OR expr .)
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117

  ! BOOLEAN_AND     [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! LOGICAL_AND     [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! LOGICAL_XOR     [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! AND             [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! OR              [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! XOR             [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! CONCAT          [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! PLUS            [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! MINUS           [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! MUL             [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! DIV             [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! SL              [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! SR              [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! MOD             [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! LESS_THAN       [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! GREATER_THAN    [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! INSTANCEOF      [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! SPACESHIP       [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! QUESTION        [ reduce using rule 142 (expr -> expr LOGICAL_OR expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]


state 216

    (143) expr -> expr LOGICAL_XOR expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 143 (expr -> expr LOGICAL_XOR expr .)
    LBRACE          reduce using rule 143 (expr -> expr LOGICAL_XOR expr .)
    LOGICAL_OR      reduce using rule 143 (expr -> expr LOGICAL_XOR expr .)
    LOGICAL_XOR     reduce using rule 143 (expr -> expr LOGICAL_XOR expr .)
    RPAREN          reduce using rule 143 (expr -> expr LOGICAL_XOR expr .)
    COMMA           reduce using rule 143 (expr -> expr LOGICAL_XOR expr .)
    DOUBLE_ARROW    reduce using rule 143 (expr -> expr LOGICAL_XOR expr .)
    RBRACE          reduce using rule 143 (expr -> expr LOGICAL_XOR expr .)
    COLON           reduce using rule 143 (expr -> expr LOGICAL_XOR expr .)
    RBRACKET        reduce using rule 143 (expr -> expr LOGICAL_XOR expr .)
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117

  ! BOOLEAN_AND     [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! LOGICAL_AND     [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! AND             [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! OR              [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! XOR             [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! CONCAT          [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! PLUS            [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! MINUS           [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! MUL             [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! DIV             [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! SL              [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! SR              [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! MOD             [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! LESS_THAN       [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! GREATER_THAN    [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! INSTANCEOF      [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! SPACESHIP       [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! QUESTION        [ reduce using rule 143 (expr -> expr LOGICAL_XOR expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]


state 217

    (144) expr -> expr AND expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 144 (expr -> expr AND expr .)
    LBRACE          reduce using rule 144 (expr -> expr AND expr .)
    BOOLEAN_AND     reduce using rule 144 (expr -> expr AND expr .)
    BOOLEAN_OR      reduce using rule 144 (expr -> expr AND expr .)
    LOGICAL_AND     reduce using rule 144 (expr -> expr AND expr .)
    LOGICAL_OR      reduce using rule 144 (expr -> expr AND expr .)
    LOGICAL_XOR     reduce using rule 144 (expr -> expr AND expr .)
    AND             reduce using rule 144 (expr -> expr AND expr .)
    OR              reduce using rule 144 (expr -> expr AND expr .)
    XOR             reduce using rule 144 (expr -> expr AND expr .)
    QUESTION        reduce using rule 144 (expr -> expr AND expr .)
    RPAREN          reduce using rule 144 (expr -> expr AND expr .)
    COMMA           reduce using rule 144 (expr -> expr AND expr .)
    DOUBLE_ARROW    reduce using rule 144 (expr -> expr AND expr .)
    RBRACE          reduce using rule 144 (expr -> expr AND expr .)
    COLON           reduce using rule 144 (expr -> expr AND expr .)
    RBRACKET        reduce using rule 144 (expr -> expr AND expr .)
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116

  ! CONCAT          [ reduce using rule 144 (expr -> expr AND expr .) ]
  ! PLUS            [ reduce using rule 144 (expr -> expr AND expr .) ]
  ! MINUS           [ reduce using rule 144 (expr -> expr AND expr .) ]
  ! MUL             [ reduce using rule 144 (expr -> expr AND expr .) ]
  ! DIV             [ reduce using rule 144 (expr -> expr AND expr .) ]
  ! SL              [ reduce using rule 144 (expr -> expr AND expr .) ]
  ! SR              [ reduce using rule 144 (expr -> expr AND expr .) ]
  ! MOD             [ reduce using rule 144 (expr -> expr AND expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 144 (expr -> expr AND expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 144 (expr -> expr AND expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 144 (expr -> expr AND expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 144 (expr -> expr AND expr .) ]
  ! LESS_THAN       [ reduce using rule 144 (expr -> expr AND expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 144 (expr -> expr AND expr .) ]
  ! GREATER_THAN    [ reduce using rule 144 (expr -> expr AND expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 144 (expr -> expr AND expr .) ]
  ! INSTANCEOF      [ reduce using rule 144 (expr -> expr AND expr .) ]
  ! SPACESHIP       [ reduce using rule 144 (expr -> expr AND expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! QUESTION        [ shift and go to state 117 ]


state 218

    (145) expr -> expr OR expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 145 (expr -> expr OR expr .)
    LBRACE          reduce using rule 145 (expr -> expr OR expr .)
    BOOLEAN_AND     reduce using rule 145 (expr -> expr OR expr .)
    BOOLEAN_OR      reduce using rule 145 (expr -> expr OR expr .)
    LOGICAL_AND     reduce using rule 145 (expr -> expr OR expr .)
    LOGICAL_OR      reduce using rule 145 (expr -> expr OR expr .)
    LOGICAL_XOR     reduce using rule 145 (expr -> expr OR expr .)
    OR              reduce using rule 145 (expr -> expr OR expr .)
    QUESTION        reduce using rule 145 (expr -> expr OR expr .)
    RPAREN          reduce using rule 145 (expr -> expr OR expr .)
    COMMA           reduce using rule 145 (expr -> expr OR expr .)
    DOUBLE_ARROW    reduce using rule 145 (expr -> expr OR expr .)
    RBRACE          reduce using rule 145 (expr -> expr OR expr .)
    COLON           reduce using rule 145 (expr -> expr OR expr .)
    RBRACKET        reduce using rule 145 (expr -> expr OR expr .)
    AND             shift and go to state 96
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116

  ! AND             [ reduce using rule 145 (expr -> expr OR expr .) ]
  ! XOR             [ reduce using rule 145 (expr -> expr OR expr .) ]
  ! CONCAT          [ reduce using rule 145 (expr -> expr OR expr .) ]
  ! PLUS            [ reduce using rule 145 (expr -> expr OR expr .) ]
  ! MINUS           [ reduce using rule 145 (expr -> expr OR expr .) ]
  ! MUL             [ reduce using rule 145 (expr -> expr OR expr .) ]
  ! DIV             [ reduce using rule 145 (expr -> expr OR expr .) ]
  ! SL              [ reduce using rule 145 (expr -> expr OR expr .) ]
  ! SR              [ reduce using rule 145 (expr -> expr OR expr .) ]
  ! MOD             [ reduce using rule 145 (expr -> expr OR expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 145 (expr -> expr OR expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 145 (expr -> expr OR expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 145 (expr -> expr OR expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 145 (expr -> expr OR expr .) ]
  ! LESS_THAN       [ reduce using rule 145 (expr -> expr OR expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 145 (expr -> expr OR expr .) ]
  ! GREATER_THAN    [ reduce using rule 145 (expr -> expr OR expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 145 (expr -> expr OR expr .) ]
  ! INSTANCEOF      [ reduce using rule 145 (expr -> expr OR expr .) ]
  ! SPACESHIP       [ reduce using rule 145 (expr -> expr OR expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! OR              [ shift and go to state 97 ]
  ! QUESTION        [ shift and go to state 117 ]


state 219

    (146) expr -> expr XOR expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 146 (expr -> expr XOR expr .)
    LBRACE          reduce using rule 146 (expr -> expr XOR expr .)
    BOOLEAN_AND     reduce using rule 146 (expr -> expr XOR expr .)
    BOOLEAN_OR      reduce using rule 146 (expr -> expr XOR expr .)
    LOGICAL_AND     reduce using rule 146 (expr -> expr XOR expr .)
    LOGICAL_OR      reduce using rule 146 (expr -> expr XOR expr .)
    LOGICAL_XOR     reduce using rule 146 (expr -> expr XOR expr .)
    OR              reduce using rule 146 (expr -> expr XOR expr .)
    XOR             reduce using rule 146 (expr -> expr XOR expr .)
    QUESTION        reduce using rule 146 (expr -> expr XOR expr .)
    RPAREN          reduce using rule 146 (expr -> expr XOR expr .)
    COMMA           reduce using rule 146 (expr -> expr XOR expr .)
    DOUBLE_ARROW    reduce using rule 146 (expr -> expr XOR expr .)
    RBRACE          reduce using rule 146 (expr -> expr XOR expr .)
    COLON           reduce using rule 146 (expr -> expr XOR expr .)
    RBRACKET        reduce using rule 146 (expr -> expr XOR expr .)
    AND             shift and go to state 96
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116

  ! AND             [ reduce using rule 146 (expr -> expr XOR expr .) ]
  ! CONCAT          [ reduce using rule 146 (expr -> expr XOR expr .) ]
  ! PLUS            [ reduce using rule 146 (expr -> expr XOR expr .) ]
  ! MINUS           [ reduce using rule 146 (expr -> expr XOR expr .) ]
  ! MUL             [ reduce using rule 146 (expr -> expr XOR expr .) ]
  ! DIV             [ reduce using rule 146 (expr -> expr XOR expr .) ]
  ! SL              [ reduce using rule 146 (expr -> expr XOR expr .) ]
  ! SR              [ reduce using rule 146 (expr -> expr XOR expr .) ]
  ! MOD             [ reduce using rule 146 (expr -> expr XOR expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 146 (expr -> expr XOR expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 146 (expr -> expr XOR expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 146 (expr -> expr XOR expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 146 (expr -> expr XOR expr .) ]
  ! LESS_THAN       [ reduce using rule 146 (expr -> expr XOR expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 146 (expr -> expr XOR expr .) ]
  ! GREATER_THAN    [ reduce using rule 146 (expr -> expr XOR expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 146 (expr -> expr XOR expr .) ]
  ! INSTANCEOF      [ reduce using rule 146 (expr -> expr XOR expr .) ]
  ! SPACESHIP       [ reduce using rule 146 (expr -> expr XOR expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! QUESTION        [ shift and go to state 117 ]


state 220

    (147) expr -> expr CONCAT expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 147 (expr -> expr CONCAT expr .)
    LBRACE          reduce using rule 147 (expr -> expr CONCAT expr .)
    BOOLEAN_AND     reduce using rule 147 (expr -> expr CONCAT expr .)
    BOOLEAN_OR      reduce using rule 147 (expr -> expr CONCAT expr .)
    LOGICAL_AND     reduce using rule 147 (expr -> expr CONCAT expr .)
    LOGICAL_OR      reduce using rule 147 (expr -> expr CONCAT expr .)
    LOGICAL_XOR     reduce using rule 147 (expr -> expr CONCAT expr .)
    AND             reduce using rule 147 (expr -> expr CONCAT expr .)
    OR              reduce using rule 147 (expr -> expr CONCAT expr .)
    XOR             reduce using rule 147 (expr -> expr CONCAT expr .)
    CONCAT          reduce using rule 147 (expr -> expr CONCAT expr .)
    PLUS            reduce using rule 147 (expr -> expr CONCAT expr .)
    MINUS           reduce using rule 147 (expr -> expr CONCAT expr .)
    SL              reduce using rule 147 (expr -> expr CONCAT expr .)
    SR              reduce using rule 147 (expr -> expr CONCAT expr .)
    IS_IDENTICAL    reduce using rule 147 (expr -> expr CONCAT expr .)
    IS_NOT_IDENTICAL reduce using rule 147 (expr -> expr CONCAT expr .)
    IS_EQUAL_TO     reduce using rule 147 (expr -> expr CONCAT expr .)
    IS_NOT_EQUAL    reduce using rule 147 (expr -> expr CONCAT expr .)
    LESS_THAN       reduce using rule 147 (expr -> expr CONCAT expr .)
    LESS_THAN_OR_EQUAL reduce using rule 147 (expr -> expr CONCAT expr .)
    GREATER_THAN    reduce using rule 147 (expr -> expr CONCAT expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 147 (expr -> expr CONCAT expr .)
    SPACESHIP       reduce using rule 147 (expr -> expr CONCAT expr .)
    QUESTION        reduce using rule 147 (expr -> expr CONCAT expr .)
    RPAREN          reduce using rule 147 (expr -> expr CONCAT expr .)
    COMMA           reduce using rule 147 (expr -> expr CONCAT expr .)
    DOUBLE_ARROW    reduce using rule 147 (expr -> expr CONCAT expr .)
    RBRACE          reduce using rule 147 (expr -> expr CONCAT expr .)
    COLON           reduce using rule 147 (expr -> expr CONCAT expr .)
    RBRACKET        reduce using rule 147 (expr -> expr CONCAT expr .)
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    MOD             shift and go to state 106
    INSTANCEOF      shift and go to state 115

  ! MUL             [ reduce using rule 147 (expr -> expr CONCAT expr .) ]
  ! DIV             [ reduce using rule 147 (expr -> expr CONCAT expr .) ]
  ! MOD             [ reduce using rule 147 (expr -> expr CONCAT expr .) ]
  ! INSTANCEOF      [ reduce using rule 147 (expr -> expr CONCAT expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! CONCAT          [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! SL              [ shift and go to state 104 ]
  ! SR              [ shift and go to state 105 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 221

    (148) expr -> expr PLUS expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 148 (expr -> expr PLUS expr .)
    LBRACE          reduce using rule 148 (expr -> expr PLUS expr .)
    BOOLEAN_AND     reduce using rule 148 (expr -> expr PLUS expr .)
    BOOLEAN_OR      reduce using rule 148 (expr -> expr PLUS expr .)
    LOGICAL_AND     reduce using rule 148 (expr -> expr PLUS expr .)
    LOGICAL_OR      reduce using rule 148 (expr -> expr PLUS expr .)
    LOGICAL_XOR     reduce using rule 148 (expr -> expr PLUS expr .)
    AND             reduce using rule 148 (expr -> expr PLUS expr .)
    OR              reduce using rule 148 (expr -> expr PLUS expr .)
    XOR             reduce using rule 148 (expr -> expr PLUS expr .)
    CONCAT          reduce using rule 148 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 148 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 148 (expr -> expr PLUS expr .)
    SL              reduce using rule 148 (expr -> expr PLUS expr .)
    SR              reduce using rule 148 (expr -> expr PLUS expr .)
    IS_IDENTICAL    reduce using rule 148 (expr -> expr PLUS expr .)
    IS_NOT_IDENTICAL reduce using rule 148 (expr -> expr PLUS expr .)
    IS_EQUAL_TO     reduce using rule 148 (expr -> expr PLUS expr .)
    IS_NOT_EQUAL    reduce using rule 148 (expr -> expr PLUS expr .)
    LESS_THAN       reduce using rule 148 (expr -> expr PLUS expr .)
    LESS_THAN_OR_EQUAL reduce using rule 148 (expr -> expr PLUS expr .)
    GREATER_THAN    reduce using rule 148 (expr -> expr PLUS expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 148 (expr -> expr PLUS expr .)
    SPACESHIP       reduce using rule 148 (expr -> expr PLUS expr .)
    QUESTION        reduce using rule 148 (expr -> expr PLUS expr .)
    RPAREN          reduce using rule 148 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 148 (expr -> expr PLUS expr .)
    DOUBLE_ARROW    reduce using rule 148 (expr -> expr PLUS expr .)
    RBRACE          reduce using rule 148 (expr -> expr PLUS expr .)
    COLON           reduce using rule 148 (expr -> expr PLUS expr .)
    RBRACKET        reduce using rule 148 (expr -> expr PLUS expr .)
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    MOD             shift and go to state 106
    INSTANCEOF      shift and go to state 115

  ! MUL             [ reduce using rule 148 (expr -> expr PLUS expr .) ]
  ! DIV             [ reduce using rule 148 (expr -> expr PLUS expr .) ]
  ! MOD             [ reduce using rule 148 (expr -> expr PLUS expr .) ]
  ! INSTANCEOF      [ reduce using rule 148 (expr -> expr PLUS expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! CONCAT          [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! SL              [ shift and go to state 104 ]
  ! SR              [ shift and go to state 105 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 222

    (149) expr -> expr MINUS expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 149 (expr -> expr MINUS expr .)
    LBRACE          reduce using rule 149 (expr -> expr MINUS expr .)
    BOOLEAN_AND     reduce using rule 149 (expr -> expr MINUS expr .)
    BOOLEAN_OR      reduce using rule 149 (expr -> expr MINUS expr .)
    LOGICAL_AND     reduce using rule 149 (expr -> expr MINUS expr .)
    LOGICAL_OR      reduce using rule 149 (expr -> expr MINUS expr .)
    LOGICAL_XOR     reduce using rule 149 (expr -> expr MINUS expr .)
    AND             reduce using rule 149 (expr -> expr MINUS expr .)
    OR              reduce using rule 149 (expr -> expr MINUS expr .)
    XOR             reduce using rule 149 (expr -> expr MINUS expr .)
    CONCAT          reduce using rule 149 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 149 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 149 (expr -> expr MINUS expr .)
    SL              reduce using rule 149 (expr -> expr MINUS expr .)
    SR              reduce using rule 149 (expr -> expr MINUS expr .)
    IS_IDENTICAL    reduce using rule 149 (expr -> expr MINUS expr .)
    IS_NOT_IDENTICAL reduce using rule 149 (expr -> expr MINUS expr .)
    IS_EQUAL_TO     reduce using rule 149 (expr -> expr MINUS expr .)
    IS_NOT_EQUAL    reduce using rule 149 (expr -> expr MINUS expr .)
    LESS_THAN       reduce using rule 149 (expr -> expr MINUS expr .)
    LESS_THAN_OR_EQUAL reduce using rule 149 (expr -> expr MINUS expr .)
    GREATER_THAN    reduce using rule 149 (expr -> expr MINUS expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 149 (expr -> expr MINUS expr .)
    SPACESHIP       reduce using rule 149 (expr -> expr MINUS expr .)
    QUESTION        reduce using rule 149 (expr -> expr MINUS expr .)
    RPAREN          reduce using rule 149 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 149 (expr -> expr MINUS expr .)
    DOUBLE_ARROW    reduce using rule 149 (expr -> expr MINUS expr .)
    RBRACE          reduce using rule 149 (expr -> expr MINUS expr .)
    COLON           reduce using rule 149 (expr -> expr MINUS expr .)
    RBRACKET        reduce using rule 149 (expr -> expr MINUS expr .)
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    MOD             shift and go to state 106
    INSTANCEOF      shift and go to state 115

  ! MUL             [ reduce using rule 149 (expr -> expr MINUS expr .) ]
  ! DIV             [ reduce using rule 149 (expr -> expr MINUS expr .) ]
  ! MOD             [ reduce using rule 149 (expr -> expr MINUS expr .) ]
  ! INSTANCEOF      [ reduce using rule 149 (expr -> expr MINUS expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! CONCAT          [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! SL              [ shift and go to state 104 ]
  ! SR              [ shift and go to state 105 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 223

    (150) expr -> expr MUL expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 150 (expr -> expr MUL expr .)
    LBRACE          reduce using rule 150 (expr -> expr MUL expr .)
    BOOLEAN_AND     reduce using rule 150 (expr -> expr MUL expr .)
    BOOLEAN_OR      reduce using rule 150 (expr -> expr MUL expr .)
    LOGICAL_AND     reduce using rule 150 (expr -> expr MUL expr .)
    LOGICAL_OR      reduce using rule 150 (expr -> expr MUL expr .)
    LOGICAL_XOR     reduce using rule 150 (expr -> expr MUL expr .)
    AND             reduce using rule 150 (expr -> expr MUL expr .)
    OR              reduce using rule 150 (expr -> expr MUL expr .)
    XOR             reduce using rule 150 (expr -> expr MUL expr .)
    CONCAT          reduce using rule 150 (expr -> expr MUL expr .)
    PLUS            reduce using rule 150 (expr -> expr MUL expr .)
    MINUS           reduce using rule 150 (expr -> expr MUL expr .)
    MUL             reduce using rule 150 (expr -> expr MUL expr .)
    DIV             reduce using rule 150 (expr -> expr MUL expr .)
    SL              reduce using rule 150 (expr -> expr MUL expr .)
    SR              reduce using rule 150 (expr -> expr MUL expr .)
    MOD             reduce using rule 150 (expr -> expr MUL expr .)
    IS_IDENTICAL    reduce using rule 150 (expr -> expr MUL expr .)
    IS_NOT_IDENTICAL reduce using rule 150 (expr -> expr MUL expr .)
    IS_EQUAL_TO     reduce using rule 150 (expr -> expr MUL expr .)
    IS_NOT_EQUAL    reduce using rule 150 (expr -> expr MUL expr .)
    LESS_THAN       reduce using rule 150 (expr -> expr MUL expr .)
    LESS_THAN_OR_EQUAL reduce using rule 150 (expr -> expr MUL expr .)
    GREATER_THAN    reduce using rule 150 (expr -> expr MUL expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 150 (expr -> expr MUL expr .)
    SPACESHIP       reduce using rule 150 (expr -> expr MUL expr .)
    QUESTION        reduce using rule 150 (expr -> expr MUL expr .)
    RPAREN          reduce using rule 150 (expr -> expr MUL expr .)
    COMMA           reduce using rule 150 (expr -> expr MUL expr .)
    DOUBLE_ARROW    reduce using rule 150 (expr -> expr MUL expr .)
    RBRACE          reduce using rule 150 (expr -> expr MUL expr .)
    COLON           reduce using rule 150 (expr -> expr MUL expr .)
    RBRACKET        reduce using rule 150 (expr -> expr MUL expr .)
    INSTANCEOF      shift and go to state 115

  ! INSTANCEOF      [ reduce using rule 150 (expr -> expr MUL expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! CONCAT          [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! MUL             [ shift and go to state 102 ]
  ! DIV             [ shift and go to state 103 ]
  ! SL              [ shift and go to state 104 ]
  ! SR              [ shift and go to state 105 ]
  ! MOD             [ shift and go to state 106 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 224

    (151) expr -> expr DIV expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 151 (expr -> expr DIV expr .)
    LBRACE          reduce using rule 151 (expr -> expr DIV expr .)
    BOOLEAN_AND     reduce using rule 151 (expr -> expr DIV expr .)
    BOOLEAN_OR      reduce using rule 151 (expr -> expr DIV expr .)
    LOGICAL_AND     reduce using rule 151 (expr -> expr DIV expr .)
    LOGICAL_OR      reduce using rule 151 (expr -> expr DIV expr .)
    LOGICAL_XOR     reduce using rule 151 (expr -> expr DIV expr .)
    AND             reduce using rule 151 (expr -> expr DIV expr .)
    OR              reduce using rule 151 (expr -> expr DIV expr .)
    XOR             reduce using rule 151 (expr -> expr DIV expr .)
    CONCAT          reduce using rule 151 (expr -> expr DIV expr .)
    PLUS            reduce using rule 151 (expr -> expr DIV expr .)
    MINUS           reduce using rule 151 (expr -> expr DIV expr .)
    MUL             reduce using rule 151 (expr -> expr DIV expr .)
    DIV             reduce using rule 151 (expr -> expr DIV expr .)
    SL              reduce using rule 151 (expr -> expr DIV expr .)
    SR              reduce using rule 151 (expr -> expr DIV expr .)
    MOD             reduce using rule 151 (expr -> expr DIV expr .)
    IS_IDENTICAL    reduce using rule 151 (expr -> expr DIV expr .)
    IS_NOT_IDENTICAL reduce using rule 151 (expr -> expr DIV expr .)
    IS_EQUAL_TO     reduce using rule 151 (expr -> expr DIV expr .)
    IS_NOT_EQUAL    reduce using rule 151 (expr -> expr DIV expr .)
    LESS_THAN       reduce using rule 151 (expr -> expr DIV expr .)
    LESS_THAN_OR_EQUAL reduce using rule 151 (expr -> expr DIV expr .)
    GREATER_THAN    reduce using rule 151 (expr -> expr DIV expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 151 (expr -> expr DIV expr .)
    SPACESHIP       reduce using rule 151 (expr -> expr DIV expr .)
    QUESTION        reduce using rule 151 (expr -> expr DIV expr .)
    RPAREN          reduce using rule 151 (expr -> expr DIV expr .)
    COMMA           reduce using rule 151 (expr -> expr DIV expr .)
    DOUBLE_ARROW    reduce using rule 151 (expr -> expr DIV expr .)
    RBRACE          reduce using rule 151 (expr -> expr DIV expr .)
    COLON           reduce using rule 151 (expr -> expr DIV expr .)
    RBRACKET        reduce using rule 151 (expr -> expr DIV expr .)
    INSTANCEOF      shift and go to state 115

  ! INSTANCEOF      [ reduce using rule 151 (expr -> expr DIV expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! CONCAT          [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! MUL             [ shift and go to state 102 ]
  ! DIV             [ shift and go to state 103 ]
  ! SL              [ shift and go to state 104 ]
  ! SR              [ shift and go to state 105 ]
  ! MOD             [ shift and go to state 106 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 225

    (152) expr -> expr SL expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 152 (expr -> expr SL expr .)
    LBRACE          reduce using rule 152 (expr -> expr SL expr .)
    BOOLEAN_AND     reduce using rule 152 (expr -> expr SL expr .)
    BOOLEAN_OR      reduce using rule 152 (expr -> expr SL expr .)
    LOGICAL_AND     reduce using rule 152 (expr -> expr SL expr .)
    LOGICAL_OR      reduce using rule 152 (expr -> expr SL expr .)
    LOGICAL_XOR     reduce using rule 152 (expr -> expr SL expr .)
    AND             reduce using rule 152 (expr -> expr SL expr .)
    OR              reduce using rule 152 (expr -> expr SL expr .)
    XOR             reduce using rule 152 (expr -> expr SL expr .)
    SL              reduce using rule 152 (expr -> expr SL expr .)
    SR              reduce using rule 152 (expr -> expr SL expr .)
    IS_IDENTICAL    reduce using rule 152 (expr -> expr SL expr .)
    IS_NOT_IDENTICAL reduce using rule 152 (expr -> expr SL expr .)
    IS_EQUAL_TO     reduce using rule 152 (expr -> expr SL expr .)
    IS_NOT_EQUAL    reduce using rule 152 (expr -> expr SL expr .)
    LESS_THAN       reduce using rule 152 (expr -> expr SL expr .)
    LESS_THAN_OR_EQUAL reduce using rule 152 (expr -> expr SL expr .)
    GREATER_THAN    reduce using rule 152 (expr -> expr SL expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 152 (expr -> expr SL expr .)
    SPACESHIP       reduce using rule 152 (expr -> expr SL expr .)
    QUESTION        reduce using rule 152 (expr -> expr SL expr .)
    RPAREN          reduce using rule 152 (expr -> expr SL expr .)
    COMMA           reduce using rule 152 (expr -> expr SL expr .)
    DOUBLE_ARROW    reduce using rule 152 (expr -> expr SL expr .)
    RBRACE          reduce using rule 152 (expr -> expr SL expr .)
    COLON           reduce using rule 152 (expr -> expr SL expr .)
    RBRACKET        reduce using rule 152 (expr -> expr SL expr .)
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    MOD             shift and go to state 106
    INSTANCEOF      shift and go to state 115

  ! CONCAT          [ reduce using rule 152 (expr -> expr SL expr .) ]
  ! PLUS            [ reduce using rule 152 (expr -> expr SL expr .) ]
  ! MINUS           [ reduce using rule 152 (expr -> expr SL expr .) ]
  ! MUL             [ reduce using rule 152 (expr -> expr SL expr .) ]
  ! DIV             [ reduce using rule 152 (expr -> expr SL expr .) ]
  ! MOD             [ reduce using rule 152 (expr -> expr SL expr .) ]
  ! INSTANCEOF      [ reduce using rule 152 (expr -> expr SL expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! SL              [ shift and go to state 104 ]
  ! SR              [ shift and go to state 105 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 226

    (153) expr -> expr SR expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 153 (expr -> expr SR expr .)
    LBRACE          reduce using rule 153 (expr -> expr SR expr .)
    BOOLEAN_AND     reduce using rule 153 (expr -> expr SR expr .)
    BOOLEAN_OR      reduce using rule 153 (expr -> expr SR expr .)
    LOGICAL_AND     reduce using rule 153 (expr -> expr SR expr .)
    LOGICAL_OR      reduce using rule 153 (expr -> expr SR expr .)
    LOGICAL_XOR     reduce using rule 153 (expr -> expr SR expr .)
    AND             reduce using rule 153 (expr -> expr SR expr .)
    OR              reduce using rule 153 (expr -> expr SR expr .)
    XOR             reduce using rule 153 (expr -> expr SR expr .)
    SL              reduce using rule 153 (expr -> expr SR expr .)
    SR              reduce using rule 153 (expr -> expr SR expr .)
    IS_IDENTICAL    reduce using rule 153 (expr -> expr SR expr .)
    IS_NOT_IDENTICAL reduce using rule 153 (expr -> expr SR expr .)
    IS_EQUAL_TO     reduce using rule 153 (expr -> expr SR expr .)
    IS_NOT_EQUAL    reduce using rule 153 (expr -> expr SR expr .)
    LESS_THAN       reduce using rule 153 (expr -> expr SR expr .)
    LESS_THAN_OR_EQUAL reduce using rule 153 (expr -> expr SR expr .)
    GREATER_THAN    reduce using rule 153 (expr -> expr SR expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 153 (expr -> expr SR expr .)
    SPACESHIP       reduce using rule 153 (expr -> expr SR expr .)
    QUESTION        reduce using rule 153 (expr -> expr SR expr .)
    RPAREN          reduce using rule 153 (expr -> expr SR expr .)
    COMMA           reduce using rule 153 (expr -> expr SR expr .)
    DOUBLE_ARROW    reduce using rule 153 (expr -> expr SR expr .)
    RBRACE          reduce using rule 153 (expr -> expr SR expr .)
    COLON           reduce using rule 153 (expr -> expr SR expr .)
    RBRACKET        reduce using rule 153 (expr -> expr SR expr .)
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    MOD             shift and go to state 106
    INSTANCEOF      shift and go to state 115

  ! CONCAT          [ reduce using rule 153 (expr -> expr SR expr .) ]
  ! PLUS            [ reduce using rule 153 (expr -> expr SR expr .) ]
  ! MINUS           [ reduce using rule 153 (expr -> expr SR expr .) ]
  ! MUL             [ reduce using rule 153 (expr -> expr SR expr .) ]
  ! DIV             [ reduce using rule 153 (expr -> expr SR expr .) ]
  ! MOD             [ reduce using rule 153 (expr -> expr SR expr .) ]
  ! INSTANCEOF      [ reduce using rule 153 (expr -> expr SR expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! SL              [ shift and go to state 104 ]
  ! SR              [ shift and go to state 105 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 227

    (154) expr -> expr MOD expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 154 (expr -> expr MOD expr .)
    LBRACE          reduce using rule 154 (expr -> expr MOD expr .)
    BOOLEAN_AND     reduce using rule 154 (expr -> expr MOD expr .)
    BOOLEAN_OR      reduce using rule 154 (expr -> expr MOD expr .)
    LOGICAL_AND     reduce using rule 154 (expr -> expr MOD expr .)
    LOGICAL_OR      reduce using rule 154 (expr -> expr MOD expr .)
    LOGICAL_XOR     reduce using rule 154 (expr -> expr MOD expr .)
    AND             reduce using rule 154 (expr -> expr MOD expr .)
    OR              reduce using rule 154 (expr -> expr MOD expr .)
    XOR             reduce using rule 154 (expr -> expr MOD expr .)
    CONCAT          reduce using rule 154 (expr -> expr MOD expr .)
    PLUS            reduce using rule 154 (expr -> expr MOD expr .)
    MINUS           reduce using rule 154 (expr -> expr MOD expr .)
    MUL             reduce using rule 154 (expr -> expr MOD expr .)
    DIV             reduce using rule 154 (expr -> expr MOD expr .)
    SL              reduce using rule 154 (expr -> expr MOD expr .)
    SR              reduce using rule 154 (expr -> expr MOD expr .)
    MOD             reduce using rule 154 (expr -> expr MOD expr .)
    IS_IDENTICAL    reduce using rule 154 (expr -> expr MOD expr .)
    IS_NOT_IDENTICAL reduce using rule 154 (expr -> expr MOD expr .)
    IS_EQUAL_TO     reduce using rule 154 (expr -> expr MOD expr .)
    IS_NOT_EQUAL    reduce using rule 154 (expr -> expr MOD expr .)
    LESS_THAN       reduce using rule 154 (expr -> expr MOD expr .)
    LESS_THAN_OR_EQUAL reduce using rule 154 (expr -> expr MOD expr .)
    GREATER_THAN    reduce using rule 154 (expr -> expr MOD expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 154 (expr -> expr MOD expr .)
    SPACESHIP       reduce using rule 154 (expr -> expr MOD expr .)
    QUESTION        reduce using rule 154 (expr -> expr MOD expr .)
    RPAREN          reduce using rule 154 (expr -> expr MOD expr .)
    COMMA           reduce using rule 154 (expr -> expr MOD expr .)
    DOUBLE_ARROW    reduce using rule 154 (expr -> expr MOD expr .)
    RBRACE          reduce using rule 154 (expr -> expr MOD expr .)
    COLON           reduce using rule 154 (expr -> expr MOD expr .)
    RBRACKET        reduce using rule 154 (expr -> expr MOD expr .)
    INSTANCEOF      shift and go to state 115

  ! INSTANCEOF      [ reduce using rule 154 (expr -> expr MOD expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! CONCAT          [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! MUL             [ shift and go to state 102 ]
  ! DIV             [ shift and go to state 103 ]
  ! SL              [ shift and go to state 104 ]
  ! SR              [ shift and go to state 105 ]
  ! MOD             [ shift and go to state 106 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 228

    (155) expr -> expr IS_IDENTICAL expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 155 (expr -> expr IS_IDENTICAL expr .)
    LBRACE          reduce using rule 155 (expr -> expr IS_IDENTICAL expr .)
    BOOLEAN_AND     reduce using rule 155 (expr -> expr IS_IDENTICAL expr .)
    BOOLEAN_OR      reduce using rule 155 (expr -> expr IS_IDENTICAL expr .)
    LOGICAL_AND     reduce using rule 155 (expr -> expr IS_IDENTICAL expr .)
    LOGICAL_OR      reduce using rule 155 (expr -> expr IS_IDENTICAL expr .)
    LOGICAL_XOR     reduce using rule 155 (expr -> expr IS_IDENTICAL expr .)
    AND             reduce using rule 155 (expr -> expr IS_IDENTICAL expr .)
    OR              reduce using rule 155 (expr -> expr IS_IDENTICAL expr .)
    XOR             reduce using rule 155 (expr -> expr IS_IDENTICAL expr .)
    IS_IDENTICAL    reduce using rule 155 (expr -> expr IS_IDENTICAL expr .)
    IS_NOT_IDENTICAL reduce using rule 155 (expr -> expr IS_IDENTICAL expr .)
    IS_EQUAL_TO     reduce using rule 155 (expr -> expr IS_IDENTICAL expr .)
    IS_NOT_EQUAL    reduce using rule 155 (expr -> expr IS_IDENTICAL expr .)
    QUESTION        reduce using rule 155 (expr -> expr IS_IDENTICAL expr .)
    RPAREN          reduce using rule 155 (expr -> expr IS_IDENTICAL expr .)
    COMMA           reduce using rule 155 (expr -> expr IS_IDENTICAL expr .)
    DOUBLE_ARROW    reduce using rule 155 (expr -> expr IS_IDENTICAL expr .)
    RBRACE          reduce using rule 155 (expr -> expr IS_IDENTICAL expr .)
    COLON           reduce using rule 155 (expr -> expr IS_IDENTICAL expr .)
    RBRACKET        reduce using rule 155 (expr -> expr IS_IDENTICAL expr .)
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116

  ! CONCAT          [ reduce using rule 155 (expr -> expr IS_IDENTICAL expr .) ]
  ! PLUS            [ reduce using rule 155 (expr -> expr IS_IDENTICAL expr .) ]
  ! MINUS           [ reduce using rule 155 (expr -> expr IS_IDENTICAL expr .) ]
  ! MUL             [ reduce using rule 155 (expr -> expr IS_IDENTICAL expr .) ]
  ! DIV             [ reduce using rule 155 (expr -> expr IS_IDENTICAL expr .) ]
  ! SL              [ reduce using rule 155 (expr -> expr IS_IDENTICAL expr .) ]
  ! SR              [ reduce using rule 155 (expr -> expr IS_IDENTICAL expr .) ]
  ! MOD             [ reduce using rule 155 (expr -> expr IS_IDENTICAL expr .) ]
  ! LESS_THAN       [ reduce using rule 155 (expr -> expr IS_IDENTICAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 155 (expr -> expr IS_IDENTICAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 155 (expr -> expr IS_IDENTICAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 155 (expr -> expr IS_IDENTICAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 155 (expr -> expr IS_IDENTICAL expr .) ]
  ! SPACESHIP       [ reduce using rule 155 (expr -> expr IS_IDENTICAL expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! QUESTION        [ shift and go to state 117 ]


state 229

    (156) expr -> expr IS_NOT_IDENTICAL expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .)
    LBRACE          reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .)
    BOOLEAN_AND     reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .)
    BOOLEAN_OR      reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .)
    LOGICAL_AND     reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .)
    LOGICAL_OR      reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .)
    LOGICAL_XOR     reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .)
    AND             reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .)
    OR              reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .)
    XOR             reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .)
    IS_IDENTICAL    reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .)
    IS_NOT_IDENTICAL reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .)
    IS_EQUAL_TO     reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .)
    IS_NOT_EQUAL    reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .)
    QUESTION        reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .)
    RPAREN          reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .)
    COMMA           reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .)
    DOUBLE_ARROW    reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .)
    RBRACE          reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .)
    COLON           reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .)
    RBRACKET        reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .)
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116

  ! CONCAT          [ reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! PLUS            [ reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! MINUS           [ reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! MUL             [ reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! DIV             [ reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! SL              [ reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! SR              [ reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! MOD             [ reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! LESS_THAN       [ reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! SPACESHIP       [ reduce using rule 156 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! QUESTION        [ shift and go to state 117 ]


state 230

    (157) expr -> expr IS_EQUAL_TO expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .)
    LBRACE          reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .)
    BOOLEAN_AND     reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .)
    BOOLEAN_OR      reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .)
    LOGICAL_AND     reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .)
    LOGICAL_OR      reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .)
    LOGICAL_XOR     reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .)
    AND             reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .)
    OR              reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .)
    XOR             reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .)
    IS_IDENTICAL    reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .)
    IS_NOT_IDENTICAL reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .)
    IS_EQUAL_TO     reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .)
    IS_NOT_EQUAL    reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .)
    QUESTION        reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .)
    RPAREN          reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .)
    COMMA           reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .)
    DOUBLE_ARROW    reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .)
    RBRACE          reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .)
    COLON           reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .)
    RBRACKET        reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .)
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116

  ! CONCAT          [ reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .) ]
  ! PLUS            [ reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .) ]
  ! MINUS           [ reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .) ]
  ! MUL             [ reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .) ]
  ! DIV             [ reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .) ]
  ! SL              [ reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .) ]
  ! SR              [ reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .) ]
  ! MOD             [ reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .) ]
  ! LESS_THAN       [ reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .) ]
  ! GREATER_THAN    [ reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .) ]
  ! INSTANCEOF      [ reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .) ]
  ! SPACESHIP       [ reduce using rule 157 (expr -> expr IS_EQUAL_TO expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! QUESTION        [ shift and go to state 117 ]


state 231

    (158) expr -> expr IS_NOT_EQUAL expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .)
    LBRACE          reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .)
    BOOLEAN_AND     reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .)
    BOOLEAN_OR      reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .)
    LOGICAL_AND     reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .)
    LOGICAL_OR      reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .)
    AND             reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .)
    OR              reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .)
    XOR             reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .)
    IS_IDENTICAL    reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .)
    IS_NOT_IDENTICAL reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .)
    IS_EQUAL_TO     reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .)
    IS_NOT_EQUAL    reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .)
    QUESTION        reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .)
    RPAREN          reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .)
    COMMA           reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .)
    RBRACE          reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .)
    COLON           reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .)
    RBRACKET        reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .)
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116

  ! CONCAT          [ reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! MUL             [ reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! DIV             [ reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! SL              [ reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! SR              [ reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! MOD             [ reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! LESS_THAN       [ reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! SPACESHIP       [ reduce using rule 158 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! QUESTION        [ shift and go to state 117 ]


state 232

    (159) expr -> expr LESS_THAN expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 159 (expr -> expr LESS_THAN expr .)
    LBRACE          reduce using rule 159 (expr -> expr LESS_THAN expr .)
    BOOLEAN_AND     reduce using rule 159 (expr -> expr LESS_THAN expr .)
    BOOLEAN_OR      reduce using rule 159 (expr -> expr LESS_THAN expr .)
    LOGICAL_AND     reduce using rule 159 (expr -> expr LESS_THAN expr .)
    LOGICAL_OR      reduce using rule 159 (expr -> expr LESS_THAN expr .)
    LOGICAL_XOR     reduce using rule 159 (expr -> expr LESS_THAN expr .)
    AND             reduce using rule 159 (expr -> expr LESS_THAN expr .)
    OR              reduce using rule 159 (expr -> expr LESS_THAN expr .)
    XOR             reduce using rule 159 (expr -> expr LESS_THAN expr .)
    IS_IDENTICAL    reduce using rule 159 (expr -> expr LESS_THAN expr .)
    IS_NOT_IDENTICAL reduce using rule 159 (expr -> expr LESS_THAN expr .)
    IS_EQUAL_TO     reduce using rule 159 (expr -> expr LESS_THAN expr .)
    IS_NOT_EQUAL    reduce using rule 159 (expr -> expr LESS_THAN expr .)
    LESS_THAN       reduce using rule 159 (expr -> expr LESS_THAN expr .)
    LESS_THAN_OR_EQUAL reduce using rule 159 (expr -> expr LESS_THAN expr .)
    GREATER_THAN    reduce using rule 159 (expr -> expr LESS_THAN expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 159 (expr -> expr LESS_THAN expr .)
    SPACESHIP       reduce using rule 159 (expr -> expr LESS_THAN expr .)
    QUESTION        reduce using rule 159 (expr -> expr LESS_THAN expr .)
    RPAREN          reduce using rule 159 (expr -> expr LESS_THAN expr .)
    COMMA           reduce using rule 159 (expr -> expr LESS_THAN expr .)
    DOUBLE_ARROW    reduce using rule 159 (expr -> expr LESS_THAN expr .)
    RBRACE          reduce using rule 159 (expr -> expr LESS_THAN expr .)
    COLON           reduce using rule 159 (expr -> expr LESS_THAN expr .)
    RBRACKET        reduce using rule 159 (expr -> expr LESS_THAN expr .)
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    INSTANCEOF      shift and go to state 115

  ! CONCAT          [ reduce using rule 159 (expr -> expr LESS_THAN expr .) ]
  ! PLUS            [ reduce using rule 159 (expr -> expr LESS_THAN expr .) ]
  ! MINUS           [ reduce using rule 159 (expr -> expr LESS_THAN expr .) ]
  ! MUL             [ reduce using rule 159 (expr -> expr LESS_THAN expr .) ]
  ! DIV             [ reduce using rule 159 (expr -> expr LESS_THAN expr .) ]
  ! SL              [ reduce using rule 159 (expr -> expr LESS_THAN expr .) ]
  ! SR              [ reduce using rule 159 (expr -> expr LESS_THAN expr .) ]
  ! MOD             [ reduce using rule 159 (expr -> expr LESS_THAN expr .) ]
  ! INSTANCEOF      [ reduce using rule 159 (expr -> expr LESS_THAN expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 233

    (160) expr -> expr LESS_THAN_OR_EQUAL expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    LBRACE          reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    BOOLEAN_AND     reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    BOOLEAN_OR      reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    LOGICAL_AND     reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    LOGICAL_OR      reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    AND             reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    OR              reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    XOR             reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    IS_IDENTICAL    reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    IS_NOT_IDENTICAL reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    IS_EQUAL_TO     reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    IS_NOT_EQUAL    reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    LESS_THAN       reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    LESS_THAN_OR_EQUAL reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    GREATER_THAN    reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    SPACESHIP       reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    QUESTION        reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    RPAREN          reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    COMMA           reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    RBRACE          reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    COLON           reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    RBRACKET        reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    INSTANCEOF      shift and go to state 115

  ! CONCAT          [ reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .) ]
  ! MUL             [ reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .) ]
  ! DIV             [ reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .) ]
  ! SL              [ reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .) ]
  ! SR              [ reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .) ]
  ! MOD             [ reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 160 (expr -> expr LESS_THAN_OR_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 234

    (161) expr -> expr GREATER_THAN expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    LBRACE          reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    BOOLEAN_AND     reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    BOOLEAN_OR      reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    LOGICAL_AND     reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    LOGICAL_OR      reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    LOGICAL_XOR     reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    AND             reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    OR              reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    XOR             reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    IS_IDENTICAL    reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    IS_NOT_IDENTICAL reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    IS_EQUAL_TO     reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    IS_NOT_EQUAL    reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    LESS_THAN       reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    LESS_THAN_OR_EQUAL reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    GREATER_THAN    reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    SPACESHIP       reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    QUESTION        reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    RPAREN          reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    COMMA           reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    DOUBLE_ARROW    reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    RBRACE          reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    COLON           reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    RBRACKET        reduce using rule 161 (expr -> expr GREATER_THAN expr .)
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    INSTANCEOF      shift and go to state 115

  ! CONCAT          [ reduce using rule 161 (expr -> expr GREATER_THAN expr .) ]
  ! PLUS            [ reduce using rule 161 (expr -> expr GREATER_THAN expr .) ]
  ! MINUS           [ reduce using rule 161 (expr -> expr GREATER_THAN expr .) ]
  ! MUL             [ reduce using rule 161 (expr -> expr GREATER_THAN expr .) ]
  ! DIV             [ reduce using rule 161 (expr -> expr GREATER_THAN expr .) ]
  ! SL              [ reduce using rule 161 (expr -> expr GREATER_THAN expr .) ]
  ! SR              [ reduce using rule 161 (expr -> expr GREATER_THAN expr .) ]
  ! MOD             [ reduce using rule 161 (expr -> expr GREATER_THAN expr .) ]
  ! INSTANCEOF      [ reduce using rule 161 (expr -> expr GREATER_THAN expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 235

    (162) expr -> expr GRATER_THAN_OR_EQUAL expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    LBRACE          reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    BOOLEAN_AND     reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    BOOLEAN_OR      reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    LOGICAL_AND     reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    LOGICAL_OR      reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    AND             reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    OR              reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    XOR             reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    IS_IDENTICAL    reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    IS_NOT_IDENTICAL reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    IS_EQUAL_TO     reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    IS_NOT_EQUAL    reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    LESS_THAN       reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    LESS_THAN_OR_EQUAL reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    GREATER_THAN    reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    SPACESHIP       reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    QUESTION        reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    RPAREN          reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    COMMA           reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    RBRACE          reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    COLON           reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    RBRACKET        reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    INSTANCEOF      shift and go to state 115

  ! CONCAT          [ reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .) ]
  ! MUL             [ reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .) ]
  ! DIV             [ reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .) ]
  ! SL              [ reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .) ]
  ! SR              [ reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .) ]
  ! MOD             [ reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 162 (expr -> expr GRATER_THAN_OR_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 236

    (163) expr -> expr INSTANCEOF expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    LBRACE          reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    BOOLEAN_AND     reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    BOOLEAN_OR      reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    LOGICAL_AND     reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    LOGICAL_OR      reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    LOGICAL_XOR     reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    AND             reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    OR              reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    XOR             reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    CONCAT          reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    PLUS            reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    MINUS           reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    MUL             reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    DIV             reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    SL              reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    SR              reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    MOD             reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    IS_IDENTICAL    reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    IS_NOT_IDENTICAL reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    IS_EQUAL_TO     reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    IS_NOT_EQUAL    reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    LESS_THAN       reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    LESS_THAN_OR_EQUAL reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    GREATER_THAN    reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    SPACESHIP       reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    QUESTION        reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    RPAREN          reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    COMMA           reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    DOUBLE_ARROW    reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    RBRACE          reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    COLON           reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    RBRACKET        reduce using rule 163 (expr -> expr INSTANCEOF expr .)
    INSTANCEOF      shift and go to state 115

  ! INSTANCEOF      [ reduce using rule 163 (expr -> expr INSTANCEOF expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! CONCAT          [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! MUL             [ shift and go to state 102 ]
  ! DIV             [ shift and go to state 103 ]
  ! SL              [ shift and go to state 104 ]
  ! SR              [ shift and go to state 105 ]
  ! MOD             [ shift and go to state 106 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 237

    (165) expr -> expr INSTANCEOF STATIC .

    SEMI_COLON      reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    LBRACE          reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    BOOLEAN_AND     reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    BOOLEAN_OR      reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    LOGICAL_AND     reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    LOGICAL_OR      reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    LOGICAL_XOR     reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    AND             reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    OR              reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    XOR             reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    CONCAT          reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    PLUS            reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    MINUS           reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    MUL             reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    DIV             reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    SL              reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    SR              reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    MOD             reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    IS_IDENTICAL    reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    IS_NOT_IDENTICAL reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    IS_EQUAL_TO     reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    IS_NOT_EQUAL    reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    LESS_THAN       reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    LESS_THAN_OR_EQUAL reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    GREATER_THAN    reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    GRATER_THAN_OR_EQUAL reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    INSTANCEOF      reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    SPACESHIP       reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    QUESTION        reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    RPAREN          reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    COMMA           reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    DOUBLE_ARROW    reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    RBRACE          reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    COLON           reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)
    RBRACKET        reduce using rule 165 (expr -> expr INSTANCEOF STATIC .)


state 238

    (164) expr -> expr SPACESHIP expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 164 (expr -> expr SPACESHIP expr .)
    LBRACE          reduce using rule 164 (expr -> expr SPACESHIP expr .)
    BOOLEAN_AND     reduce using rule 164 (expr -> expr SPACESHIP expr .)
    BOOLEAN_OR      reduce using rule 164 (expr -> expr SPACESHIP expr .)
    LOGICAL_AND     reduce using rule 164 (expr -> expr SPACESHIP expr .)
    LOGICAL_OR      reduce using rule 164 (expr -> expr SPACESHIP expr .)
    LOGICAL_XOR     reduce using rule 164 (expr -> expr SPACESHIP expr .)
    AND             reduce using rule 164 (expr -> expr SPACESHIP expr .)
    OR              reduce using rule 164 (expr -> expr SPACESHIP expr .)
    XOR             reduce using rule 164 (expr -> expr SPACESHIP expr .)
    IS_IDENTICAL    reduce using rule 164 (expr -> expr SPACESHIP expr .)
    IS_NOT_IDENTICAL reduce using rule 164 (expr -> expr SPACESHIP expr .)
    IS_EQUAL_TO     reduce using rule 164 (expr -> expr SPACESHIP expr .)
    IS_NOT_EQUAL    reduce using rule 164 (expr -> expr SPACESHIP expr .)
    LESS_THAN       reduce using rule 164 (expr -> expr SPACESHIP expr .)
    LESS_THAN_OR_EQUAL reduce using rule 164 (expr -> expr SPACESHIP expr .)
    GREATER_THAN    reduce using rule 164 (expr -> expr SPACESHIP expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 164 (expr -> expr SPACESHIP expr .)
    SPACESHIP       reduce using rule 164 (expr -> expr SPACESHIP expr .)
    QUESTION        reduce using rule 164 (expr -> expr SPACESHIP expr .)
    RPAREN          reduce using rule 164 (expr -> expr SPACESHIP expr .)
    COMMA           reduce using rule 164 (expr -> expr SPACESHIP expr .)
    DOUBLE_ARROW    reduce using rule 164 (expr -> expr SPACESHIP expr .)
    RBRACE          reduce using rule 164 (expr -> expr SPACESHIP expr .)
    COLON           reduce using rule 164 (expr -> expr SPACESHIP expr .)
    RBRACKET        reduce using rule 164 (expr -> expr SPACESHIP expr .)
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    INSTANCEOF      shift and go to state 115

  ! CONCAT          [ reduce using rule 164 (expr -> expr SPACESHIP expr .) ]
  ! PLUS            [ reduce using rule 164 (expr -> expr SPACESHIP expr .) ]
  ! MINUS           [ reduce using rule 164 (expr -> expr SPACESHIP expr .) ]
  ! MUL             [ reduce using rule 164 (expr -> expr SPACESHIP expr .) ]
  ! DIV             [ reduce using rule 164 (expr -> expr SPACESHIP expr .) ]
  ! SL              [ reduce using rule 164 (expr -> expr SPACESHIP expr .) ]
  ! SR              [ reduce using rule 164 (expr -> expr SPACESHIP expr .) ]
  ! MOD             [ reduce using rule 164 (expr -> expr SPACESHIP expr .) ]
  ! INSTANCEOF      [ reduce using rule 164 (expr -> expr SPACESHIP expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! IS_IDENTICAL    [ shift and go to state 107 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 108 ]
  ! IS_EQUAL_TO     [ shift and go to state 109 ]
  ! IS_NOT_EQUAL    [ shift and go to state 110 ]
  ! LESS_THAN       [ shift and go to state 111 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 112 ]
  ! GREATER_THAN    [ shift and go to state 113 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! SPACESHIP       [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 117 ]


state 239

    (170) expr -> expr QUESTION expr . COLON expr
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    COLON           shift and go to state 331
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 240

    (171) expr -> expr QUESTION COLON . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 332
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 241

    (21) statement -> WHILE LPAREN expr . RPAREN while_statement
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    RPAREN          shift and go to state 333
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 242

    (22) statement -> DO statement WHILE . LPAREN expr RPAREN SEMI_COLON

    LPAREN          shift and go to state 334


state 243

    (23) statement -> FOR LPAREN for_expr . SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement

    SEMI_COLON      shift and go to state 335


state 244

    (46) for_expr -> empty .

    SEMI_COLON      reduce using rule 46 (for_expr -> empty .)
    RPAREN          reduce using rule 46 (for_expr -> empty .)


state 245

    (47) for_expr -> non_empty_for_expr .
    (48) non_empty_for_expr -> non_empty_for_expr . COMMA expr

    SEMI_COLON      reduce using rule 47 (for_expr -> non_empty_for_expr .)
    RPAREN          reduce using rule 47 (for_expr -> non_empty_for_expr .)
    COMMA           shift and go to state 336


state 246

    (49) non_empty_for_expr -> expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    COMMA           reduce using rule 49 (non_empty_for_expr -> expr .)
    SEMI_COLON      reduce using rule 49 (non_empty_for_expr -> expr .)
    RPAREN          reduce using rule 49 (non_empty_for_expr -> expr .)
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 247

    (24) statement -> SWITCH LPAREN expr . RPAREN switch_case_list
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    RPAREN          shift and go to state 337
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 248

    (26) statement -> BREAK expr SEMI_COLON .

    HALT_COMPILER   reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    CONST           reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    LBRACE          reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    IF              reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    WHILE           reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    DO              reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    FOR             reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    SWITCH          reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    BREAK           reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    CONTINUE        reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    RETURN          reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    GLOBAL          reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    STATIC          reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    ECHO            reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    INLINE_HTML     reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    UNSET           reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    SEMI_COLON      reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    FUNCTION        reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    CLONE           reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    LIST            reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    ARRAY           reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    LBRACKET        reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    PLUS            reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    MINUS           reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    NOT             reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    INC             reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    DEC             reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    INT_CAST        reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    ARRAY_CAST      reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    STRING_CAST     reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    BOOL_CAST       reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    UNSET_CAST      reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    BINARY_CAST     reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    ISSET           reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    EMPTY           reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    EVAL            reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    INCLUDE         reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    REQUIRE         reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    PRINT           reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    AT              reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    LPAREN          reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    IDENTIFIER      reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    EXIT            reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    DIE             reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    INT_NUMBER      reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    FUNC_C          reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    METHOD_C        reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    LINE            reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    FILE            reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    DIR             reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    START_HEREDOC   reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    START_NOWDOC    reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    VARIABLE        reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    DOLLAR          reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    $end            reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    RBRACE          reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    YIELD           reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    ELSE            reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    ELSEIF          reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    ENDIF           reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    ENDWHILE        reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    ENDSWITCH       reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    ENDFOR          reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    CASE            reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)
    DEFAULT         reduce using rule 26 (statement -> BREAK expr SEMI_COLON .)


state 249

    (28) statement -> CONTINUE expr SEMI_COLON .

    HALT_COMPILER   reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    CONST           reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    LBRACE          reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    IF              reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    WHILE           reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    DO              reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    FOR             reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    SWITCH          reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    BREAK           reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    CONTINUE        reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    RETURN          reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    GLOBAL          reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    STATIC          reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    ECHO            reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    INLINE_HTML     reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    UNSET           reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    SEMI_COLON      reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    FUNCTION        reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    CLONE           reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    LIST            reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    ARRAY           reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    LBRACKET        reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    PLUS            reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    MINUS           reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    NOT             reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    INC             reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    DEC             reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    INT_CAST        reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    ARRAY_CAST      reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    STRING_CAST     reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    BOOL_CAST       reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    UNSET_CAST      reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    BINARY_CAST     reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    ISSET           reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    EMPTY           reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    EVAL            reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    INCLUDE         reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    REQUIRE         reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    PRINT           reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    AT              reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    LPAREN          reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    IDENTIFIER      reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    EXIT            reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    DIE             reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    INT_NUMBER      reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    FUNC_C          reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    METHOD_C        reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    LINE            reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    FILE            reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    DIR             reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    START_HEREDOC   reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    START_NOWDOC    reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    VARIABLE        reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    DOLLAR          reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    $end            reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    RBRACE          reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    YIELD           reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    ELSE            reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    ELSEIF          reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    ENDIF           reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    ENDWHILE        reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    ENDSWITCH       reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    ENDFOR          reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    CASE            reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)
    DEFAULT         reduce using rule 28 (statement -> CONTINUE expr SEMI_COLON .)


state 250

    (30) statement -> RETURN expr SEMI_COLON .

    HALT_COMPILER   reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    CONST           reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    LBRACE          reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    IF              reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    WHILE           reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    DO              reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    FOR             reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    SWITCH          reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    BREAK           reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    CONTINUE        reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    RETURN          reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    GLOBAL          reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    STATIC          reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    ECHO            reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    INLINE_HTML     reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    UNSET           reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    SEMI_COLON      reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    FUNCTION        reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    CLONE           reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    LIST            reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    ARRAY           reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    LBRACKET        reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    PLUS            reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    MINUS           reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    NOT             reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    INC             reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    DEC             reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    INT_CAST        reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    ARRAY_CAST      reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    STRING_CAST     reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    BOOL_CAST       reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    UNSET_CAST      reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    BINARY_CAST     reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    ISSET           reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    EMPTY           reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    EVAL            reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    INCLUDE         reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    REQUIRE         reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    PRINT           reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    AT              reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    LPAREN          reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    IDENTIFIER      reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    EXIT            reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    DIE             reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    INT_NUMBER      reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    FUNC_C          reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    METHOD_C        reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    LINE            reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    FILE            reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    DIR             reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    START_HEREDOC   reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    START_NOWDOC    reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    VARIABLE        reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    DOLLAR          reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    $end            reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    RBRACE          reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    YIELD           reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    ELSE            reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    ELSEIF          reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    ENDIF           reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    ENDWHILE        reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    ENDSWITCH       reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    ENDFOR          reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    CASE            reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)
    DEFAULT         reduce using rule 30 (statement -> RETURN expr SEMI_COLON .)


state 251

    (31) statement -> GLOBAL global_var_list SEMI_COLON .

    HALT_COMPILER   reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    CONST           reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    LBRACE          reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    IF              reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    WHILE           reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    DO              reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    FOR             reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    SWITCH          reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    BREAK           reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    CONTINUE        reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    RETURN          reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    GLOBAL          reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    STATIC          reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    ECHO            reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    INLINE_HTML     reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    UNSET           reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    SEMI_COLON      reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    FUNCTION        reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    CLONE           reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    LIST            reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    ARRAY           reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    LBRACKET        reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    PLUS            reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    MINUS           reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    NOT             reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    INC             reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    DEC             reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    INT_CAST        reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    ARRAY_CAST      reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    STRING_CAST     reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    BOOL_CAST       reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    UNSET_CAST      reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    BINARY_CAST     reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    ISSET           reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    EMPTY           reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    EVAL            reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    INCLUDE         reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    REQUIRE         reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    PRINT           reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    AT              reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    LPAREN          reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    IDENTIFIER      reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    EXIT            reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    DIE             reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    INT_NUMBER      reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    FUNC_C          reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    METHOD_C        reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    LINE            reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    FILE            reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    DIR             reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    START_HEREDOC   reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    START_NOWDOC    reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    VARIABLE        reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    DOLLAR          reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    $end            reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    RBRACE          reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    YIELD           reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    ELSE            reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    ELSEIF          reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    ENDIF           reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    ENDWHILE        reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    ENDSWITCH       reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    ENDFOR          reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    CASE            reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)
    DEFAULT         reduce using rule 31 (statement -> GLOBAL global_var_list SEMI_COLON .)


state 252

    (63) global_var_list -> global_var_list COMMA . global_var
    (65) global_var -> . VARIABLE
    (66) global_var -> . DOLLAR variable
    (67) global_var -> . DOLLAR LBRACE expr RBRACE

    VARIABLE        shift and go to state 130
    DOLLAR          shift and go to state 131

    global_var                     shift and go to state 338

state 253

    (66) global_var -> DOLLAR variable .

    SEMI_COLON      reduce using rule 66 (global_var -> DOLLAR variable .)
    COMMA           reduce using rule 66 (global_var -> DOLLAR variable .)


state 254

    (67) global_var -> DOLLAR LBRACE . expr RBRACE
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 339
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 255

    (32) statement -> STATIC static_var_list SEMI_COLON .

    HALT_COMPILER   reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    CONST           reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    LBRACE          reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    IF              reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    WHILE           reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    DO              reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    FOR             reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    SWITCH          reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    BREAK           reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    CONTINUE        reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    RETURN          reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    GLOBAL          reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    STATIC          reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    ECHO            reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    INLINE_HTML     reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    UNSET           reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    SEMI_COLON      reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    FUNCTION        reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    CLONE           reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    LIST            reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    ARRAY           reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    LBRACKET        reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    PLUS            reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    MINUS           reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    NOT             reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    INC             reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    DEC             reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    INT_CAST        reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    ARRAY_CAST      reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    STRING_CAST     reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    BOOL_CAST       reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    UNSET_CAST      reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    BINARY_CAST     reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    ISSET           reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    EMPTY           reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    EVAL            reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    INCLUDE         reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    REQUIRE         reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    PRINT           reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    AT              reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    LPAREN          reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    IDENTIFIER      reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    EXIT            reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    DIE             reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    INT_NUMBER      reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    FUNC_C          reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    METHOD_C        reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    LINE            reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    FILE            reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    DIR             reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    START_HEREDOC   reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    START_NOWDOC    reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    VARIABLE        reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    DOLLAR          reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    $end            reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    RBRACE          reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    YIELD           reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    ELSE            reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    ELSEIF          reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    ENDIF           reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    ENDWHILE        reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    ENDSWITCH       reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    ENDFOR          reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    CASE            reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)
    DEFAULT         reduce using rule 32 (statement -> STATIC static_var_list SEMI_COLON .)


state 256

    (68) static_var_list -> static_var_list COMMA . static_var
    (70) static_var -> . VARIABLE EQUALS static_scalar
    (71) static_var -> . VARIABLE

    VARIABLE        shift and go to state 134

    static_var                     shift and go to state 340

state 257

    (70) static_var -> VARIABLE EQUALS . static_scalar
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_scalar                  shift and go to state 341
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 258

    (33) statement -> ECHO echo_expr_list SEMI_COLON .

    HALT_COMPILER   reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    CONST           reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    LBRACE          reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    IF              reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    WHILE           reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    DO              reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    FOR             reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    SWITCH          reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    BREAK           reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    CONTINUE        reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    RETURN          reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    GLOBAL          reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    STATIC          reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    ECHO            reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    INLINE_HTML     reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    UNSET           reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    SEMI_COLON      reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    FUNCTION        reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    CLONE           reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    LIST            reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    ARRAY           reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    LBRACKET        reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    PLUS            reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    MINUS           reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    NOT             reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    INC             reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    DEC             reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    INT_CAST        reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    ARRAY_CAST      reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    STRING_CAST     reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    BOOL_CAST       reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    UNSET_CAST      reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    BINARY_CAST     reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    ISSET           reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    EMPTY           reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    EVAL            reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    INCLUDE         reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    REQUIRE         reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    PRINT           reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    AT              reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    LPAREN          reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    IDENTIFIER      reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    EXIT            reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    DIE             reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    INT_NUMBER      reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    FUNC_C          reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    METHOD_C        reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    LINE            reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    FILE            reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    DIR             reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    START_HEREDOC   reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    START_NOWDOC    reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    VARIABLE        reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    DOLLAR          reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    $end            reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    RBRACE          reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    YIELD           reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    ELSE            reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    ELSEIF          reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    ENDIF           reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    ENDWHILE        reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    ENDSWITCH       reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    ENDFOR          reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    CASE            reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)
    DEFAULT         reduce using rule 33 (statement -> ECHO echo_expr_list SEMI_COLON .)


state 259

    (72) echo_expr_list -> echo_expr_list COMMA . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 342
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 260

    (36) statement -> UNSET LPAREN unset_variables . RPAREN SEMI_COLON
    (74) unset_variables -> unset_variables . COMMA unset_variable

    RPAREN          shift and go to state 343
    COMMA           shift and go to state 344


state 261

    (75) unset_variables -> unset_variable .

    RPAREN          reduce using rule 75 (unset_variables -> unset_variable .)
    COMMA           reduce using rule 75 (unset_variables -> unset_variable .)


state 262

    (76) unset_variable -> variable .

    RPAREN          reduce using rule 76 (unset_variable -> variable .)
    COMMA           reduce using rule 76 (unset_variable -> variable .)


state 263

    (77) function_declaration_statement -> FUNCTION is_reference IDENTIFIER . LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE

    LPAREN          shift and go to state 345


state 264

    (127) expr -> FUNCTION is_reference LPAREN . parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (80) parameter_list -> . non_empty_parameter_list
    (81) parameter_list -> . empty
    (82) non_empty_parameter_list -> . non_empty_parameter_list COMMA parameter
    (83) non_empty_parameter_list -> . parameter
    (275) empty -> .
    (84) parameter -> . VARIABLE
    (85) parameter -> . AND VARIABLE
    (86) parameter -> . VARIABLE EQUALS static_scalar
    (87) parameter -> . AND VARIABLE EQUALS static_scalar

    RPAREN          reduce using rule 275 (empty -> .)
    VARIABLE        shift and go to state 350
    AND             shift and go to state 351

    parameter_list                 shift and go to state 346
    non_empty_parameter_list       shift and go to state 347
    empty                          shift and go to state 348
    parameter                      shift and go to state 349

state 265

    (203) scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list . DOUBLE_QUOTE
    (264) encaps_list -> encaps_list . encaps_var
    (269) encaps_list -> encaps_list . ENCAPSED_AND_WHITESPACE
    (266) encaps_var -> . VARIABLE
    (267) encaps_var -> . VARIABLE LBRACKET encaps_var_offset RBRACKET
    (268) encaps_var -> . DOLLAR_OPEN_CURLY_BRACES expr RBRACE
    (270) encaps_var -> . DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr RBRACKET RBRACE
    (271) encaps_var -> . CURLY_OPEN variable RBRACE

    DOUBLE_QUOTE    shift and go to state 352
    ENCAPSED_AND_WHITESPACE shift and go to state 303
    VARIABLE        shift and go to state 304
    DOLLAR_OPEN_CURLY_BRACES shift and go to state 305
    CURLY_OPEN      shift and go to state 306

    encaps_var                     shift and go to state 302

state 266

    (102) fucntion_call_body -> LPAREN function_call_parameter_list . RPAREN
    (122) function_call_parameter_list -> function_call_parameter_list . COMMA function_call_parameter

    RPAREN          shift and go to state 353
    COMMA           shift and go to state 354


state 267

    (123) function_call_parameter_list -> function_call_parameter .

    RPAREN          reduce using rule 123 (function_call_parameter_list -> function_call_parameter .)
    COMMA           reduce using rule 123 (function_call_parameter_list -> function_call_parameter .)


state 268

    (124) function_call_parameter_list -> empty .

    RPAREN          reduce using rule 124 (function_call_parameter_list -> empty .)
    COMMA           reduce using rule 124 (function_call_parameter_list -> empty .)


state 269

    (125) function_call_parameter -> expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    RPAREN          reduce using rule 125 (function_call_parameter -> expr .)
    COMMA           reduce using rule 125 (function_call_parameter -> expr .)
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 270

    (126) function_call_parameter -> AND . variable
    (98) variable -> . base_variable_with_function_calls
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    IDENTIFIER      shift and go to state 171
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    variable                       shift and go to state 355
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 271

    (89) expr -> variable EQUALS expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 89 (expr -> variable EQUALS expr .)
    LBRACE          reduce using rule 89 (expr -> variable EQUALS expr .)
    LOGICAL_AND     reduce using rule 89 (expr -> variable EQUALS expr .)
    LOGICAL_OR      reduce using rule 89 (expr -> variable EQUALS expr .)
    LOGICAL_XOR     reduce using rule 89 (expr -> variable EQUALS expr .)
    RPAREN          reduce using rule 89 (expr -> variable EQUALS expr .)
    COMMA           reduce using rule 89 (expr -> variable EQUALS expr .)
    DOUBLE_ARROW    reduce using rule 89 (expr -> variable EQUALS expr .)
    RBRACE          reduce using rule 89 (expr -> variable EQUALS expr .)
    COLON           reduce using rule 89 (expr -> variable EQUALS expr .)
    RBRACKET        reduce using rule 89 (expr -> variable EQUALS expr .)
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117

  ! BOOLEAN_AND     [ reduce using rule 89 (expr -> variable EQUALS expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 89 (expr -> variable EQUALS expr .) ]
  ! AND             [ reduce using rule 89 (expr -> variable EQUALS expr .) ]
  ! OR              [ reduce using rule 89 (expr -> variable EQUALS expr .) ]
  ! XOR             [ reduce using rule 89 (expr -> variable EQUALS expr .) ]
  ! CONCAT          [ reduce using rule 89 (expr -> variable EQUALS expr .) ]
  ! PLUS            [ reduce using rule 89 (expr -> variable EQUALS expr .) ]
  ! MINUS           [ reduce using rule 89 (expr -> variable EQUALS expr .) ]
  ! MUL             [ reduce using rule 89 (expr -> variable EQUALS expr .) ]
  ! DIV             [ reduce using rule 89 (expr -> variable EQUALS expr .) ]
  ! SL              [ reduce using rule 89 (expr -> variable EQUALS expr .) ]
  ! SR              [ reduce using rule 89 (expr -> variable EQUALS expr .) ]
  ! MOD             [ reduce using rule 89 (expr -> variable EQUALS expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 89 (expr -> variable EQUALS expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 89 (expr -> variable EQUALS expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 89 (expr -> variable EQUALS expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 89 (expr -> variable EQUALS expr .) ]
  ! LESS_THAN       [ reduce using rule 89 (expr -> variable EQUALS expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 89 (expr -> variable EQUALS expr .) ]
  ! GREATER_THAN    [ reduce using rule 89 (expr -> variable EQUALS expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 89 (expr -> variable EQUALS expr .) ]
  ! INSTANCEOF      [ reduce using rule 89 (expr -> variable EQUALS expr .) ]
  ! SPACESHIP       [ reduce using rule 89 (expr -> variable EQUALS expr .) ]
  ! QUESTION        [ reduce using rule 89 (expr -> variable EQUALS expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]


state 272

    (90) expr -> variable EQUALS AND . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    variable                       shift and go to state 28
    expr                           shift and go to state 356
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 273

    (128) expr -> variable PLUS_EQUAL expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 128 (expr -> variable PLUS_EQUAL expr .)
    LBRACE          reduce using rule 128 (expr -> variable PLUS_EQUAL expr .)
    LOGICAL_AND     reduce using rule 128 (expr -> variable PLUS_EQUAL expr .)
    LOGICAL_OR      reduce using rule 128 (expr -> variable PLUS_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 128 (expr -> variable PLUS_EQUAL expr .)
    RPAREN          reduce using rule 128 (expr -> variable PLUS_EQUAL expr .)
    COMMA           reduce using rule 128 (expr -> variable PLUS_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 128 (expr -> variable PLUS_EQUAL expr .)
    RBRACE          reduce using rule 128 (expr -> variable PLUS_EQUAL expr .)
    COLON           reduce using rule 128 (expr -> variable PLUS_EQUAL expr .)
    RBRACKET        reduce using rule 128 (expr -> variable PLUS_EQUAL expr .)
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117

  ! BOOLEAN_AND     [ reduce using rule 128 (expr -> variable PLUS_EQUAL expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 128 (expr -> variable PLUS_EQUAL expr .) ]
  ! AND             [ reduce using rule 128 (expr -> variable PLUS_EQUAL expr .) ]
  ! OR              [ reduce using rule 128 (expr -> variable PLUS_EQUAL expr .) ]
  ! XOR             [ reduce using rule 128 (expr -> variable PLUS_EQUAL expr .) ]
  ! CONCAT          [ reduce using rule 128 (expr -> variable PLUS_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 128 (expr -> variable PLUS_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 128 (expr -> variable PLUS_EQUAL expr .) ]
  ! MUL             [ reduce using rule 128 (expr -> variable PLUS_EQUAL expr .) ]
  ! DIV             [ reduce using rule 128 (expr -> variable PLUS_EQUAL expr .) ]
  ! SL              [ reduce using rule 128 (expr -> variable PLUS_EQUAL expr .) ]
  ! SR              [ reduce using rule 128 (expr -> variable PLUS_EQUAL expr .) ]
  ! MOD             [ reduce using rule 128 (expr -> variable PLUS_EQUAL expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 128 (expr -> variable PLUS_EQUAL expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 128 (expr -> variable PLUS_EQUAL expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 128 (expr -> variable PLUS_EQUAL expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 128 (expr -> variable PLUS_EQUAL expr .) ]
  ! LESS_THAN       [ reduce using rule 128 (expr -> variable PLUS_EQUAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 128 (expr -> variable PLUS_EQUAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 128 (expr -> variable PLUS_EQUAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 128 (expr -> variable PLUS_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 128 (expr -> variable PLUS_EQUAL expr .) ]
  ! SPACESHIP       [ reduce using rule 128 (expr -> variable PLUS_EQUAL expr .) ]
  ! QUESTION        [ reduce using rule 128 (expr -> variable PLUS_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]


state 274

    (129) expr -> variable MINUS_EQUAL expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 129 (expr -> variable MINUS_EQUAL expr .)
    LBRACE          reduce using rule 129 (expr -> variable MINUS_EQUAL expr .)
    LOGICAL_AND     reduce using rule 129 (expr -> variable MINUS_EQUAL expr .)
    LOGICAL_OR      reduce using rule 129 (expr -> variable MINUS_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 129 (expr -> variable MINUS_EQUAL expr .)
    RPAREN          reduce using rule 129 (expr -> variable MINUS_EQUAL expr .)
    COMMA           reduce using rule 129 (expr -> variable MINUS_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 129 (expr -> variable MINUS_EQUAL expr .)
    RBRACE          reduce using rule 129 (expr -> variable MINUS_EQUAL expr .)
    COLON           reduce using rule 129 (expr -> variable MINUS_EQUAL expr .)
    RBRACKET        reduce using rule 129 (expr -> variable MINUS_EQUAL expr .)
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117

  ! BOOLEAN_AND     [ reduce using rule 129 (expr -> variable MINUS_EQUAL expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 129 (expr -> variable MINUS_EQUAL expr .) ]
  ! AND             [ reduce using rule 129 (expr -> variable MINUS_EQUAL expr .) ]
  ! OR              [ reduce using rule 129 (expr -> variable MINUS_EQUAL expr .) ]
  ! XOR             [ reduce using rule 129 (expr -> variable MINUS_EQUAL expr .) ]
  ! CONCAT          [ reduce using rule 129 (expr -> variable MINUS_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 129 (expr -> variable MINUS_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 129 (expr -> variable MINUS_EQUAL expr .) ]
  ! MUL             [ reduce using rule 129 (expr -> variable MINUS_EQUAL expr .) ]
  ! DIV             [ reduce using rule 129 (expr -> variable MINUS_EQUAL expr .) ]
  ! SL              [ reduce using rule 129 (expr -> variable MINUS_EQUAL expr .) ]
  ! SR              [ reduce using rule 129 (expr -> variable MINUS_EQUAL expr .) ]
  ! MOD             [ reduce using rule 129 (expr -> variable MINUS_EQUAL expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 129 (expr -> variable MINUS_EQUAL expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 129 (expr -> variable MINUS_EQUAL expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 129 (expr -> variable MINUS_EQUAL expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 129 (expr -> variable MINUS_EQUAL expr .) ]
  ! LESS_THAN       [ reduce using rule 129 (expr -> variable MINUS_EQUAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 129 (expr -> variable MINUS_EQUAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 129 (expr -> variable MINUS_EQUAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 129 (expr -> variable MINUS_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 129 (expr -> variable MINUS_EQUAL expr .) ]
  ! SPACESHIP       [ reduce using rule 129 (expr -> variable MINUS_EQUAL expr .) ]
  ! QUESTION        [ reduce using rule 129 (expr -> variable MINUS_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]


state 275

    (130) expr -> variable MUL_EQUAL expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 130 (expr -> variable MUL_EQUAL expr .)
    LBRACE          reduce using rule 130 (expr -> variable MUL_EQUAL expr .)
    LOGICAL_AND     reduce using rule 130 (expr -> variable MUL_EQUAL expr .)
    LOGICAL_OR      reduce using rule 130 (expr -> variable MUL_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 130 (expr -> variable MUL_EQUAL expr .)
    RPAREN          reduce using rule 130 (expr -> variable MUL_EQUAL expr .)
    COMMA           reduce using rule 130 (expr -> variable MUL_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 130 (expr -> variable MUL_EQUAL expr .)
    RBRACE          reduce using rule 130 (expr -> variable MUL_EQUAL expr .)
    COLON           reduce using rule 130 (expr -> variable MUL_EQUAL expr .)
    RBRACKET        reduce using rule 130 (expr -> variable MUL_EQUAL expr .)
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117

  ! BOOLEAN_AND     [ reduce using rule 130 (expr -> variable MUL_EQUAL expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 130 (expr -> variable MUL_EQUAL expr .) ]
  ! AND             [ reduce using rule 130 (expr -> variable MUL_EQUAL expr .) ]
  ! OR              [ reduce using rule 130 (expr -> variable MUL_EQUAL expr .) ]
  ! XOR             [ reduce using rule 130 (expr -> variable MUL_EQUAL expr .) ]
  ! CONCAT          [ reduce using rule 130 (expr -> variable MUL_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 130 (expr -> variable MUL_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 130 (expr -> variable MUL_EQUAL expr .) ]
  ! MUL             [ reduce using rule 130 (expr -> variable MUL_EQUAL expr .) ]
  ! DIV             [ reduce using rule 130 (expr -> variable MUL_EQUAL expr .) ]
  ! SL              [ reduce using rule 130 (expr -> variable MUL_EQUAL expr .) ]
  ! SR              [ reduce using rule 130 (expr -> variable MUL_EQUAL expr .) ]
  ! MOD             [ reduce using rule 130 (expr -> variable MUL_EQUAL expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 130 (expr -> variable MUL_EQUAL expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 130 (expr -> variable MUL_EQUAL expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 130 (expr -> variable MUL_EQUAL expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 130 (expr -> variable MUL_EQUAL expr .) ]
  ! LESS_THAN       [ reduce using rule 130 (expr -> variable MUL_EQUAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 130 (expr -> variable MUL_EQUAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 130 (expr -> variable MUL_EQUAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 130 (expr -> variable MUL_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 130 (expr -> variable MUL_EQUAL expr .) ]
  ! SPACESHIP       [ reduce using rule 130 (expr -> variable MUL_EQUAL expr .) ]
  ! QUESTION        [ reduce using rule 130 (expr -> variable MUL_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]


state 276

    (131) expr -> variable DIV_EQUAL expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 131 (expr -> variable DIV_EQUAL expr .)
    LBRACE          reduce using rule 131 (expr -> variable DIV_EQUAL expr .)
    LOGICAL_AND     reduce using rule 131 (expr -> variable DIV_EQUAL expr .)
    LOGICAL_OR      reduce using rule 131 (expr -> variable DIV_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 131 (expr -> variable DIV_EQUAL expr .)
    RPAREN          reduce using rule 131 (expr -> variable DIV_EQUAL expr .)
    COMMA           reduce using rule 131 (expr -> variable DIV_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 131 (expr -> variable DIV_EQUAL expr .)
    RBRACE          reduce using rule 131 (expr -> variable DIV_EQUAL expr .)
    COLON           reduce using rule 131 (expr -> variable DIV_EQUAL expr .)
    RBRACKET        reduce using rule 131 (expr -> variable DIV_EQUAL expr .)
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117

  ! BOOLEAN_AND     [ reduce using rule 131 (expr -> variable DIV_EQUAL expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 131 (expr -> variable DIV_EQUAL expr .) ]
  ! AND             [ reduce using rule 131 (expr -> variable DIV_EQUAL expr .) ]
  ! OR              [ reduce using rule 131 (expr -> variable DIV_EQUAL expr .) ]
  ! XOR             [ reduce using rule 131 (expr -> variable DIV_EQUAL expr .) ]
  ! CONCAT          [ reduce using rule 131 (expr -> variable DIV_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 131 (expr -> variable DIV_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 131 (expr -> variable DIV_EQUAL expr .) ]
  ! MUL             [ reduce using rule 131 (expr -> variable DIV_EQUAL expr .) ]
  ! DIV             [ reduce using rule 131 (expr -> variable DIV_EQUAL expr .) ]
  ! SL              [ reduce using rule 131 (expr -> variable DIV_EQUAL expr .) ]
  ! SR              [ reduce using rule 131 (expr -> variable DIV_EQUAL expr .) ]
  ! MOD             [ reduce using rule 131 (expr -> variable DIV_EQUAL expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 131 (expr -> variable DIV_EQUAL expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 131 (expr -> variable DIV_EQUAL expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 131 (expr -> variable DIV_EQUAL expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 131 (expr -> variable DIV_EQUAL expr .) ]
  ! LESS_THAN       [ reduce using rule 131 (expr -> variable DIV_EQUAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 131 (expr -> variable DIV_EQUAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 131 (expr -> variable DIV_EQUAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 131 (expr -> variable DIV_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 131 (expr -> variable DIV_EQUAL expr .) ]
  ! SPACESHIP       [ reduce using rule 131 (expr -> variable DIV_EQUAL expr .) ]
  ! QUESTION        [ reduce using rule 131 (expr -> variable DIV_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]


state 277

    (132) expr -> variable CONCAT_EQUAL expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .)
    LBRACE          reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .)
    LOGICAL_AND     reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .)
    LOGICAL_OR      reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .)
    RPAREN          reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .)
    COMMA           reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .)
    RBRACE          reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .)
    COLON           reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .)
    RBRACKET        reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .)
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117

  ! BOOLEAN_AND     [ reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .) ]
  ! AND             [ reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .) ]
  ! OR              [ reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .) ]
  ! XOR             [ reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .) ]
  ! CONCAT          [ reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .) ]
  ! MUL             [ reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .) ]
  ! DIV             [ reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .) ]
  ! SL              [ reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .) ]
  ! SR              [ reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .) ]
  ! MOD             [ reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .) ]
  ! LESS_THAN       [ reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .) ]
  ! SPACESHIP       [ reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .) ]
  ! QUESTION        [ reduce using rule 132 (expr -> variable CONCAT_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]


state 278

    (133) expr -> variable MOD_EQUAL expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 133 (expr -> variable MOD_EQUAL expr .)
    LBRACE          reduce using rule 133 (expr -> variable MOD_EQUAL expr .)
    LOGICAL_AND     reduce using rule 133 (expr -> variable MOD_EQUAL expr .)
    LOGICAL_OR      reduce using rule 133 (expr -> variable MOD_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 133 (expr -> variable MOD_EQUAL expr .)
    RPAREN          reduce using rule 133 (expr -> variable MOD_EQUAL expr .)
    COMMA           reduce using rule 133 (expr -> variable MOD_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 133 (expr -> variable MOD_EQUAL expr .)
    RBRACE          reduce using rule 133 (expr -> variable MOD_EQUAL expr .)
    COLON           reduce using rule 133 (expr -> variable MOD_EQUAL expr .)
    RBRACKET        reduce using rule 133 (expr -> variable MOD_EQUAL expr .)
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117

  ! BOOLEAN_AND     [ reduce using rule 133 (expr -> variable MOD_EQUAL expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 133 (expr -> variable MOD_EQUAL expr .) ]
  ! AND             [ reduce using rule 133 (expr -> variable MOD_EQUAL expr .) ]
  ! OR              [ reduce using rule 133 (expr -> variable MOD_EQUAL expr .) ]
  ! XOR             [ reduce using rule 133 (expr -> variable MOD_EQUAL expr .) ]
  ! CONCAT          [ reduce using rule 133 (expr -> variable MOD_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 133 (expr -> variable MOD_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 133 (expr -> variable MOD_EQUAL expr .) ]
  ! MUL             [ reduce using rule 133 (expr -> variable MOD_EQUAL expr .) ]
  ! DIV             [ reduce using rule 133 (expr -> variable MOD_EQUAL expr .) ]
  ! SL              [ reduce using rule 133 (expr -> variable MOD_EQUAL expr .) ]
  ! SR              [ reduce using rule 133 (expr -> variable MOD_EQUAL expr .) ]
  ! MOD             [ reduce using rule 133 (expr -> variable MOD_EQUAL expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 133 (expr -> variable MOD_EQUAL expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 133 (expr -> variable MOD_EQUAL expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 133 (expr -> variable MOD_EQUAL expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 133 (expr -> variable MOD_EQUAL expr .) ]
  ! LESS_THAN       [ reduce using rule 133 (expr -> variable MOD_EQUAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 133 (expr -> variable MOD_EQUAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 133 (expr -> variable MOD_EQUAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 133 (expr -> variable MOD_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 133 (expr -> variable MOD_EQUAL expr .) ]
  ! SPACESHIP       [ reduce using rule 133 (expr -> variable MOD_EQUAL expr .) ]
  ! QUESTION        [ reduce using rule 133 (expr -> variable MOD_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]


state 279

    (134) expr -> variable AND_EQUAL expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 134 (expr -> variable AND_EQUAL expr .)
    LBRACE          reduce using rule 134 (expr -> variable AND_EQUAL expr .)
    LOGICAL_AND     reduce using rule 134 (expr -> variable AND_EQUAL expr .)
    LOGICAL_OR      reduce using rule 134 (expr -> variable AND_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 134 (expr -> variable AND_EQUAL expr .)
    RPAREN          reduce using rule 134 (expr -> variable AND_EQUAL expr .)
    COMMA           reduce using rule 134 (expr -> variable AND_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 134 (expr -> variable AND_EQUAL expr .)
    RBRACE          reduce using rule 134 (expr -> variable AND_EQUAL expr .)
    COLON           reduce using rule 134 (expr -> variable AND_EQUAL expr .)
    RBRACKET        reduce using rule 134 (expr -> variable AND_EQUAL expr .)
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117

  ! BOOLEAN_AND     [ reduce using rule 134 (expr -> variable AND_EQUAL expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 134 (expr -> variable AND_EQUAL expr .) ]
  ! AND             [ reduce using rule 134 (expr -> variable AND_EQUAL expr .) ]
  ! OR              [ reduce using rule 134 (expr -> variable AND_EQUAL expr .) ]
  ! XOR             [ reduce using rule 134 (expr -> variable AND_EQUAL expr .) ]
  ! CONCAT          [ reduce using rule 134 (expr -> variable AND_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 134 (expr -> variable AND_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 134 (expr -> variable AND_EQUAL expr .) ]
  ! MUL             [ reduce using rule 134 (expr -> variable AND_EQUAL expr .) ]
  ! DIV             [ reduce using rule 134 (expr -> variable AND_EQUAL expr .) ]
  ! SL              [ reduce using rule 134 (expr -> variable AND_EQUAL expr .) ]
  ! SR              [ reduce using rule 134 (expr -> variable AND_EQUAL expr .) ]
  ! MOD             [ reduce using rule 134 (expr -> variable AND_EQUAL expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 134 (expr -> variable AND_EQUAL expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 134 (expr -> variable AND_EQUAL expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 134 (expr -> variable AND_EQUAL expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 134 (expr -> variable AND_EQUAL expr .) ]
  ! LESS_THAN       [ reduce using rule 134 (expr -> variable AND_EQUAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 134 (expr -> variable AND_EQUAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 134 (expr -> variable AND_EQUAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 134 (expr -> variable AND_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 134 (expr -> variable AND_EQUAL expr .) ]
  ! SPACESHIP       [ reduce using rule 134 (expr -> variable AND_EQUAL expr .) ]
  ! QUESTION        [ reduce using rule 134 (expr -> variable AND_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]


state 280

    (135) expr -> variable OR_EQUAL expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 135 (expr -> variable OR_EQUAL expr .)
    LBRACE          reduce using rule 135 (expr -> variable OR_EQUAL expr .)
    LOGICAL_AND     reduce using rule 135 (expr -> variable OR_EQUAL expr .)
    LOGICAL_OR      reduce using rule 135 (expr -> variable OR_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 135 (expr -> variable OR_EQUAL expr .)
    RPAREN          reduce using rule 135 (expr -> variable OR_EQUAL expr .)
    COMMA           reduce using rule 135 (expr -> variable OR_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 135 (expr -> variable OR_EQUAL expr .)
    RBRACE          reduce using rule 135 (expr -> variable OR_EQUAL expr .)
    COLON           reduce using rule 135 (expr -> variable OR_EQUAL expr .)
    RBRACKET        reduce using rule 135 (expr -> variable OR_EQUAL expr .)
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117

  ! BOOLEAN_AND     [ reduce using rule 135 (expr -> variable OR_EQUAL expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 135 (expr -> variable OR_EQUAL expr .) ]
  ! AND             [ reduce using rule 135 (expr -> variable OR_EQUAL expr .) ]
  ! OR              [ reduce using rule 135 (expr -> variable OR_EQUAL expr .) ]
  ! XOR             [ reduce using rule 135 (expr -> variable OR_EQUAL expr .) ]
  ! CONCAT          [ reduce using rule 135 (expr -> variable OR_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 135 (expr -> variable OR_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 135 (expr -> variable OR_EQUAL expr .) ]
  ! MUL             [ reduce using rule 135 (expr -> variable OR_EQUAL expr .) ]
  ! DIV             [ reduce using rule 135 (expr -> variable OR_EQUAL expr .) ]
  ! SL              [ reduce using rule 135 (expr -> variable OR_EQUAL expr .) ]
  ! SR              [ reduce using rule 135 (expr -> variable OR_EQUAL expr .) ]
  ! MOD             [ reduce using rule 135 (expr -> variable OR_EQUAL expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 135 (expr -> variable OR_EQUAL expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 135 (expr -> variable OR_EQUAL expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 135 (expr -> variable OR_EQUAL expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 135 (expr -> variable OR_EQUAL expr .) ]
  ! LESS_THAN       [ reduce using rule 135 (expr -> variable OR_EQUAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 135 (expr -> variable OR_EQUAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 135 (expr -> variable OR_EQUAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 135 (expr -> variable OR_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 135 (expr -> variable OR_EQUAL expr .) ]
  ! SPACESHIP       [ reduce using rule 135 (expr -> variable OR_EQUAL expr .) ]
  ! QUESTION        [ reduce using rule 135 (expr -> variable OR_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]


state 281

    (136) expr -> variable XOR_EQUAL expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 136 (expr -> variable XOR_EQUAL expr .)
    LBRACE          reduce using rule 136 (expr -> variable XOR_EQUAL expr .)
    LOGICAL_AND     reduce using rule 136 (expr -> variable XOR_EQUAL expr .)
    LOGICAL_OR      reduce using rule 136 (expr -> variable XOR_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 136 (expr -> variable XOR_EQUAL expr .)
    RPAREN          reduce using rule 136 (expr -> variable XOR_EQUAL expr .)
    COMMA           reduce using rule 136 (expr -> variable XOR_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 136 (expr -> variable XOR_EQUAL expr .)
    RBRACE          reduce using rule 136 (expr -> variable XOR_EQUAL expr .)
    COLON           reduce using rule 136 (expr -> variable XOR_EQUAL expr .)
    RBRACKET        reduce using rule 136 (expr -> variable XOR_EQUAL expr .)
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117

  ! BOOLEAN_AND     [ reduce using rule 136 (expr -> variable XOR_EQUAL expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 136 (expr -> variable XOR_EQUAL expr .) ]
  ! AND             [ reduce using rule 136 (expr -> variable XOR_EQUAL expr .) ]
  ! OR              [ reduce using rule 136 (expr -> variable XOR_EQUAL expr .) ]
  ! XOR             [ reduce using rule 136 (expr -> variable XOR_EQUAL expr .) ]
  ! CONCAT          [ reduce using rule 136 (expr -> variable XOR_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 136 (expr -> variable XOR_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 136 (expr -> variable XOR_EQUAL expr .) ]
  ! MUL             [ reduce using rule 136 (expr -> variable XOR_EQUAL expr .) ]
  ! DIV             [ reduce using rule 136 (expr -> variable XOR_EQUAL expr .) ]
  ! SL              [ reduce using rule 136 (expr -> variable XOR_EQUAL expr .) ]
  ! SR              [ reduce using rule 136 (expr -> variable XOR_EQUAL expr .) ]
  ! MOD             [ reduce using rule 136 (expr -> variable XOR_EQUAL expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 136 (expr -> variable XOR_EQUAL expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 136 (expr -> variable XOR_EQUAL expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 136 (expr -> variable XOR_EQUAL expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 136 (expr -> variable XOR_EQUAL expr .) ]
  ! LESS_THAN       [ reduce using rule 136 (expr -> variable XOR_EQUAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 136 (expr -> variable XOR_EQUAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 136 (expr -> variable XOR_EQUAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 136 (expr -> variable XOR_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 136 (expr -> variable XOR_EQUAL expr .) ]
  ! SPACESHIP       [ reduce using rule 136 (expr -> variable XOR_EQUAL expr .) ]
  ! QUESTION        [ reduce using rule 136 (expr -> variable XOR_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]


state 282

    (137) expr -> variable SL_EQUAL expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 137 (expr -> variable SL_EQUAL expr .)
    LBRACE          reduce using rule 137 (expr -> variable SL_EQUAL expr .)
    LOGICAL_AND     reduce using rule 137 (expr -> variable SL_EQUAL expr .)
    LOGICAL_OR      reduce using rule 137 (expr -> variable SL_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 137 (expr -> variable SL_EQUAL expr .)
    RPAREN          reduce using rule 137 (expr -> variable SL_EQUAL expr .)
    COMMA           reduce using rule 137 (expr -> variable SL_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 137 (expr -> variable SL_EQUAL expr .)
    RBRACE          reduce using rule 137 (expr -> variable SL_EQUAL expr .)
    COLON           reduce using rule 137 (expr -> variable SL_EQUAL expr .)
    RBRACKET        reduce using rule 137 (expr -> variable SL_EQUAL expr .)
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117

  ! BOOLEAN_AND     [ reduce using rule 137 (expr -> variable SL_EQUAL expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 137 (expr -> variable SL_EQUAL expr .) ]
  ! AND             [ reduce using rule 137 (expr -> variable SL_EQUAL expr .) ]
  ! OR              [ reduce using rule 137 (expr -> variable SL_EQUAL expr .) ]
  ! XOR             [ reduce using rule 137 (expr -> variable SL_EQUAL expr .) ]
  ! CONCAT          [ reduce using rule 137 (expr -> variable SL_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 137 (expr -> variable SL_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 137 (expr -> variable SL_EQUAL expr .) ]
  ! MUL             [ reduce using rule 137 (expr -> variable SL_EQUAL expr .) ]
  ! DIV             [ reduce using rule 137 (expr -> variable SL_EQUAL expr .) ]
  ! SL              [ reduce using rule 137 (expr -> variable SL_EQUAL expr .) ]
  ! SR              [ reduce using rule 137 (expr -> variable SL_EQUAL expr .) ]
  ! MOD             [ reduce using rule 137 (expr -> variable SL_EQUAL expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 137 (expr -> variable SL_EQUAL expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 137 (expr -> variable SL_EQUAL expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 137 (expr -> variable SL_EQUAL expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 137 (expr -> variable SL_EQUAL expr .) ]
  ! LESS_THAN       [ reduce using rule 137 (expr -> variable SL_EQUAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 137 (expr -> variable SL_EQUAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 137 (expr -> variable SL_EQUAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 137 (expr -> variable SL_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 137 (expr -> variable SL_EQUAL expr .) ]
  ! SPACESHIP       [ reduce using rule 137 (expr -> variable SL_EQUAL expr .) ]
  ! QUESTION        [ reduce using rule 137 (expr -> variable SL_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]


state 283

    (138) expr -> variable SR_EQUAL expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 138 (expr -> variable SR_EQUAL expr .)
    LBRACE          reduce using rule 138 (expr -> variable SR_EQUAL expr .)
    LOGICAL_AND     reduce using rule 138 (expr -> variable SR_EQUAL expr .)
    LOGICAL_OR      reduce using rule 138 (expr -> variable SR_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 138 (expr -> variable SR_EQUAL expr .)
    RPAREN          reduce using rule 138 (expr -> variable SR_EQUAL expr .)
    COMMA           reduce using rule 138 (expr -> variable SR_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 138 (expr -> variable SR_EQUAL expr .)
    RBRACE          reduce using rule 138 (expr -> variable SR_EQUAL expr .)
    COLON           reduce using rule 138 (expr -> variable SR_EQUAL expr .)
    RBRACKET        reduce using rule 138 (expr -> variable SR_EQUAL expr .)
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117

  ! BOOLEAN_AND     [ reduce using rule 138 (expr -> variable SR_EQUAL expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 138 (expr -> variable SR_EQUAL expr .) ]
  ! AND             [ reduce using rule 138 (expr -> variable SR_EQUAL expr .) ]
  ! OR              [ reduce using rule 138 (expr -> variable SR_EQUAL expr .) ]
  ! XOR             [ reduce using rule 138 (expr -> variable SR_EQUAL expr .) ]
  ! CONCAT          [ reduce using rule 138 (expr -> variable SR_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 138 (expr -> variable SR_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 138 (expr -> variable SR_EQUAL expr .) ]
  ! MUL             [ reduce using rule 138 (expr -> variable SR_EQUAL expr .) ]
  ! DIV             [ reduce using rule 138 (expr -> variable SR_EQUAL expr .) ]
  ! SL              [ reduce using rule 138 (expr -> variable SR_EQUAL expr .) ]
  ! SR              [ reduce using rule 138 (expr -> variable SR_EQUAL expr .) ]
  ! MOD             [ reduce using rule 138 (expr -> variable SR_EQUAL expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 138 (expr -> variable SR_EQUAL expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 138 (expr -> variable SR_EQUAL expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 138 (expr -> variable SR_EQUAL expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 138 (expr -> variable SR_EQUAL expr .) ]
  ! LESS_THAN       [ reduce using rule 138 (expr -> variable SR_EQUAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 138 (expr -> variable SR_EQUAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 138 (expr -> variable SR_EQUAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 138 (expr -> variable SR_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 138 (expr -> variable SR_EQUAL expr .) ]
  ! SPACESHIP       [ reduce using rule 138 (expr -> variable SR_EQUAL expr .) ]
  ! QUESTION        [ reduce using rule 138 (expr -> variable SR_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]


state 284

    (97) assignment_list_element -> LIST . LPAREN assignment_list RPAREN

    LPAREN          shift and go to state 357


state 285

    (92) expr -> LIST LPAREN assignment_list . RPAREN EQUALS expr
    (93) assignment_list -> assignment_list . COMMA assignment_list_element

    RPAREN          shift and go to state 358
    COMMA           shift and go to state 359


state 286

    (94) assignment_list -> assignment_list_element .

    RPAREN          reduce using rule 94 (assignment_list -> assignment_list_element .)
    COMMA           reduce using rule 94 (assignment_list -> assignment_list_element .)


state 287

    (95) assignment_list_element -> variable .

    RPAREN          reduce using rule 95 (assignment_list_element -> variable .)
    COMMA           reduce using rule 95 (assignment_list_element -> variable .)


state 288

    (96) assignment_list_element -> empty .

    RPAREN          reduce using rule 96 (assignment_list_element -> empty .)
    COMMA           reduce using rule 96 (assignment_list_element -> empty .)


state 289

    (112) expr -> ARRAY LPAREN array_pair_list . RPAREN

    RPAREN          shift and go to state 360


state 290

    (113) expr -> LBRACKET array_pair_list RBRACKET .

    SEMI_COLON      reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    LBRACE          reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    BOOLEAN_AND     reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    BOOLEAN_OR      reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    LOGICAL_AND     reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    LOGICAL_OR      reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    LOGICAL_XOR     reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    AND             reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    OR              reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    XOR             reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    CONCAT          reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    PLUS            reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    MINUS           reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    MUL             reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    DIV             reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    SL              reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    SR              reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    MOD             reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    IS_IDENTICAL    reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    IS_NOT_IDENTICAL reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    IS_EQUAL_TO     reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    IS_NOT_EQUAL    reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    LESS_THAN       reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    LESS_THAN_OR_EQUAL reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    GREATER_THAN    reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    GRATER_THAN_OR_EQUAL reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    INSTANCEOF      reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    SPACESHIP       reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    QUESTION        reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    RPAREN          reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    COMMA           reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    DOUBLE_ARROW    reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    RBRACE          reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    COLON           reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)
    RBRACKET        reduce using rule 113 (expr -> LBRACKET array_pair_list RBRACKET .)


state 291

    (115) array_pair_list -> non_empty_array_pair_list possible_comma .

    RBRACKET        reduce using rule 115 (array_pair_list -> non_empty_array_pair_list possible_comma .)
    RPAREN          reduce using rule 115 (array_pair_list -> non_empty_array_pair_list possible_comma .)


state 292

    (116) non_empty_array_pair_list -> non_empty_array_pair_list COMMA . expr DOUBLE_ARROW AND variable
    (117) non_empty_array_pair_list -> non_empty_array_pair_list COMMA . expr DOUBLE_ARROW expr
    (121) possible_comma -> COMMA .
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    RBRACKET        reduce using rule 121 (possible_comma -> COMMA .)
    RPAREN          reduce using rule 121 (possible_comma -> COMMA .)
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 361
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 293

    (120) possible_comma -> empty .

    RBRACKET        reduce using rule 120 (possible_comma -> empty .)
    RPAREN          reduce using rule 120 (possible_comma -> empty .)


state 294

    (118) non_empty_array_pair_list -> expr DOUBLE_ARROW . AND variable
    (119) non_empty_array_pair_list -> expr DOUBLE_ARROW . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    AND             shift and go to state 363
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 362
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 295

    (183) expr -> ISSET LPAREN isset_variables . RPAREN
    (184) isset_variables -> isset_variables . COMMA variable

    RPAREN          shift and go to state 364
    COMMA           shift and go to state 365


state 296

    (185) isset_variables -> variable .

    RPAREN          reduce using rule 185 (isset_variables -> variable .)
    COMMA           reduce using rule 185 (isset_variables -> variable .)


state 297

    (186) expr -> EMPTY LPAREN expr . RPAREN
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    RPAREN          shift and go to state 366
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 298

    (187) expr -> EVAL LPAREN expr . RPAREN
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    RPAREN          shift and go to state 367
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 299

    (195) expr -> exit_or_die LPAREN RPAREN .

    SEMI_COLON      reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    LBRACE          reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    BOOLEAN_AND     reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    BOOLEAN_OR      reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    LOGICAL_AND     reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    LOGICAL_OR      reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    LOGICAL_XOR     reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    AND             reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    OR              reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    XOR             reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    CONCAT          reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    PLUS            reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    MINUS           reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    MUL             reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    DIV             reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    SL              reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    SR              reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    MOD             reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    IS_IDENTICAL    reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    IS_EQUAL_TO     reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    IS_NOT_EQUAL    reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    LESS_THAN       reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    GRATER_THAN_OR_EQUAL reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    INSTANCEOF      reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    SPACESHIP       reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    QUESTION        reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    RPAREN          reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    COMMA           reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    DOUBLE_ARROW    reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    RBRACE          reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    COLON           reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)
    RBRACKET        reduce using rule 195 (expr -> exit_or_die LPAREN RPAREN .)


state 300

    (196) expr -> exit_or_die LPAREN expr . RPAREN
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    RPAREN          shift and go to state 368
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 301

    (202) scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .

    SEMI_COLON      reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    LBRACE          reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    BOOLEAN_AND     reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    BOOLEAN_OR      reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    LOGICAL_AND     reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    LOGICAL_OR      reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    LOGICAL_XOR     reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    AND             reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    OR              reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    XOR             reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    CONCAT          reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    PLUS            reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    MINUS           reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    MUL             reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    DIV             reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    SL              reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    SR              reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    MOD             reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    IS_IDENTICAL    reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    IS_NOT_IDENTICAL reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    IS_EQUAL_TO     reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    IS_NOT_EQUAL    reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    LESS_THAN       reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    LESS_THAN_OR_EQUAL reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    GREATER_THAN    reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    GRATER_THAN_OR_EQUAL reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    INSTANCEOF      reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    SPACESHIP       reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    QUESTION        reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    RPAREN          reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    COMMA           reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    DOUBLE_ARROW    reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    RBRACE          reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    COLON           reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    RBRACKET        reduce using rule 202 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)


state 302

    (264) encaps_list -> encaps_list encaps_var .

    DOUBLE_QUOTE    reduce using rule 264 (encaps_list -> encaps_list encaps_var .)
    ENCAPSED_AND_WHITESPACE reduce using rule 264 (encaps_list -> encaps_list encaps_var .)
    VARIABLE        reduce using rule 264 (encaps_list -> encaps_list encaps_var .)
    DOLLAR_OPEN_CURLY_BRACES reduce using rule 264 (encaps_list -> encaps_list encaps_var .)
    CURLY_OPEN      reduce using rule 264 (encaps_list -> encaps_list encaps_var .)
    END_HEREDOC     reduce using rule 264 (encaps_list -> encaps_list encaps_var .)


state 303

    (269) encaps_list -> encaps_list ENCAPSED_AND_WHITESPACE .

    DOUBLE_QUOTE    reduce using rule 269 (encaps_list -> encaps_list ENCAPSED_AND_WHITESPACE .)
    ENCAPSED_AND_WHITESPACE reduce using rule 269 (encaps_list -> encaps_list ENCAPSED_AND_WHITESPACE .)
    VARIABLE        reduce using rule 269 (encaps_list -> encaps_list ENCAPSED_AND_WHITESPACE .)
    DOLLAR_OPEN_CURLY_BRACES reduce using rule 269 (encaps_list -> encaps_list ENCAPSED_AND_WHITESPACE .)
    CURLY_OPEN      reduce using rule 269 (encaps_list -> encaps_list ENCAPSED_AND_WHITESPACE .)
    END_HEREDOC     reduce using rule 269 (encaps_list -> encaps_list ENCAPSED_AND_WHITESPACE .)


state 304

    (266) encaps_var -> VARIABLE .
    (267) encaps_var -> VARIABLE . LBRACKET encaps_var_offset RBRACKET

    DOUBLE_QUOTE    reduce using rule 266 (encaps_var -> VARIABLE .)
    ENCAPSED_AND_WHITESPACE reduce using rule 266 (encaps_var -> VARIABLE .)
    VARIABLE        reduce using rule 266 (encaps_var -> VARIABLE .)
    DOLLAR_OPEN_CURLY_BRACES reduce using rule 266 (encaps_var -> VARIABLE .)
    CURLY_OPEN      reduce using rule 266 (encaps_var -> VARIABLE .)
    END_HEREDOC     reduce using rule 266 (encaps_var -> VARIABLE .)
    LBRACKET        shift and go to state 369


state 305

    (268) encaps_var -> DOLLAR_OPEN_CURLY_BRACES . expr RBRACE
    (270) encaps_var -> DOLLAR_OPEN_CURLY_BRACES . STRING_VARNAME LBRACKET expr RBRACKET RBRACE
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    STRING_VARNAME  shift and go to state 371
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 370
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 306

    (271) encaps_var -> CURLY_OPEN . variable RBRACE
    (98) variable -> . base_variable_with_function_calls
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    IDENTIFIER      shift and go to state 171
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    variable                       shift and go to state 372
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 307

    (206) scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .

    SEMI_COLON      reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    LBRACE          reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    BOOLEAN_AND     reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    BOOLEAN_OR      reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    LOGICAL_AND     reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    LOGICAL_OR      reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    LOGICAL_XOR     reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    AND             reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    OR              reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    XOR             reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    CONCAT          reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    PLUS            reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    MINUS           reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    MUL             reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    DIV             reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    SL              reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    SR              reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    MOD             reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    IS_IDENTICAL    reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    IS_NOT_IDENTICAL reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    IS_EQUAL_TO     reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    IS_NOT_EQUAL    reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    LESS_THAN       reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    LESS_THAN_OR_EQUAL reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    GREATER_THAN    reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    GRATER_THAN_OR_EQUAL reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    INSTANCEOF      reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    SPACESHIP       reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    QUESTION        reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    RPAREN          reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    COMMA           reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    DOUBLE_ARROW    reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    RBRACE          reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    COLON           reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    RBRACKET        reduce using rule 206 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)


state 308

    (200) nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .

    SEMI_COLON      reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    LBRACE          reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    BOOLEAN_AND     reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    BOOLEAN_OR      reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    LOGICAL_AND     reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    LOGICAL_OR      reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    LOGICAL_XOR     reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    AND             reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    OR              reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    XOR             reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    CONCAT          reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    PLUS            reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    MINUS           reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    MUL             reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    DIV             reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    SL              reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    SR              reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    MOD             reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    IS_IDENTICAL    reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    IS_NOT_IDENTICAL reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    IS_EQUAL_TO     reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    IS_NOT_EQUAL    reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    LESS_THAN       reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    LESS_THAN_OR_EQUAL reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    GREATER_THAN    reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    GRATER_THAN_OR_EQUAL reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    INSTANCEOF      reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    SPACESHIP       reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    QUESTION        reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    RPAREN          reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    COMMA           reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    DOUBLE_ARROW    reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    RBRACE          reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    COLON           reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    RBRACKET        reduce using rule 200 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)


state 309

    (207) nowdoc_text_content -> nowdoc_text_content ENCAPSED_AND_WHITESPACE .

    END_NOWDOC      reduce using rule 207 (nowdoc_text_content -> nowdoc_text_content ENCAPSED_AND_WHITESPACE .)
    ENCAPSED_AND_WHITESPACE reduce using rule 207 (nowdoc_text_content -> nowdoc_text_content ENCAPSED_AND_WHITESPACE .)


state 310

    (103) function_call -> variable_without_objects LPAREN function_call_parameter_list . RPAREN
    (122) function_call_parameter_list -> function_call_parameter_list . COMMA function_call_parameter

    RPAREN          shift and go to state 373
    COMMA           shift and go to state 354


state 311

    (107) compound_variable -> DOLLAR LBRACE expr . RBRACE
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    RBRACE          shift and go to state 374
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 312

    (6) top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .

    HALT_COMPILER   reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    CONST           reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    LBRACE          reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    IF              reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    WHILE           reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    DO              reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    FOR             reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    SWITCH          reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    BREAK           reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    CONTINUE        reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    RETURN          reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    GLOBAL          reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    STATIC          reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    ECHO            reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    INLINE_HTML     reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    UNSET           reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    SEMI_COLON      reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    FUNCTION        reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    CLONE           reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    LIST            reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    ARRAY           reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    LBRACKET        reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    PLUS            reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    MINUS           reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    NOT             reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    INC             reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    DEC             reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    INT_CAST        reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    ARRAY_CAST      reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    STRING_CAST     reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    BOOL_CAST       reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    UNSET_CAST      reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    BINARY_CAST     reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    ISSET           reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    EMPTY           reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    EVAL            reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    INCLUDE         reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    REQUIRE         reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    PRINT           reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    AT              reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    LPAREN          reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    IDENTIFIER      reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    EXIT            reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    DIE             reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    INT_NUMBER      reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    FUNC_C          reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    METHOD_C        reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    LINE            reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    FILE            reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    DIR             reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    START_HEREDOC   reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    START_NOWDOC    reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    VARIABLE        reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    DOLLAR          reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    $end            reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)


state 313

    (8) constant_declarations -> constant_declarations COMMA constant_declaration .

    SEMI_COLON      reduce using rule 8 (constant_declarations -> constant_declarations COMMA constant_declaration .)
    COMMA           reduce using rule 8 (constant_declarations -> constant_declarations COMMA constant_declaration .)


state 314

    (227) static_scalar -> IDENTIFIER .
    (213) common_scalar -> IDENTIFIER . CONSTANT_ENCAPSED_STRING

    BOOLEAN_AND     reduce using rule 227 (static_scalar -> IDENTIFIER .)
    BOOLEAN_OR      reduce using rule 227 (static_scalar -> IDENTIFIER .)
    LOGICAL_AND     reduce using rule 227 (static_scalar -> IDENTIFIER .)
    LOGICAL_OR      reduce using rule 227 (static_scalar -> IDENTIFIER .)
    LOGICAL_XOR     reduce using rule 227 (static_scalar -> IDENTIFIER .)
    AND             reduce using rule 227 (static_scalar -> IDENTIFIER .)
    OR              reduce using rule 227 (static_scalar -> IDENTIFIER .)
    XOR             reduce using rule 227 (static_scalar -> IDENTIFIER .)
    CONCAT          reduce using rule 227 (static_scalar -> IDENTIFIER .)
    PLUS            reduce using rule 227 (static_scalar -> IDENTIFIER .)
    MINUS           reduce using rule 227 (static_scalar -> IDENTIFIER .)
    MUL             reduce using rule 227 (static_scalar -> IDENTIFIER .)
    DIV             reduce using rule 227 (static_scalar -> IDENTIFIER .)
    SL              reduce using rule 227 (static_scalar -> IDENTIFIER .)
    SR              reduce using rule 227 (static_scalar -> IDENTIFIER .)
    MOD             reduce using rule 227 (static_scalar -> IDENTIFIER .)
    IS_IDENTICAL    reduce using rule 227 (static_scalar -> IDENTIFIER .)
    IS_NOT_IDENTICAL reduce using rule 227 (static_scalar -> IDENTIFIER .)
    IS_EQUAL_TO     reduce using rule 227 (static_scalar -> IDENTIFIER .)
    IS_NOT_EQUAL    reduce using rule 227 (static_scalar -> IDENTIFIER .)
    LESS_THAN       reduce using rule 227 (static_scalar -> IDENTIFIER .)
    LESS_THAN_OR_EQUAL reduce using rule 227 (static_scalar -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 227 (static_scalar -> IDENTIFIER .)
    GRATER_THAN_OR_EQUAL reduce using rule 227 (static_scalar -> IDENTIFIER .)
    SEMI_COLON      reduce using rule 227 (static_scalar -> IDENTIFIER .)
    COMMA           reduce using rule 227 (static_scalar -> IDENTIFIER .)
    RPAREN          reduce using rule 227 (static_scalar -> IDENTIFIER .)
    DOUBLE_ARROW    reduce using rule 227 (static_scalar -> IDENTIFIER .)
    RBRACKET        reduce using rule 227 (static_scalar -> IDENTIFIER .)
    CONSTANT_ENCAPSED_STRING shift and go to state 142


state 315

    (10) constant_declaration -> IDENTIFIER EQUALS static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    SEMI_COLON      reduce using rule 10 (constant_declaration -> IDENTIFIER EQUALS static_expr .)
    COMMA           reduce using rule 10 (constant_declaration -> IDENTIFIER EQUALS static_expr .)
    BOOLEAN_AND     shift and go to state 375
    BOOLEAN_OR      shift and go to state 376
    LOGICAL_AND     shift and go to state 377
    LOGICAL_OR      shift and go to state 378
    LOGICAL_XOR     shift and go to state 379
    AND             shift and go to state 380
    OR              shift and go to state 381
    XOR             shift and go to state 382
    CONCAT          shift and go to state 383
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    SL              shift and go to state 388
    SR              shift and go to state 389
    MOD             shift and go to state 390
    IS_IDENTICAL    shift and go to state 391
    IS_NOT_IDENTICAL shift and go to state 392
    IS_EQUAL_TO     shift and go to state 393
    IS_NOT_EQUAL    shift and go to state 394
    LESS_THAN       shift and go to state 395
    LESS_THAN_OR_EQUAL shift and go to state 396
    GREATER_THAN    shift and go to state 397
    GRATER_THAN_OR_EQUAL shift and go to state 398


state 316

    (238) static_expr -> static_scalar .

    BOOLEAN_AND     reduce using rule 238 (static_expr -> static_scalar .)
    BOOLEAN_OR      reduce using rule 238 (static_expr -> static_scalar .)
    LOGICAL_AND     reduce using rule 238 (static_expr -> static_scalar .)
    LOGICAL_OR      reduce using rule 238 (static_expr -> static_scalar .)
    LOGICAL_XOR     reduce using rule 238 (static_expr -> static_scalar .)
    AND             reduce using rule 238 (static_expr -> static_scalar .)
    OR              reduce using rule 238 (static_expr -> static_scalar .)
    XOR             reduce using rule 238 (static_expr -> static_scalar .)
    CONCAT          reduce using rule 238 (static_expr -> static_scalar .)
    PLUS            reduce using rule 238 (static_expr -> static_scalar .)
    MINUS           reduce using rule 238 (static_expr -> static_scalar .)
    MUL             reduce using rule 238 (static_expr -> static_scalar .)
    DIV             reduce using rule 238 (static_expr -> static_scalar .)
    SL              reduce using rule 238 (static_expr -> static_scalar .)
    SR              reduce using rule 238 (static_expr -> static_scalar .)
    MOD             reduce using rule 238 (static_expr -> static_scalar .)
    IS_IDENTICAL    reduce using rule 238 (static_expr -> static_scalar .)
    IS_NOT_IDENTICAL reduce using rule 238 (static_expr -> static_scalar .)
    IS_EQUAL_TO     reduce using rule 238 (static_expr -> static_scalar .)
    IS_NOT_EQUAL    reduce using rule 238 (static_expr -> static_scalar .)
    LESS_THAN       reduce using rule 238 (static_expr -> static_scalar .)
    LESS_THAN_OR_EQUAL reduce using rule 238 (static_expr -> static_scalar .)
    GREATER_THAN    reduce using rule 238 (static_expr -> static_scalar .)
    GRATER_THAN_OR_EQUAL reduce using rule 238 (static_expr -> static_scalar .)
    SEMI_COLON      reduce using rule 238 (static_expr -> static_scalar .)
    COMMA           reduce using rule 238 (static_expr -> static_scalar .)
    RPAREN          reduce using rule 238 (static_expr -> static_scalar .)
    RBRACKET        reduce using rule 238 (static_expr -> static_scalar .)


state 317

    (228) static_scalar -> PLUS . static_scalar
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_scalar                  shift and go to state 399
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 318

    (229) static_scalar -> MINUS . static_scalar
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_scalar                  shift and go to state 400
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 319

    (263) static_expr -> LPAREN . static_expr RPAREN
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 401
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 320

    (219) static_scalar -> common_scalar .

    BOOLEAN_AND     reduce using rule 219 (static_scalar -> common_scalar .)
    BOOLEAN_OR      reduce using rule 219 (static_scalar -> common_scalar .)
    LOGICAL_AND     reduce using rule 219 (static_scalar -> common_scalar .)
    LOGICAL_OR      reduce using rule 219 (static_scalar -> common_scalar .)
    LOGICAL_XOR     reduce using rule 219 (static_scalar -> common_scalar .)
    AND             reduce using rule 219 (static_scalar -> common_scalar .)
    OR              reduce using rule 219 (static_scalar -> common_scalar .)
    XOR             reduce using rule 219 (static_scalar -> common_scalar .)
    CONCAT          reduce using rule 219 (static_scalar -> common_scalar .)
    PLUS            reduce using rule 219 (static_scalar -> common_scalar .)
    MINUS           reduce using rule 219 (static_scalar -> common_scalar .)
    MUL             reduce using rule 219 (static_scalar -> common_scalar .)
    DIV             reduce using rule 219 (static_scalar -> common_scalar .)
    SL              reduce using rule 219 (static_scalar -> common_scalar .)
    SR              reduce using rule 219 (static_scalar -> common_scalar .)
    MOD             reduce using rule 219 (static_scalar -> common_scalar .)
    IS_IDENTICAL    reduce using rule 219 (static_scalar -> common_scalar .)
    IS_NOT_IDENTICAL reduce using rule 219 (static_scalar -> common_scalar .)
    IS_EQUAL_TO     reduce using rule 219 (static_scalar -> common_scalar .)
    IS_NOT_EQUAL    reduce using rule 219 (static_scalar -> common_scalar .)
    LESS_THAN       reduce using rule 219 (static_scalar -> common_scalar .)
    LESS_THAN_OR_EQUAL reduce using rule 219 (static_scalar -> common_scalar .)
    GREATER_THAN    reduce using rule 219 (static_scalar -> common_scalar .)
    GRATER_THAN_OR_EQUAL reduce using rule 219 (static_scalar -> common_scalar .)
    SEMI_COLON      reduce using rule 219 (static_scalar -> common_scalar .)
    COMMA           reduce using rule 219 (static_scalar -> common_scalar .)
    RPAREN          reduce using rule 219 (static_scalar -> common_scalar .)
    DOUBLE_ARROW    reduce using rule 219 (static_scalar -> common_scalar .)
    RBRACKET        reduce using rule 219 (static_scalar -> common_scalar .)


state 321

    (220) static_scalar -> DOUBLE_QUOTE . DOUBLE_QUOTE
    (221) static_scalar -> DOUBLE_QUOTE . ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE

    DOUBLE_QUOTE    shift and go to state 402
    ENCAPSED_AND_WHITESPACE shift and go to state 403


state 322

    (222) static_scalar -> static_heredoc .

    BOOLEAN_AND     reduce using rule 222 (static_scalar -> static_heredoc .)
    BOOLEAN_OR      reduce using rule 222 (static_scalar -> static_heredoc .)
    LOGICAL_AND     reduce using rule 222 (static_scalar -> static_heredoc .)
    LOGICAL_OR      reduce using rule 222 (static_scalar -> static_heredoc .)
    LOGICAL_XOR     reduce using rule 222 (static_scalar -> static_heredoc .)
    AND             reduce using rule 222 (static_scalar -> static_heredoc .)
    OR              reduce using rule 222 (static_scalar -> static_heredoc .)
    XOR             reduce using rule 222 (static_scalar -> static_heredoc .)
    CONCAT          reduce using rule 222 (static_scalar -> static_heredoc .)
    PLUS            reduce using rule 222 (static_scalar -> static_heredoc .)
    MINUS           reduce using rule 222 (static_scalar -> static_heredoc .)
    MUL             reduce using rule 222 (static_scalar -> static_heredoc .)
    DIV             reduce using rule 222 (static_scalar -> static_heredoc .)
    SL              reduce using rule 222 (static_scalar -> static_heredoc .)
    SR              reduce using rule 222 (static_scalar -> static_heredoc .)
    MOD             reduce using rule 222 (static_scalar -> static_heredoc .)
    IS_IDENTICAL    reduce using rule 222 (static_scalar -> static_heredoc .)
    IS_NOT_IDENTICAL reduce using rule 222 (static_scalar -> static_heredoc .)
    IS_EQUAL_TO     reduce using rule 222 (static_scalar -> static_heredoc .)
    IS_NOT_EQUAL    reduce using rule 222 (static_scalar -> static_heredoc .)
    LESS_THAN       reduce using rule 222 (static_scalar -> static_heredoc .)
    LESS_THAN_OR_EQUAL reduce using rule 222 (static_scalar -> static_heredoc .)
    GREATER_THAN    reduce using rule 222 (static_scalar -> static_heredoc .)
    GRATER_THAN_OR_EQUAL reduce using rule 222 (static_scalar -> static_heredoc .)
    SEMI_COLON      reduce using rule 222 (static_scalar -> static_heredoc .)
    COMMA           reduce using rule 222 (static_scalar -> static_heredoc .)
    RPAREN          reduce using rule 222 (static_scalar -> static_heredoc .)
    DOUBLE_ARROW    reduce using rule 222 (static_scalar -> static_heredoc .)
    RBRACKET        reduce using rule 222 (static_scalar -> static_heredoc .)


state 323

    (223) static_scalar -> nowdoc .

    BOOLEAN_AND     reduce using rule 223 (static_scalar -> nowdoc .)
    BOOLEAN_OR      reduce using rule 223 (static_scalar -> nowdoc .)
    LOGICAL_AND     reduce using rule 223 (static_scalar -> nowdoc .)
    LOGICAL_OR      reduce using rule 223 (static_scalar -> nowdoc .)
    LOGICAL_XOR     reduce using rule 223 (static_scalar -> nowdoc .)
    AND             reduce using rule 223 (static_scalar -> nowdoc .)
    OR              reduce using rule 223 (static_scalar -> nowdoc .)
    XOR             reduce using rule 223 (static_scalar -> nowdoc .)
    CONCAT          reduce using rule 223 (static_scalar -> nowdoc .)
    PLUS            reduce using rule 223 (static_scalar -> nowdoc .)
    MINUS           reduce using rule 223 (static_scalar -> nowdoc .)
    MUL             reduce using rule 223 (static_scalar -> nowdoc .)
    DIV             reduce using rule 223 (static_scalar -> nowdoc .)
    SL              reduce using rule 223 (static_scalar -> nowdoc .)
    SR              reduce using rule 223 (static_scalar -> nowdoc .)
    MOD             reduce using rule 223 (static_scalar -> nowdoc .)
    IS_IDENTICAL    reduce using rule 223 (static_scalar -> nowdoc .)
    IS_NOT_IDENTICAL reduce using rule 223 (static_scalar -> nowdoc .)
    IS_EQUAL_TO     reduce using rule 223 (static_scalar -> nowdoc .)
    IS_NOT_EQUAL    reduce using rule 223 (static_scalar -> nowdoc .)
    LESS_THAN       reduce using rule 223 (static_scalar -> nowdoc .)
    LESS_THAN_OR_EQUAL reduce using rule 223 (static_scalar -> nowdoc .)
    GREATER_THAN    reduce using rule 223 (static_scalar -> nowdoc .)
    GRATER_THAN_OR_EQUAL reduce using rule 223 (static_scalar -> nowdoc .)
    SEMI_COLON      reduce using rule 223 (static_scalar -> nowdoc .)
    COMMA           reduce using rule 223 (static_scalar -> nowdoc .)
    RPAREN          reduce using rule 223 (static_scalar -> nowdoc .)
    DOUBLE_ARROW    reduce using rule 223 (static_scalar -> nowdoc .)
    RBRACKET        reduce using rule 223 (static_scalar -> nowdoc .)


state 324

    (230) static_scalar -> ARRAY . LPAREN static_array_pair_list RPAREN

    LPAREN          shift and go to state 404


state 325

    (231) static_scalar -> LBRACKET . static_array_pair_list RBRACKET
    (232) static_array_pair_list -> . empty
    (233) static_array_pair_list -> . static_non_empty_array_pair_list possible_comma
    (275) empty -> .
    (234) static_non_empty_array_pair_list -> . static_non_empty_array_pair_list COMMA static_expr
    (235) static_non_empty_array_pair_list -> . static_expr
    (236) static_non_empty_array_pair_list -> . static_non_empty_array_pair_list COMMA static_scalar DOUBLE_ARROW static_expr
    (237) static_non_empty_array_pair_list -> . static_scalar DOUBLE_ARROW static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    RBRACKET        reduce using rule 275 (empty -> .)
    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_array_pair_list         shift and go to state 405
    empty                          shift and go to state 406
    static_non_empty_array_pair_list shift and go to state 407
    static_expr                    shift and go to state 408
    static_scalar                  shift and go to state 409
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 326

    (224) static_heredoc -> START_HEREDOC . multiple_encapsed END_HEREDOC
    (225) multiple_encapsed -> . multiple_encapsed ENCAPSED_AND_WHITESPACE
    (226) multiple_encapsed -> . empty
    (275) empty -> .

    END_HEREDOC     reduce using rule 275 (empty -> .)
    ENCAPSED_AND_WHITESPACE reduce using rule 275 (empty -> .)

    multiple_encapsed              shift and go to state 410
    empty                          shift and go to state 411

state 327

    (15) inner_statement -> YIELD SEMI_COLON .

    RBRACE          reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    YIELD           reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    LBRACE          reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    IF              reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    WHILE           reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    DO              reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    FOR             reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    SWITCH          reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    BREAK           reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    CONTINUE        reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    RETURN          reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    GLOBAL          reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    STATIC          reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    ECHO            reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    INLINE_HTML     reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    UNSET           reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    SEMI_COLON      reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    FUNCTION        reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    CLONE           reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    LIST            reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    ARRAY           reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    LBRACKET        reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    PLUS            reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    MINUS           reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    NOT             reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    INC             reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    DEC             reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    INT_CAST        reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    ARRAY_CAST      reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    STRING_CAST     reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    BOOL_CAST       reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    UNSET_CAST      reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    BINARY_CAST     reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    ISSET           reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    EMPTY           reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    EVAL            reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    INCLUDE         reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    REQUIRE         reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    PRINT           reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    AT              reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    LPAREN          reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    IDENTIFIER      reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    EXIT            reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    DIE             reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    INT_NUMBER      reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    FUNC_C          reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    METHOD_C        reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    LINE            reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    FILE            reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    DIR             reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    START_HEREDOC   reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    START_NOWDOC    reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    VARIABLE        reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    DOLLAR          reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    ELSEIF          reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    ELSE            reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    ENDIF           reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    ENDWHILE        reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    ENDSWITCH       reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    ENDFOR          reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    CASE            reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    DEFAULT         reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)


state 328

    (16) inner_statement -> YIELD expr . SEMI_COLON
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      shift and go to state 412
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 329

    (18) statement -> IF LPAREN expr RPAREN . statement elseif_list
    (19) statement -> IF LPAREN expr RPAREN . statement elseif_list ELSE statement
    (20) statement -> IF LPAREN expr RPAREN . COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list
    (19) statement -> . IF LPAREN expr RPAREN statement elseif_list ELSE statement
    (20) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (21) statement -> . WHILE LPAREN expr RPAREN while_statement
    (22) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (23) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (24) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (25) statement -> . BREAK SEMI_COLON
    (26) statement -> . BREAK expr SEMI_COLON
    (27) statement -> . CONTINUE SEMI_COLON
    (28) statement -> . CONTINUE expr SEMI_COLON
    (29) statement -> . RETURN SEMI_COLON
    (30) statement -> . RETURN expr SEMI_COLON
    (31) statement -> . GLOBAL global_var_list SEMI_COLON
    (32) statement -> . STATIC static_var_list SEMI_COLON
    (33) statement -> . ECHO echo_expr_list SEMI_COLON
    (34) statement -> . INLINE_HTML
    (35) statement -> . expr SEMI_COLON
    (36) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (37) statement -> . SEMI_COLON
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    COLON           shift and go to state 414
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 13
    statement                      shift and go to state 413
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 330

    (105) expr -> expr LBRACE dim_offset RBRACE .

    SEMI_COLON      reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    LBRACE          reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    BOOLEAN_AND     reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    BOOLEAN_OR      reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    LOGICAL_AND     reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    LOGICAL_OR      reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    LOGICAL_XOR     reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    AND             reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    OR              reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    XOR             reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    CONCAT          reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    PLUS            reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    MINUS           reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    MUL             reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    DIV             reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    SL              reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    SR              reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    MOD             reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    IS_IDENTICAL    reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    IS_NOT_IDENTICAL reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    IS_EQUAL_TO     reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    IS_NOT_EQUAL    reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    LESS_THAN       reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    LESS_THAN_OR_EQUAL reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    GREATER_THAN    reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    GRATER_THAN_OR_EQUAL reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    INSTANCEOF      reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    SPACESHIP       reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    QUESTION        reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    RPAREN          reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    COMMA           reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    DOUBLE_ARROW    reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    RBRACE          reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    COLON           reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)
    RBRACKET        reduce using rule 105 (expr -> expr LBRACE dim_offset RBRACE .)


state 331

    (170) expr -> expr QUESTION expr COLON . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 415
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 332

    (171) expr -> expr QUESTION COLON expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 171 (expr -> expr QUESTION COLON expr .)
    LBRACE          reduce using rule 171 (expr -> expr QUESTION COLON expr .)
    LOGICAL_AND     reduce using rule 171 (expr -> expr QUESTION COLON expr .)
    LOGICAL_OR      reduce using rule 171 (expr -> expr QUESTION COLON expr .)
    LOGICAL_XOR     reduce using rule 171 (expr -> expr QUESTION COLON expr .)
    QUESTION        reduce using rule 171 (expr -> expr QUESTION COLON expr .)
    RPAREN          reduce using rule 171 (expr -> expr QUESTION COLON expr .)
    COMMA           reduce using rule 171 (expr -> expr QUESTION COLON expr .)
    DOUBLE_ARROW    reduce using rule 171 (expr -> expr QUESTION COLON expr .)
    RBRACE          reduce using rule 171 (expr -> expr QUESTION COLON expr .)
    COLON           reduce using rule 171 (expr -> expr QUESTION COLON expr .)
    RBRACKET        reduce using rule 171 (expr -> expr QUESTION COLON expr .)
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116

  ! BOOLEAN_AND     [ reduce using rule 171 (expr -> expr QUESTION COLON expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 171 (expr -> expr QUESTION COLON expr .) ]
  ! AND             [ reduce using rule 171 (expr -> expr QUESTION COLON expr .) ]
  ! OR              [ reduce using rule 171 (expr -> expr QUESTION COLON expr .) ]
  ! XOR             [ reduce using rule 171 (expr -> expr QUESTION COLON expr .) ]
  ! CONCAT          [ reduce using rule 171 (expr -> expr QUESTION COLON expr .) ]
  ! PLUS            [ reduce using rule 171 (expr -> expr QUESTION COLON expr .) ]
  ! MINUS           [ reduce using rule 171 (expr -> expr QUESTION COLON expr .) ]
  ! MUL             [ reduce using rule 171 (expr -> expr QUESTION COLON expr .) ]
  ! DIV             [ reduce using rule 171 (expr -> expr QUESTION COLON expr .) ]
  ! SL              [ reduce using rule 171 (expr -> expr QUESTION COLON expr .) ]
  ! SR              [ reduce using rule 171 (expr -> expr QUESTION COLON expr .) ]
  ! MOD             [ reduce using rule 171 (expr -> expr QUESTION COLON expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 171 (expr -> expr QUESTION COLON expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 171 (expr -> expr QUESTION COLON expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 171 (expr -> expr QUESTION COLON expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 171 (expr -> expr QUESTION COLON expr .) ]
  ! LESS_THAN       [ reduce using rule 171 (expr -> expr QUESTION COLON expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 171 (expr -> expr QUESTION COLON expr .) ]
  ! GREATER_THAN    [ reduce using rule 171 (expr -> expr QUESTION COLON expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 171 (expr -> expr QUESTION COLON expr .) ]
  ! INSTANCEOF      [ reduce using rule 171 (expr -> expr QUESTION COLON expr .) ]
  ! SPACESHIP       [ reduce using rule 171 (expr -> expr QUESTION COLON expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! QUESTION        [ shift and go to state 117 ]


state 333

    (21) statement -> WHILE LPAREN expr RPAREN . while_statement
    (44) while_statement -> . statement
    (45) while_statement -> . COLON inner_statement_list ENDWHILE SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list
    (19) statement -> . IF LPAREN expr RPAREN statement elseif_list ELSE statement
    (20) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (21) statement -> . WHILE LPAREN expr RPAREN while_statement
    (22) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (23) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (24) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (25) statement -> . BREAK SEMI_COLON
    (26) statement -> . BREAK expr SEMI_COLON
    (27) statement -> . CONTINUE SEMI_COLON
    (28) statement -> . CONTINUE expr SEMI_COLON
    (29) statement -> . RETURN SEMI_COLON
    (30) statement -> . RETURN expr SEMI_COLON
    (31) statement -> . GLOBAL global_var_list SEMI_COLON
    (32) statement -> . STATIC static_var_list SEMI_COLON
    (33) statement -> . ECHO echo_expr_list SEMI_COLON
    (34) statement -> . INLINE_HTML
    (35) statement -> . expr SEMI_COLON
    (36) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (37) statement -> . SEMI_COLON
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    COLON           shift and go to state 418
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 13
    while_statement                shift and go to state 416
    statement                      shift and go to state 417
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 334

    (22) statement -> DO statement WHILE LPAREN . expr RPAREN SEMI_COLON
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 419
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 335

    (23) statement -> FOR LPAREN for_expr SEMI_COLON . for_expr SEMI_COLON for_expr RPAREN for_statement
    (46) for_expr -> . empty
    (47) for_expr -> . non_empty_for_expr
    (275) empty -> .
    (48) non_empty_for_expr -> . non_empty_for_expr COMMA expr
    (49) non_empty_for_expr -> . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    SEMI_COLON      reduce using rule 275 (empty -> .)
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    for_expr                       shift and go to state 420
    empty                          shift and go to state 244
    non_empty_for_expr             shift and go to state 245
    expr                           shift and go to state 246
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 336

    (48) non_empty_for_expr -> non_empty_for_expr COMMA . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 421
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 337

    (24) statement -> SWITCH LPAREN expr RPAREN . switch_case_list
    (52) switch_case_list -> . LBRACE case_list RBRACE
    (53) switch_case_list -> . LBRACE SEMI_COLON case_list RBRACE
    (54) switch_case_list -> . COLON case_list ENDSWITCH SEMI_COLON
    (55) switch_case_list -> . COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON

    LBRACE          shift and go to state 423
    COLON           shift and go to state 424

    switch_case_list               shift and go to state 422

state 338

    (63) global_var_list -> global_var_list COMMA global_var .

    SEMI_COLON      reduce using rule 63 (global_var_list -> global_var_list COMMA global_var .)
    COMMA           reduce using rule 63 (global_var_list -> global_var_list COMMA global_var .)


state 339

    (67) global_var -> DOLLAR LBRACE expr . RBRACE
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    RBRACE          shift and go to state 425
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 340

    (68) static_var_list -> static_var_list COMMA static_var .

    SEMI_COLON      reduce using rule 68 (static_var_list -> static_var_list COMMA static_var .)
    COMMA           reduce using rule 68 (static_var_list -> static_var_list COMMA static_var .)


state 341

    (70) static_var -> VARIABLE EQUALS static_scalar .

    SEMI_COLON      reduce using rule 70 (static_var -> VARIABLE EQUALS static_scalar .)
    COMMA           reduce using rule 70 (static_var -> VARIABLE EQUALS static_scalar .)


state 342

    (72) echo_expr_list -> echo_expr_list COMMA expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 72 (echo_expr_list -> echo_expr_list COMMA expr .)
    COMMA           reduce using rule 72 (echo_expr_list -> echo_expr_list COMMA expr .)
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 343

    (36) statement -> UNSET LPAREN unset_variables RPAREN . SEMI_COLON

    SEMI_COLON      shift and go to state 426


state 344

    (74) unset_variables -> unset_variables COMMA . unset_variable
    (76) unset_variable -> . variable
    (98) variable -> . base_variable_with_function_calls
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    IDENTIFIER      shift and go to state 171
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    unset_variable                 shift and go to state 427
    variable                       shift and go to state 262
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 345

    (77) function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN . parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (80) parameter_list -> . non_empty_parameter_list
    (81) parameter_list -> . empty
    (82) non_empty_parameter_list -> . non_empty_parameter_list COMMA parameter
    (83) non_empty_parameter_list -> . parameter
    (275) empty -> .
    (84) parameter -> . VARIABLE
    (85) parameter -> . AND VARIABLE
    (86) parameter -> . VARIABLE EQUALS static_scalar
    (87) parameter -> . AND VARIABLE EQUALS static_scalar

    RPAREN          reduce using rule 275 (empty -> .)
    VARIABLE        shift and go to state 350
    AND             shift and go to state 351

    parameter_list                 shift and go to state 428
    non_empty_parameter_list       shift and go to state 347
    empty                          shift and go to state 348
    parameter                      shift and go to state 349

state 346

    (127) expr -> FUNCTION is_reference LPAREN parameter_list . RPAREN LBRACE inner_statement_list RBRACE

    RPAREN          shift and go to state 429


state 347

    (80) parameter_list -> non_empty_parameter_list .
    (82) non_empty_parameter_list -> non_empty_parameter_list . COMMA parameter

    RPAREN          reduce using rule 80 (parameter_list -> non_empty_parameter_list .)
    COMMA           shift and go to state 430


state 348

    (81) parameter_list -> empty .

    RPAREN          reduce using rule 81 (parameter_list -> empty .)


state 349

    (83) non_empty_parameter_list -> parameter .

    COMMA           reduce using rule 83 (non_empty_parameter_list -> parameter .)
    RPAREN          reduce using rule 83 (non_empty_parameter_list -> parameter .)


state 350

    (84) parameter -> VARIABLE .
    (86) parameter -> VARIABLE . EQUALS static_scalar

    COMMA           reduce using rule 84 (parameter -> VARIABLE .)
    RPAREN          reduce using rule 84 (parameter -> VARIABLE .)
    EQUALS          shift and go to state 431


state 351

    (85) parameter -> AND . VARIABLE
    (87) parameter -> AND . VARIABLE EQUALS static_scalar

    VARIABLE        shift and go to state 432


state 352

    (203) scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .

    SEMI_COLON      reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    LBRACE          reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    BOOLEAN_AND     reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    BOOLEAN_OR      reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    LOGICAL_AND     reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    LOGICAL_OR      reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    LOGICAL_XOR     reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    AND             reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    OR              reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    XOR             reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    CONCAT          reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    PLUS            reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    MINUS           reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    MUL             reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    DIV             reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    SL              reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    SR              reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    MOD             reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    IS_IDENTICAL    reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    IS_NOT_IDENTICAL reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    IS_EQUAL_TO     reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    IS_NOT_EQUAL    reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    LESS_THAN       reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    LESS_THAN_OR_EQUAL reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    GREATER_THAN    reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    GRATER_THAN_OR_EQUAL reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    INSTANCEOF      reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    SPACESHIP       reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    QUESTION        reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    RPAREN          reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    COMMA           reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    DOUBLE_ARROW    reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    RBRACE          reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    COLON           reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    RBRACKET        reduce using rule 203 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)


state 353

    (102) fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .

    EQUALS          reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    PLUS_EQUAL      reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    MINUS_EQUAL     reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    MUL_EQUAL       reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    DIV_EQUAL       reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    CONCAT_EQUAL    reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    MOD_EQUAL       reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    AND_EQUAL       reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    OR_EQUAL        reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    XOR_EQUAL       reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    SL_EQUAL        reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    SR_EQUAL        reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    INC             reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    DEC             reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    SEMI_COLON      reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    LBRACE          reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    BOOLEAN_AND     reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    BOOLEAN_OR      reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    LOGICAL_AND     reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    LOGICAL_OR      reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    LOGICAL_XOR     reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    AND             reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    OR              reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    XOR             reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    CONCAT          reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    PLUS            reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    MINUS           reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    MUL             reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    DIV             reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    SL              reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    SR              reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    MOD             reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    IS_IDENTICAL    reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    IS_EQUAL_TO     reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    IS_NOT_EQUAL    reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    LESS_THAN       reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    GREATER_THAN    reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    GRATER_THAN_OR_EQUAL reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    INSTANCEOF      reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    SPACESHIP       reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    QUESTION        reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    RPAREN          reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    COMMA           reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    DOUBLE_ARROW    reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    RBRACE          reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    COLON           reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)
    RBRACKET        reduce using rule 102 (fucntion_call_body -> LPAREN function_call_parameter_list RPAREN .)


state 354

    (122) function_call_parameter_list -> function_call_parameter_list COMMA . function_call_parameter
    (125) function_call_parameter -> . expr
    (126) function_call_parameter -> . AND variable
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    AND             shift and go to state 270
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    function_call_parameter        shift and go to state 433
    expr                           shift and go to state 269
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 355

    (126) function_call_parameter -> AND variable .

    RPAREN          reduce using rule 126 (function_call_parameter -> AND variable .)
    COMMA           reduce using rule 126 (function_call_parameter -> AND variable .)


state 356

    (90) expr -> variable EQUALS AND expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 90 (expr -> variable EQUALS AND expr .)
    LBRACE          reduce using rule 90 (expr -> variable EQUALS AND expr .)
    BOOLEAN_AND     reduce using rule 90 (expr -> variable EQUALS AND expr .)
    BOOLEAN_OR      reduce using rule 90 (expr -> variable EQUALS AND expr .)
    LOGICAL_AND     reduce using rule 90 (expr -> variable EQUALS AND expr .)
    LOGICAL_OR      reduce using rule 90 (expr -> variable EQUALS AND expr .)
    LOGICAL_XOR     reduce using rule 90 (expr -> variable EQUALS AND expr .)
    AND             reduce using rule 90 (expr -> variable EQUALS AND expr .)
    OR              reduce using rule 90 (expr -> variable EQUALS AND expr .)
    XOR             reduce using rule 90 (expr -> variable EQUALS AND expr .)
    QUESTION        reduce using rule 90 (expr -> variable EQUALS AND expr .)
    RPAREN          reduce using rule 90 (expr -> variable EQUALS AND expr .)
    COMMA           reduce using rule 90 (expr -> variable EQUALS AND expr .)
    DOUBLE_ARROW    reduce using rule 90 (expr -> variable EQUALS AND expr .)
    RBRACE          reduce using rule 90 (expr -> variable EQUALS AND expr .)
    COLON           reduce using rule 90 (expr -> variable EQUALS AND expr .)
    RBRACKET        reduce using rule 90 (expr -> variable EQUALS AND expr .)
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116

  ! CONCAT          [ reduce using rule 90 (expr -> variable EQUALS AND expr .) ]
  ! PLUS            [ reduce using rule 90 (expr -> variable EQUALS AND expr .) ]
  ! MINUS           [ reduce using rule 90 (expr -> variable EQUALS AND expr .) ]
  ! MUL             [ reduce using rule 90 (expr -> variable EQUALS AND expr .) ]
  ! DIV             [ reduce using rule 90 (expr -> variable EQUALS AND expr .) ]
  ! SL              [ reduce using rule 90 (expr -> variable EQUALS AND expr .) ]
  ! SR              [ reduce using rule 90 (expr -> variable EQUALS AND expr .) ]
  ! MOD             [ reduce using rule 90 (expr -> variable EQUALS AND expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 90 (expr -> variable EQUALS AND expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 90 (expr -> variable EQUALS AND expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 90 (expr -> variable EQUALS AND expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 90 (expr -> variable EQUALS AND expr .) ]
  ! LESS_THAN       [ reduce using rule 90 (expr -> variable EQUALS AND expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 90 (expr -> variable EQUALS AND expr .) ]
  ! GREATER_THAN    [ reduce using rule 90 (expr -> variable EQUALS AND expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 90 (expr -> variable EQUALS AND expr .) ]
  ! INSTANCEOF      [ reduce using rule 90 (expr -> variable EQUALS AND expr .) ]
  ! SPACESHIP       [ reduce using rule 90 (expr -> variable EQUALS AND expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! BOOLEAN_AND     [ shift and go to state 91 ]
  ! BOOLEAN_OR      [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! OR              [ shift and go to state 97 ]
  ! XOR             [ shift and go to state 98 ]
  ! QUESTION        [ shift and go to state 117 ]


state 357

    (97) assignment_list_element -> LIST LPAREN . assignment_list RPAREN
    (93) assignment_list -> . assignment_list COMMA assignment_list_element
    (94) assignment_list -> . assignment_list_element
    (95) assignment_list_element -> . variable
    (96) assignment_list_element -> . empty
    (97) assignment_list_element -> . LIST LPAREN assignment_list RPAREN
    (98) variable -> . base_variable_with_function_calls
    (275) empty -> .
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    LIST            shift and go to state 284
    RPAREN          reduce using rule 275 (empty -> .)
    COMMA           reduce using rule 275 (empty -> .)
    IDENTIFIER      shift and go to state 171
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    assignment_list                shift and go to state 434
    assignment_list_element        shift and go to state 286
    variable                       shift and go to state 287
    empty                          shift and go to state 288
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 358

    (92) expr -> LIST LPAREN assignment_list RPAREN . EQUALS expr

    EQUALS          shift and go to state 435


state 359

    (93) assignment_list -> assignment_list COMMA . assignment_list_element
    (95) assignment_list_element -> . variable
    (96) assignment_list_element -> . empty
    (97) assignment_list_element -> . LIST LPAREN assignment_list RPAREN
    (98) variable -> . base_variable_with_function_calls
    (275) empty -> .
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    LIST            shift and go to state 284
    RPAREN          reduce using rule 275 (empty -> .)
    COMMA           reduce using rule 275 (empty -> .)
    IDENTIFIER      shift and go to state 171
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    assignment_list_element        shift and go to state 436
    variable                       shift and go to state 287
    empty                          shift and go to state 288
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 360

    (112) expr -> ARRAY LPAREN array_pair_list RPAREN .

    SEMI_COLON      reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    LBRACE          reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    BOOLEAN_AND     reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    BOOLEAN_OR      reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    LOGICAL_AND     reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    LOGICAL_OR      reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    LOGICAL_XOR     reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    AND             reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    OR              reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    XOR             reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    CONCAT          reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    PLUS            reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    MINUS           reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    MUL             reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    DIV             reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    SL              reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    SR              reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    MOD             reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    IS_IDENTICAL    reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    IS_EQUAL_TO     reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    IS_NOT_EQUAL    reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    LESS_THAN       reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    GREATER_THAN    reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    GRATER_THAN_OR_EQUAL reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    INSTANCEOF      reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    SPACESHIP       reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    QUESTION        reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    RPAREN          reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    COMMA           reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    DOUBLE_ARROW    reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    RBRACE          reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    COLON           reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    RBRACKET        reduce using rule 112 (expr -> ARRAY LPAREN array_pair_list RPAREN .)


state 361

    (116) non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr . DOUBLE_ARROW AND variable
    (117) non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr . DOUBLE_ARROW expr
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    DOUBLE_ARROW    shift and go to state 437
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 362

    (119) non_empty_array_pair_list -> expr DOUBLE_ARROW expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    COMMA           reduce using rule 119 (non_empty_array_pair_list -> expr DOUBLE_ARROW expr .)
    RBRACKET        reduce using rule 119 (non_empty_array_pair_list -> expr DOUBLE_ARROW expr .)
    RPAREN          reduce using rule 119 (non_empty_array_pair_list -> expr DOUBLE_ARROW expr .)
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 363

    (118) non_empty_array_pair_list -> expr DOUBLE_ARROW AND . variable
    (98) variable -> . base_variable_with_function_calls
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    IDENTIFIER      shift and go to state 171
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    variable                       shift and go to state 438
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 364

    (183) expr -> ISSET LPAREN isset_variables RPAREN .

    SEMI_COLON      reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    LBRACE          reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    BOOLEAN_AND     reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    BOOLEAN_OR      reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    LOGICAL_AND     reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    LOGICAL_OR      reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    LOGICAL_XOR     reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    AND             reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    OR              reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    XOR             reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    CONCAT          reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    PLUS            reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    MINUS           reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    MUL             reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    DIV             reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    SL              reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    SR              reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    MOD             reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    IS_IDENTICAL    reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    IS_EQUAL_TO     reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    IS_NOT_EQUAL    reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    LESS_THAN       reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    GREATER_THAN    reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    GRATER_THAN_OR_EQUAL reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    INSTANCEOF      reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    SPACESHIP       reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    QUESTION        reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    RPAREN          reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    COMMA           reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    DOUBLE_ARROW    reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    RBRACE          reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    COLON           reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)
    RBRACKET        reduce using rule 183 (expr -> ISSET LPAREN isset_variables RPAREN .)


state 365

    (184) isset_variables -> isset_variables COMMA . variable
    (98) variable -> . base_variable_with_function_calls
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    IDENTIFIER      shift and go to state 171
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    variable                       shift and go to state 439
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 366

    (186) expr -> EMPTY LPAREN expr RPAREN .

    SEMI_COLON      reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    LBRACE          reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    BOOLEAN_AND     reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    BOOLEAN_OR      reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    LOGICAL_AND     reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    LOGICAL_OR      reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    LOGICAL_XOR     reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    AND             reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    OR              reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    XOR             reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    CONCAT          reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    PLUS            reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    MINUS           reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    MUL             reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    DIV             reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    SL              reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    SR              reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    MOD             reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    IS_IDENTICAL    reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    IS_EQUAL_TO     reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    IS_NOT_EQUAL    reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    LESS_THAN       reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    GREATER_THAN    reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    GRATER_THAN_OR_EQUAL reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    INSTANCEOF      reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    SPACESHIP       reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    QUESTION        reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    RPAREN          reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    COMMA           reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    DOUBLE_ARROW    reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    RBRACE          reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    COLON           reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 186 (expr -> EMPTY LPAREN expr RPAREN .)


state 367

    (187) expr -> EVAL LPAREN expr RPAREN .

    SEMI_COLON      reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    LBRACE          reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    BOOLEAN_AND     reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    BOOLEAN_OR      reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    LOGICAL_AND     reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    LOGICAL_OR      reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    LOGICAL_XOR     reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    AND             reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    OR              reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    XOR             reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    CONCAT          reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    PLUS            reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    MINUS           reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    MUL             reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    DIV             reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    SL              reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    SR              reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    MOD             reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    IS_IDENTICAL    reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    IS_EQUAL_TO     reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    IS_NOT_EQUAL    reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    LESS_THAN       reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    GREATER_THAN    reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    GRATER_THAN_OR_EQUAL reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    INSTANCEOF      reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    SPACESHIP       reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    QUESTION        reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    RPAREN          reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    COMMA           reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    DOUBLE_ARROW    reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    RBRACE          reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    COLON           reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 187 (expr -> EVAL LPAREN expr RPAREN .)


state 368

    (196) expr -> exit_or_die LPAREN expr RPAREN .

    SEMI_COLON      reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    LBRACE          reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    BOOLEAN_AND     reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    BOOLEAN_OR      reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    LOGICAL_AND     reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    LOGICAL_OR      reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    LOGICAL_XOR     reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    AND             reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    OR              reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    XOR             reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    CONCAT          reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    PLUS            reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    MINUS           reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    MUL             reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    DIV             reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    SL              reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    SR              reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    MOD             reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    IS_IDENTICAL    reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    IS_EQUAL_TO     reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    IS_NOT_EQUAL    reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    LESS_THAN       reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    GREATER_THAN    reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    GRATER_THAN_OR_EQUAL reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    INSTANCEOF      reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    SPACESHIP       reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    QUESTION        reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    RPAREN          reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    COMMA           reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    DOUBLE_ARROW    reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    RBRACE          reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    COLON           reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 196 (expr -> exit_or_die LPAREN expr RPAREN .)


state 369

    (267) encaps_var -> VARIABLE LBRACKET . encaps_var_offset RBRACKET
    (272) encaps_var_offset -> . IDENTIFIER
    (273) encaps_var_offset -> . NUM_STRING
    (274) encaps_var_offset -> . VARIABLE

    IDENTIFIER      shift and go to state 442
    NUM_STRING      shift and go to state 443
    VARIABLE        shift and go to state 440

    encaps_var_offset              shift and go to state 441

state 370

    (268) encaps_var -> DOLLAR_OPEN_CURLY_BRACES expr . RBRACE
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    RBRACE          shift and go to state 444
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 371

    (270) encaps_var -> DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME . LBRACKET expr RBRACKET RBRACE

    LBRACKET        shift and go to state 445


state 372

    (271) encaps_var -> CURLY_OPEN variable . RBRACE

    RBRACE          shift and go to state 446


state 373

    (103) function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .

    EQUALS          reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    PLUS_EQUAL      reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    MINUS_EQUAL     reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    MUL_EQUAL       reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    DIV_EQUAL       reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    CONCAT_EQUAL    reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    MOD_EQUAL       reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    AND_EQUAL       reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    OR_EQUAL        reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    XOR_EQUAL       reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    SL_EQUAL        reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    SR_EQUAL        reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    INC             reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    DEC             reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    SEMI_COLON      reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    LBRACE          reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    BOOLEAN_AND     reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    BOOLEAN_OR      reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    LOGICAL_AND     reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    LOGICAL_OR      reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    LOGICAL_XOR     reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    AND             reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    OR              reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    XOR             reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    CONCAT          reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    PLUS            reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    MINUS           reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    MUL             reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    DIV             reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    SL              reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    SR              reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    MOD             reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    IS_IDENTICAL    reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    IS_EQUAL_TO     reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    IS_NOT_EQUAL    reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    LESS_THAN       reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    GREATER_THAN    reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    GRATER_THAN_OR_EQUAL reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    INSTANCEOF      reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    SPACESHIP       reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    QUESTION        reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    RPAREN          reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    COMMA           reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    DOUBLE_ARROW    reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    RBRACE          reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    COLON           reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)
    RBRACKET        reduce using rule 103 (function_call -> variable_without_objects LPAREN function_call_parameter_list RPAREN .)


state 374

    (107) compound_variable -> DOLLAR LBRACE expr RBRACE .

    EQUALS          reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    PLUS_EQUAL      reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    MINUS_EQUAL     reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    MUL_EQUAL       reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    DIV_EQUAL       reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    CONCAT_EQUAL    reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    MOD_EQUAL       reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    AND_EQUAL       reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    OR_EQUAL        reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    XOR_EQUAL       reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    SL_EQUAL        reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    SR_EQUAL        reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    INC             reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    DEC             reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    SEMI_COLON      reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    LBRACE          reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    BOOLEAN_AND     reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    BOOLEAN_OR      reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    LOGICAL_AND     reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    LOGICAL_OR      reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    LOGICAL_XOR     reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    AND             reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    OR              reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    XOR             reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    CONCAT          reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    PLUS            reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    MINUS           reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    MUL             reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    DIV             reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    SL              reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    SR              reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    MOD             reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    IS_IDENTICAL    reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    IS_NOT_IDENTICAL reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    IS_EQUAL_TO     reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    IS_NOT_EQUAL    reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    LESS_THAN       reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    LESS_THAN_OR_EQUAL reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    GREATER_THAN    reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    GRATER_THAN_OR_EQUAL reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    INSTANCEOF      reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    SPACESHIP       reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    QUESTION        reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    LPAREN          reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    RPAREN          reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    COMMA           reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    DOUBLE_ARROW    reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    RBRACE          reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    COLON           reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    RBRACKET        reduce using rule 107 (compound_variable -> DOLLAR LBRACE expr RBRACE .)


state 375

    (239) static_expr -> static_expr BOOLEAN_AND . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 447
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 376

    (240) static_expr -> static_expr BOOLEAN_OR . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 448
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 377

    (241) static_expr -> static_expr LOGICAL_AND . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 449
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 378

    (242) static_expr -> static_expr LOGICAL_OR . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 450
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 379

    (243) static_expr -> static_expr LOGICAL_XOR . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 451
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 380

    (244) static_expr -> static_expr AND . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 452
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 381

    (245) static_expr -> static_expr OR . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 453
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 382

    (246) static_expr -> static_expr XOR . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 454
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 383

    (247) static_expr -> static_expr CONCAT . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 455
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 384

    (248) static_expr -> static_expr PLUS . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 456
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 385

    (249) static_expr -> static_expr MINUS . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 457
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 386

    (250) static_expr -> static_expr MUL . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 458
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 387

    (251) static_expr -> static_expr DIV . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 459
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 388

    (252) static_expr -> static_expr SL . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 460
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 389

    (253) static_expr -> static_expr SR . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 461
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 390

    (254) static_expr -> static_expr MOD . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 462
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 391

    (255) static_expr -> static_expr IS_IDENTICAL . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 463
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 392

    (256) static_expr -> static_expr IS_NOT_IDENTICAL . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 464
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 393

    (257) static_expr -> static_expr IS_EQUAL_TO . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 465
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 394

    (258) static_expr -> static_expr IS_NOT_EQUAL . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 466
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 395

    (259) static_expr -> static_expr LESS_THAN . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 467
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 396

    (260) static_expr -> static_expr LESS_THAN_OR_EQUAL . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 468
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 397

    (261) static_expr -> static_expr GREATER_THAN . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 469
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 398

    (262) static_expr -> static_expr GRATER_THAN_OR_EQUAL . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 470
    static_scalar                  shift and go to state 316
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 399

    (228) static_scalar -> PLUS static_scalar .

    BOOLEAN_AND     reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    BOOLEAN_OR      reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    LOGICAL_AND     reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    LOGICAL_OR      reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    LOGICAL_XOR     reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    AND             reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    OR              reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    XOR             reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    CONCAT          reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    PLUS            reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    MINUS           reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    MUL             reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    DIV             reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    SL              reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    SR              reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    MOD             reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    IS_IDENTICAL    reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    IS_NOT_IDENTICAL reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    IS_EQUAL_TO     reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    IS_NOT_EQUAL    reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    LESS_THAN       reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    LESS_THAN_OR_EQUAL reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    GREATER_THAN    reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    GRATER_THAN_OR_EQUAL reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    SEMI_COLON      reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    COMMA           reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    RPAREN          reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    DOUBLE_ARROW    reduce using rule 228 (static_scalar -> PLUS static_scalar .)
    RBRACKET        reduce using rule 228 (static_scalar -> PLUS static_scalar .)


state 400

    (229) static_scalar -> MINUS static_scalar .

    BOOLEAN_AND     reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    BOOLEAN_OR      reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    LOGICAL_AND     reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    LOGICAL_OR      reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    LOGICAL_XOR     reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    AND             reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    OR              reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    XOR             reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    CONCAT          reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    PLUS            reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    MINUS           reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    MUL             reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    DIV             reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    SL              reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    SR              reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    MOD             reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    IS_IDENTICAL    reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    IS_NOT_IDENTICAL reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    IS_EQUAL_TO     reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    IS_NOT_EQUAL    reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    LESS_THAN       reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    LESS_THAN_OR_EQUAL reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    GREATER_THAN    reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    GRATER_THAN_OR_EQUAL reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    SEMI_COLON      reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    COMMA           reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    RPAREN          reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    DOUBLE_ARROW    reduce using rule 229 (static_scalar -> MINUS static_scalar .)
    RBRACKET        reduce using rule 229 (static_scalar -> MINUS static_scalar .)


state 401

    (263) static_expr -> LPAREN static_expr . RPAREN
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    RPAREN          shift and go to state 471
    BOOLEAN_AND     shift and go to state 375
    BOOLEAN_OR      shift and go to state 376
    LOGICAL_AND     shift and go to state 377
    LOGICAL_OR      shift and go to state 378
    LOGICAL_XOR     shift and go to state 379
    AND             shift and go to state 380
    OR              shift and go to state 381
    XOR             shift and go to state 382
    CONCAT          shift and go to state 383
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    SL              shift and go to state 388
    SR              shift and go to state 389
    MOD             shift and go to state 390
    IS_IDENTICAL    shift and go to state 391
    IS_NOT_IDENTICAL shift and go to state 392
    IS_EQUAL_TO     shift and go to state 393
    IS_NOT_EQUAL    shift and go to state 394
    LESS_THAN       shift and go to state 395
    LESS_THAN_OR_EQUAL shift and go to state 396
    GREATER_THAN    shift and go to state 397
    GRATER_THAN_OR_EQUAL shift and go to state 398


state 402

    (220) static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .

    BOOLEAN_AND     reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    BOOLEAN_OR      reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    LOGICAL_AND     reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    LOGICAL_OR      reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    LOGICAL_XOR     reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    AND             reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    OR              reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    XOR             reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    CONCAT          reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    PLUS            reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    MINUS           reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    MUL             reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    DIV             reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    SL              reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    SR              reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    MOD             reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    IS_IDENTICAL    reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    IS_NOT_IDENTICAL reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    IS_EQUAL_TO     reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    IS_NOT_EQUAL    reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    LESS_THAN       reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    LESS_THAN_OR_EQUAL reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    GREATER_THAN    reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    GRATER_THAN_OR_EQUAL reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    SEMI_COLON      reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    COMMA           reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    RPAREN          reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    DOUBLE_ARROW    reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    RBRACKET        reduce using rule 220 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)


state 403

    (221) static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE . DOUBLE_QUOTE

    DOUBLE_QUOTE    shift and go to state 472


state 404

    (230) static_scalar -> ARRAY LPAREN . static_array_pair_list RPAREN
    (232) static_array_pair_list -> . empty
    (233) static_array_pair_list -> . static_non_empty_array_pair_list possible_comma
    (275) empty -> .
    (234) static_non_empty_array_pair_list -> . static_non_empty_array_pair_list COMMA static_expr
    (235) static_non_empty_array_pair_list -> . static_expr
    (236) static_non_empty_array_pair_list -> . static_non_empty_array_pair_list COMMA static_scalar DOUBLE_ARROW static_expr
    (237) static_non_empty_array_pair_list -> . static_scalar DOUBLE_ARROW static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    RPAREN          reduce using rule 275 (empty -> .)
    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_array_pair_list         shift and go to state 473
    empty                          shift and go to state 406
    static_non_empty_array_pair_list shift and go to state 407
    static_expr                    shift and go to state 408
    static_scalar                  shift and go to state 409
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 405

    (231) static_scalar -> LBRACKET static_array_pair_list . RBRACKET

    RBRACKET        shift and go to state 474


state 406

    (232) static_array_pair_list -> empty .

    RBRACKET        reduce using rule 232 (static_array_pair_list -> empty .)
    RPAREN          reduce using rule 232 (static_array_pair_list -> empty .)


state 407

    (233) static_array_pair_list -> static_non_empty_array_pair_list . possible_comma
    (234) static_non_empty_array_pair_list -> static_non_empty_array_pair_list . COMMA static_expr
    (236) static_non_empty_array_pair_list -> static_non_empty_array_pair_list . COMMA static_scalar DOUBLE_ARROW static_expr
    (120) possible_comma -> . empty
    (121) possible_comma -> . COMMA
    (275) empty -> .

    COMMA           shift and go to state 476
    RBRACKET        reduce using rule 275 (empty -> .)
    RPAREN          reduce using rule 275 (empty -> .)

    possible_comma                 shift and go to state 475
    empty                          shift and go to state 293

state 408

    (235) static_non_empty_array_pair_list -> static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    COMMA           reduce using rule 235 (static_non_empty_array_pair_list -> static_expr .)
    RBRACKET        reduce using rule 235 (static_non_empty_array_pair_list -> static_expr .)
    RPAREN          reduce using rule 235 (static_non_empty_array_pair_list -> static_expr .)
    BOOLEAN_AND     shift and go to state 375
    BOOLEAN_OR      shift and go to state 376
    LOGICAL_AND     shift and go to state 377
    LOGICAL_OR      shift and go to state 378
    LOGICAL_XOR     shift and go to state 379
    AND             shift and go to state 380
    OR              shift and go to state 381
    XOR             shift and go to state 382
    CONCAT          shift and go to state 383
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    SL              shift and go to state 388
    SR              shift and go to state 389
    MOD             shift and go to state 390
    IS_IDENTICAL    shift and go to state 391
    IS_NOT_IDENTICAL shift and go to state 392
    IS_EQUAL_TO     shift and go to state 393
    IS_NOT_EQUAL    shift and go to state 394
    LESS_THAN       shift and go to state 395
    LESS_THAN_OR_EQUAL shift and go to state 396
    GREATER_THAN    shift and go to state 397
    GRATER_THAN_OR_EQUAL shift and go to state 398


state 409

    (237) static_non_empty_array_pair_list -> static_scalar . DOUBLE_ARROW static_expr
    (238) static_expr -> static_scalar .

    DOUBLE_ARROW    shift and go to state 477
    BOOLEAN_AND     reduce using rule 238 (static_expr -> static_scalar .)
    BOOLEAN_OR      reduce using rule 238 (static_expr -> static_scalar .)
    LOGICAL_AND     reduce using rule 238 (static_expr -> static_scalar .)
    LOGICAL_OR      reduce using rule 238 (static_expr -> static_scalar .)
    LOGICAL_XOR     reduce using rule 238 (static_expr -> static_scalar .)
    AND             reduce using rule 238 (static_expr -> static_scalar .)
    OR              reduce using rule 238 (static_expr -> static_scalar .)
    XOR             reduce using rule 238 (static_expr -> static_scalar .)
    CONCAT          reduce using rule 238 (static_expr -> static_scalar .)
    PLUS            reduce using rule 238 (static_expr -> static_scalar .)
    MINUS           reduce using rule 238 (static_expr -> static_scalar .)
    MUL             reduce using rule 238 (static_expr -> static_scalar .)
    DIV             reduce using rule 238 (static_expr -> static_scalar .)
    SL              reduce using rule 238 (static_expr -> static_scalar .)
    SR              reduce using rule 238 (static_expr -> static_scalar .)
    MOD             reduce using rule 238 (static_expr -> static_scalar .)
    IS_IDENTICAL    reduce using rule 238 (static_expr -> static_scalar .)
    IS_NOT_IDENTICAL reduce using rule 238 (static_expr -> static_scalar .)
    IS_EQUAL_TO     reduce using rule 238 (static_expr -> static_scalar .)
    IS_NOT_EQUAL    reduce using rule 238 (static_expr -> static_scalar .)
    LESS_THAN       reduce using rule 238 (static_expr -> static_scalar .)
    LESS_THAN_OR_EQUAL reduce using rule 238 (static_expr -> static_scalar .)
    GREATER_THAN    reduce using rule 238 (static_expr -> static_scalar .)
    GRATER_THAN_OR_EQUAL reduce using rule 238 (static_expr -> static_scalar .)
    COMMA           reduce using rule 238 (static_expr -> static_scalar .)
    RBRACKET        reduce using rule 238 (static_expr -> static_scalar .)
    RPAREN          reduce using rule 238 (static_expr -> static_scalar .)


state 410

    (224) static_heredoc -> START_HEREDOC multiple_encapsed . END_HEREDOC
    (225) multiple_encapsed -> multiple_encapsed . ENCAPSED_AND_WHITESPACE

    END_HEREDOC     shift and go to state 478
    ENCAPSED_AND_WHITESPACE shift and go to state 479


state 411

    (226) multiple_encapsed -> empty .

    END_HEREDOC     reduce using rule 226 (multiple_encapsed -> empty .)
    ENCAPSED_AND_WHITESPACE reduce using rule 226 (multiple_encapsed -> empty .)


state 412

    (16) inner_statement -> YIELD expr SEMI_COLON .

    RBRACE          reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    YIELD           reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    LBRACE          reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    IF              reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    WHILE           reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    DO              reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    FOR             reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    SWITCH          reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    BREAK           reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    CONTINUE        reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    RETURN          reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    GLOBAL          reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    STATIC          reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    ECHO            reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    INLINE_HTML     reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    UNSET           reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    SEMI_COLON      reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    FUNCTION        reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    CLONE           reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    LIST            reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    ARRAY           reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    LBRACKET        reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    PLUS            reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    MINUS           reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    NOT             reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    INC             reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    DEC             reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    INT_CAST        reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    ARRAY_CAST      reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    STRING_CAST     reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    BOOL_CAST       reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    UNSET_CAST      reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    BINARY_CAST     reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    ISSET           reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    EMPTY           reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    EVAL            reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    INCLUDE         reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    REQUIRE         reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    PRINT           reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    AT              reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    LPAREN          reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    IDENTIFIER      reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    EXIT            reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    DIE             reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    INT_NUMBER      reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    FUNC_C          reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    METHOD_C        reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    LINE            reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    FILE            reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    DIR             reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    START_HEREDOC   reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    START_NOWDOC    reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    VARIABLE        reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    DOLLAR          reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    ELSEIF          reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    ELSE            reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    ENDIF           reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    ENDWHILE        reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    ENDSWITCH       reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    ENDFOR          reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    CASE            reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    DEFAULT         reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)


state 413

    (18) statement -> IF LPAREN expr RPAREN statement . elseif_list
    (19) statement -> IF LPAREN expr RPAREN statement . elseif_list ELSE statement
    (38) elseif_list -> . empty
    (39) elseif_list -> . elseif_list ELSEIF LPAREN expr RPAREN statement
    (275) empty -> .

    ELSE            reduce using rule 275 (empty -> .)
    ELSEIF          reduce using rule 275 (empty -> .)
    HALT_COMPILER   reduce using rule 275 (empty -> .)
    CONST           reduce using rule 275 (empty -> .)
    LBRACE          reduce using rule 275 (empty -> .)
    IF              reduce using rule 275 (empty -> .)
    WHILE           reduce using rule 275 (empty -> .)
    DO              reduce using rule 275 (empty -> .)
    FOR             reduce using rule 275 (empty -> .)
    SWITCH          reduce using rule 275 (empty -> .)
    BREAK           reduce using rule 275 (empty -> .)
    CONTINUE        reduce using rule 275 (empty -> .)
    RETURN          reduce using rule 275 (empty -> .)
    GLOBAL          reduce using rule 275 (empty -> .)
    STATIC          reduce using rule 275 (empty -> .)
    ECHO            reduce using rule 275 (empty -> .)
    INLINE_HTML     reduce using rule 275 (empty -> .)
    UNSET           reduce using rule 275 (empty -> .)
    SEMI_COLON      reduce using rule 275 (empty -> .)
    FUNCTION        reduce using rule 275 (empty -> .)
    CLONE           reduce using rule 275 (empty -> .)
    LIST            reduce using rule 275 (empty -> .)
    ARRAY           reduce using rule 275 (empty -> .)
    LBRACKET        reduce using rule 275 (empty -> .)
    PLUS            reduce using rule 275 (empty -> .)
    MINUS           reduce using rule 275 (empty -> .)
    NOT             reduce using rule 275 (empty -> .)
    BOOLEAN_NOT     reduce using rule 275 (empty -> .)
    INC             reduce using rule 275 (empty -> .)
    DEC             reduce using rule 275 (empty -> .)
    INT_CAST        reduce using rule 275 (empty -> .)
    ARRAY_CAST      reduce using rule 275 (empty -> .)
    STRING_CAST     reduce using rule 275 (empty -> .)
    DOUBLE_CAST     reduce using rule 275 (empty -> .)
    BOOL_CAST       reduce using rule 275 (empty -> .)
    UNSET_CAST      reduce using rule 275 (empty -> .)
    BINARY_CAST     reduce using rule 275 (empty -> .)
    ISSET           reduce using rule 275 (empty -> .)
    EMPTY           reduce using rule 275 (empty -> .)
    EVAL            reduce using rule 275 (empty -> .)
    INCLUDE         reduce using rule 275 (empty -> .)
    INCLUDE_ONCE    reduce using rule 275 (empty -> .)
    REQUIRE         reduce using rule 275 (empty -> .)
    REQUIRE_ONCE    reduce using rule 275 (empty -> .)
    PRINT           reduce using rule 275 (empty -> .)
    AT              reduce using rule 275 (empty -> .)
    LPAREN          reduce using rule 275 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 275 (empty -> .)
    IDENTIFIER      reduce using rule 275 (empty -> .)
    EXIT            reduce using rule 275 (empty -> .)
    DIE             reduce using rule 275 (empty -> .)
    INT_NUMBER      reduce using rule 275 (empty -> .)
    FLOAT_NUMBER    reduce using rule 275 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 275 (empty -> .)
    FUNC_C          reduce using rule 275 (empty -> .)
    METHOD_C        reduce using rule 275 (empty -> .)
    LINE            reduce using rule 275 (empty -> .)
    FILE            reduce using rule 275 (empty -> .)
    DIR             reduce using rule 275 (empty -> .)
    START_HEREDOC   reduce using rule 275 (empty -> .)
    START_NOWDOC    reduce using rule 275 (empty -> .)
    VARIABLE        reduce using rule 275 (empty -> .)
    DOLLAR          reduce using rule 275 (empty -> .)
    $end            reduce using rule 275 (empty -> .)
    RBRACE          reduce using rule 275 (empty -> .)
    YIELD           reduce using rule 275 (empty -> .)
    ENDIF           reduce using rule 275 (empty -> .)
    ENDWHILE        reduce using rule 275 (empty -> .)
    ENDSWITCH       reduce using rule 275 (empty -> .)
    ENDFOR          reduce using rule 275 (empty -> .)
    CASE            reduce using rule 275 (empty -> .)
    DEFAULT         reduce using rule 275 (empty -> .)

    elseif_list                    shift and go to state 480
    empty                          shift and go to state 481

state 414

    (20) statement -> IF LPAREN expr RPAREN COLON . inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (11) inner_statement_list -> . inner_statement_list inner_statement
    (12) inner_statement_list -> . empty
    (275) empty -> .

    YIELD           reduce using rule 275 (empty -> .)
    LBRACE          reduce using rule 275 (empty -> .)
    IF              reduce using rule 275 (empty -> .)
    WHILE           reduce using rule 275 (empty -> .)
    DO              reduce using rule 275 (empty -> .)
    FOR             reduce using rule 275 (empty -> .)
    SWITCH          reduce using rule 275 (empty -> .)
    BREAK           reduce using rule 275 (empty -> .)
    CONTINUE        reduce using rule 275 (empty -> .)
    RETURN          reduce using rule 275 (empty -> .)
    GLOBAL          reduce using rule 275 (empty -> .)
    STATIC          reduce using rule 275 (empty -> .)
    ECHO            reduce using rule 275 (empty -> .)
    INLINE_HTML     reduce using rule 275 (empty -> .)
    UNSET           reduce using rule 275 (empty -> .)
    SEMI_COLON      reduce using rule 275 (empty -> .)
    FUNCTION        reduce using rule 275 (empty -> .)
    CLONE           reduce using rule 275 (empty -> .)
    LIST            reduce using rule 275 (empty -> .)
    ARRAY           reduce using rule 275 (empty -> .)
    LBRACKET        reduce using rule 275 (empty -> .)
    PLUS            reduce using rule 275 (empty -> .)
    MINUS           reduce using rule 275 (empty -> .)
    NOT             reduce using rule 275 (empty -> .)
    BOOLEAN_NOT     reduce using rule 275 (empty -> .)
    INC             reduce using rule 275 (empty -> .)
    DEC             reduce using rule 275 (empty -> .)
    INT_CAST        reduce using rule 275 (empty -> .)
    ARRAY_CAST      reduce using rule 275 (empty -> .)
    STRING_CAST     reduce using rule 275 (empty -> .)
    DOUBLE_CAST     reduce using rule 275 (empty -> .)
    BOOL_CAST       reduce using rule 275 (empty -> .)
    UNSET_CAST      reduce using rule 275 (empty -> .)
    BINARY_CAST     reduce using rule 275 (empty -> .)
    ISSET           reduce using rule 275 (empty -> .)
    EMPTY           reduce using rule 275 (empty -> .)
    EVAL            reduce using rule 275 (empty -> .)
    INCLUDE         reduce using rule 275 (empty -> .)
    INCLUDE_ONCE    reduce using rule 275 (empty -> .)
    REQUIRE         reduce using rule 275 (empty -> .)
    REQUIRE_ONCE    reduce using rule 275 (empty -> .)
    PRINT           reduce using rule 275 (empty -> .)
    AT              reduce using rule 275 (empty -> .)
    LPAREN          reduce using rule 275 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 275 (empty -> .)
    IDENTIFIER      reduce using rule 275 (empty -> .)
    EXIT            reduce using rule 275 (empty -> .)
    DIE             reduce using rule 275 (empty -> .)
    INT_NUMBER      reduce using rule 275 (empty -> .)
    FLOAT_NUMBER    reduce using rule 275 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 275 (empty -> .)
    FUNC_C          reduce using rule 275 (empty -> .)
    METHOD_C        reduce using rule 275 (empty -> .)
    LINE            reduce using rule 275 (empty -> .)
    FILE            reduce using rule 275 (empty -> .)
    DIR             reduce using rule 275 (empty -> .)
    START_HEREDOC   reduce using rule 275 (empty -> .)
    START_NOWDOC    reduce using rule 275 (empty -> .)
    VARIABLE        reduce using rule 275 (empty -> .)
    DOLLAR          reduce using rule 275 (empty -> .)
    ELSEIF          reduce using rule 275 (empty -> .)
    ELSE            reduce using rule 275 (empty -> .)
    ENDIF           reduce using rule 275 (empty -> .)

    inner_statement_list           shift and go to state 482
    empty                          shift and go to state 87

state 415

    (170) expr -> expr QUESTION expr COLON expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 170 (expr -> expr QUESTION expr COLON expr .)
    LBRACE          reduce using rule 170 (expr -> expr QUESTION expr COLON expr .)
    LOGICAL_AND     reduce using rule 170 (expr -> expr QUESTION expr COLON expr .)
    LOGICAL_OR      reduce using rule 170 (expr -> expr QUESTION expr COLON expr .)
    LOGICAL_XOR     reduce using rule 170 (expr -> expr QUESTION expr COLON expr .)
    QUESTION        reduce using rule 170 (expr -> expr QUESTION expr COLON expr .)
    RPAREN          reduce using rule 170 (expr -> expr QUESTION expr COLON expr .)
    COMMA           reduce using rule 170 (expr -> expr QUESTION expr COLON expr .)
    DOUBLE_ARROW    reduce using rule 170 (expr -> expr QUESTION expr COLON expr .)
    RBRACE          reduce using rule 170 (expr -> expr QUESTION expr COLON expr .)
    COLON           reduce using rule 170 (expr -> expr QUESTION expr COLON expr .)
    RBRACKET        reduce using rule 170 (expr -> expr QUESTION expr COLON expr .)
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116

  ! BOOLEAN_AND     [ reduce using rule 170 (expr -> expr QUESTION expr COLON expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 170 (expr -> expr QUESTION expr COLON expr .) ]
  ! AND             [ reduce using rule 170 (expr -> expr QUESTION expr COLON expr .) ]
  ! OR              [ reduce using rule 170 (expr -> expr QUESTION expr COLON expr .) ]
  ! XOR             [ reduce using rule 170 (expr -> expr QUESTION expr COLON expr .) ]
  ! CONCAT          [ reduce using rule 170 (expr -> expr QUESTION expr COLON expr .) ]
  ! PLUS            [ reduce using rule 170 (expr -> expr QUESTION expr COLON expr .) ]
  ! MINUS           [ reduce using rule 170 (expr -> expr QUESTION expr COLON expr .) ]
  ! MUL             [ reduce using rule 170 (expr -> expr QUESTION expr COLON expr .) ]
  ! DIV             [ reduce using rule 170 (expr -> expr QUESTION expr COLON expr .) ]
  ! SL              [ reduce using rule 170 (expr -> expr QUESTION expr COLON expr .) ]
  ! SR              [ reduce using rule 170 (expr -> expr QUESTION expr COLON expr .) ]
  ! MOD             [ reduce using rule 170 (expr -> expr QUESTION expr COLON expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 170 (expr -> expr QUESTION expr COLON expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 170 (expr -> expr QUESTION expr COLON expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 170 (expr -> expr QUESTION expr COLON expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 170 (expr -> expr QUESTION expr COLON expr .) ]
  ! LESS_THAN       [ reduce using rule 170 (expr -> expr QUESTION expr COLON expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 170 (expr -> expr QUESTION expr COLON expr .) ]
  ! GREATER_THAN    [ reduce using rule 170 (expr -> expr QUESTION expr COLON expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 170 (expr -> expr QUESTION expr COLON expr .) ]
  ! INSTANCEOF      [ reduce using rule 170 (expr -> expr QUESTION expr COLON expr .) ]
  ! SPACESHIP       [ reduce using rule 170 (expr -> expr QUESTION expr COLON expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]
  ! QUESTION        [ shift and go to state 117 ]


state 416

    (21) statement -> WHILE LPAREN expr RPAREN while_statement .

    HALT_COMPILER   reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    CONST           reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    LBRACE          reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    IF              reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    WHILE           reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    DO              reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    FOR             reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    SWITCH          reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    BREAK           reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    CONTINUE        reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    RETURN          reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    GLOBAL          reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    STATIC          reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    ECHO            reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    INLINE_HTML     reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    UNSET           reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    SEMI_COLON      reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    FUNCTION        reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    CLONE           reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    LIST            reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    ARRAY           reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    LBRACKET        reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    PLUS            reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    MINUS           reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    NOT             reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    BOOLEAN_NOT     reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    INC             reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    DEC             reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    INT_CAST        reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    ARRAY_CAST      reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    STRING_CAST     reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    DOUBLE_CAST     reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    BOOL_CAST       reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    UNSET_CAST      reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    BINARY_CAST     reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    ISSET           reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    EMPTY           reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    EVAL            reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    INCLUDE         reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    INCLUDE_ONCE    reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    REQUIRE         reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    REQUIRE_ONCE    reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    PRINT           reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    AT              reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    LPAREN          reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    DOUBLE_QUOTE    reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    IDENTIFIER      reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    EXIT            reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    DIE             reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    INT_NUMBER      reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    FLOAT_NUMBER    reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    FUNC_C          reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    METHOD_C        reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    LINE            reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    FILE            reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    DIR             reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    START_HEREDOC   reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    START_NOWDOC    reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    VARIABLE        reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    DOLLAR          reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    $end            reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    RBRACE          reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    YIELD           reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    ELSE            reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    ELSEIF          reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    ENDIF           reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    ENDWHILE        reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    ENDSWITCH       reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    ENDFOR          reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    CASE            reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    DEFAULT         reduce using rule 21 (statement -> WHILE LPAREN expr RPAREN while_statement .)


state 417

    (44) while_statement -> statement .

    ELSE            reduce using rule 44 (while_statement -> statement .)
    ELSEIF          reduce using rule 44 (while_statement -> statement .)
    HALT_COMPILER   reduce using rule 44 (while_statement -> statement .)
    CONST           reduce using rule 44 (while_statement -> statement .)
    LBRACE          reduce using rule 44 (while_statement -> statement .)
    IF              reduce using rule 44 (while_statement -> statement .)
    WHILE           reduce using rule 44 (while_statement -> statement .)
    DO              reduce using rule 44 (while_statement -> statement .)
    FOR             reduce using rule 44 (while_statement -> statement .)
    SWITCH          reduce using rule 44 (while_statement -> statement .)
    BREAK           reduce using rule 44 (while_statement -> statement .)
    CONTINUE        reduce using rule 44 (while_statement -> statement .)
    RETURN          reduce using rule 44 (while_statement -> statement .)
    GLOBAL          reduce using rule 44 (while_statement -> statement .)
    STATIC          reduce using rule 44 (while_statement -> statement .)
    ECHO            reduce using rule 44 (while_statement -> statement .)
    INLINE_HTML     reduce using rule 44 (while_statement -> statement .)
    UNSET           reduce using rule 44 (while_statement -> statement .)
    SEMI_COLON      reduce using rule 44 (while_statement -> statement .)
    FUNCTION        reduce using rule 44 (while_statement -> statement .)
    CLONE           reduce using rule 44 (while_statement -> statement .)
    LIST            reduce using rule 44 (while_statement -> statement .)
    ARRAY           reduce using rule 44 (while_statement -> statement .)
    LBRACKET        reduce using rule 44 (while_statement -> statement .)
    PLUS            reduce using rule 44 (while_statement -> statement .)
    MINUS           reduce using rule 44 (while_statement -> statement .)
    NOT             reduce using rule 44 (while_statement -> statement .)
    BOOLEAN_NOT     reduce using rule 44 (while_statement -> statement .)
    INC             reduce using rule 44 (while_statement -> statement .)
    DEC             reduce using rule 44 (while_statement -> statement .)
    INT_CAST        reduce using rule 44 (while_statement -> statement .)
    ARRAY_CAST      reduce using rule 44 (while_statement -> statement .)
    STRING_CAST     reduce using rule 44 (while_statement -> statement .)
    DOUBLE_CAST     reduce using rule 44 (while_statement -> statement .)
    BOOL_CAST       reduce using rule 44 (while_statement -> statement .)
    UNSET_CAST      reduce using rule 44 (while_statement -> statement .)
    BINARY_CAST     reduce using rule 44 (while_statement -> statement .)
    ISSET           reduce using rule 44 (while_statement -> statement .)
    EMPTY           reduce using rule 44 (while_statement -> statement .)
    EVAL            reduce using rule 44 (while_statement -> statement .)
    INCLUDE         reduce using rule 44 (while_statement -> statement .)
    INCLUDE_ONCE    reduce using rule 44 (while_statement -> statement .)
    REQUIRE         reduce using rule 44 (while_statement -> statement .)
    REQUIRE_ONCE    reduce using rule 44 (while_statement -> statement .)
    PRINT           reduce using rule 44 (while_statement -> statement .)
    AT              reduce using rule 44 (while_statement -> statement .)
    LPAREN          reduce using rule 44 (while_statement -> statement .)
    DOUBLE_QUOTE    reduce using rule 44 (while_statement -> statement .)
    IDENTIFIER      reduce using rule 44 (while_statement -> statement .)
    EXIT            reduce using rule 44 (while_statement -> statement .)
    DIE             reduce using rule 44 (while_statement -> statement .)
    INT_NUMBER      reduce using rule 44 (while_statement -> statement .)
    FLOAT_NUMBER    reduce using rule 44 (while_statement -> statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 44 (while_statement -> statement .)
    FUNC_C          reduce using rule 44 (while_statement -> statement .)
    METHOD_C        reduce using rule 44 (while_statement -> statement .)
    LINE            reduce using rule 44 (while_statement -> statement .)
    FILE            reduce using rule 44 (while_statement -> statement .)
    DIR             reduce using rule 44 (while_statement -> statement .)
    START_HEREDOC   reduce using rule 44 (while_statement -> statement .)
    START_NOWDOC    reduce using rule 44 (while_statement -> statement .)
    VARIABLE        reduce using rule 44 (while_statement -> statement .)
    DOLLAR          reduce using rule 44 (while_statement -> statement .)
    $end            reduce using rule 44 (while_statement -> statement .)
    RBRACE          reduce using rule 44 (while_statement -> statement .)
    YIELD           reduce using rule 44 (while_statement -> statement .)
    ENDIF           reduce using rule 44 (while_statement -> statement .)
    ENDWHILE        reduce using rule 44 (while_statement -> statement .)
    ENDSWITCH       reduce using rule 44 (while_statement -> statement .)
    ENDFOR          reduce using rule 44 (while_statement -> statement .)
    CASE            reduce using rule 44 (while_statement -> statement .)
    DEFAULT         reduce using rule 44 (while_statement -> statement .)


state 418

    (45) while_statement -> COLON . inner_statement_list ENDWHILE SEMI_COLON
    (11) inner_statement_list -> . inner_statement_list inner_statement
    (12) inner_statement_list -> . empty
    (275) empty -> .

    ENDWHILE        reduce using rule 275 (empty -> .)
    YIELD           reduce using rule 275 (empty -> .)
    LBRACE          reduce using rule 275 (empty -> .)
    IF              reduce using rule 275 (empty -> .)
    WHILE           reduce using rule 275 (empty -> .)
    DO              reduce using rule 275 (empty -> .)
    FOR             reduce using rule 275 (empty -> .)
    SWITCH          reduce using rule 275 (empty -> .)
    BREAK           reduce using rule 275 (empty -> .)
    CONTINUE        reduce using rule 275 (empty -> .)
    RETURN          reduce using rule 275 (empty -> .)
    GLOBAL          reduce using rule 275 (empty -> .)
    STATIC          reduce using rule 275 (empty -> .)
    ECHO            reduce using rule 275 (empty -> .)
    INLINE_HTML     reduce using rule 275 (empty -> .)
    UNSET           reduce using rule 275 (empty -> .)
    SEMI_COLON      reduce using rule 275 (empty -> .)
    FUNCTION        reduce using rule 275 (empty -> .)
    CLONE           reduce using rule 275 (empty -> .)
    LIST            reduce using rule 275 (empty -> .)
    ARRAY           reduce using rule 275 (empty -> .)
    LBRACKET        reduce using rule 275 (empty -> .)
    PLUS            reduce using rule 275 (empty -> .)
    MINUS           reduce using rule 275 (empty -> .)
    NOT             reduce using rule 275 (empty -> .)
    BOOLEAN_NOT     reduce using rule 275 (empty -> .)
    INC             reduce using rule 275 (empty -> .)
    DEC             reduce using rule 275 (empty -> .)
    INT_CAST        reduce using rule 275 (empty -> .)
    ARRAY_CAST      reduce using rule 275 (empty -> .)
    STRING_CAST     reduce using rule 275 (empty -> .)
    DOUBLE_CAST     reduce using rule 275 (empty -> .)
    BOOL_CAST       reduce using rule 275 (empty -> .)
    UNSET_CAST      reduce using rule 275 (empty -> .)
    BINARY_CAST     reduce using rule 275 (empty -> .)
    ISSET           reduce using rule 275 (empty -> .)
    EMPTY           reduce using rule 275 (empty -> .)
    EVAL            reduce using rule 275 (empty -> .)
    INCLUDE         reduce using rule 275 (empty -> .)
    INCLUDE_ONCE    reduce using rule 275 (empty -> .)
    REQUIRE         reduce using rule 275 (empty -> .)
    REQUIRE_ONCE    reduce using rule 275 (empty -> .)
    PRINT           reduce using rule 275 (empty -> .)
    AT              reduce using rule 275 (empty -> .)
    LPAREN          reduce using rule 275 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 275 (empty -> .)
    IDENTIFIER      reduce using rule 275 (empty -> .)
    EXIT            reduce using rule 275 (empty -> .)
    DIE             reduce using rule 275 (empty -> .)
    INT_NUMBER      reduce using rule 275 (empty -> .)
    FLOAT_NUMBER    reduce using rule 275 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 275 (empty -> .)
    FUNC_C          reduce using rule 275 (empty -> .)
    METHOD_C        reduce using rule 275 (empty -> .)
    LINE            reduce using rule 275 (empty -> .)
    FILE            reduce using rule 275 (empty -> .)
    DIR             reduce using rule 275 (empty -> .)
    START_HEREDOC   reduce using rule 275 (empty -> .)
    START_NOWDOC    reduce using rule 275 (empty -> .)
    VARIABLE        reduce using rule 275 (empty -> .)
    DOLLAR          reduce using rule 275 (empty -> .)

    inner_statement_list           shift and go to state 483
    empty                          shift and go to state 87

state 419

    (22) statement -> DO statement WHILE LPAREN expr . RPAREN SEMI_COLON
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    RPAREN          shift and go to state 484
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 420

    (23) statement -> FOR LPAREN for_expr SEMI_COLON for_expr . SEMI_COLON for_expr RPAREN for_statement

    SEMI_COLON      shift and go to state 485


state 421

    (48) non_empty_for_expr -> non_empty_for_expr COMMA expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    COMMA           reduce using rule 48 (non_empty_for_expr -> non_empty_for_expr COMMA expr .)
    SEMI_COLON      reduce using rule 48 (non_empty_for_expr -> non_empty_for_expr COMMA expr .)
    RPAREN          reduce using rule 48 (non_empty_for_expr -> non_empty_for_expr COMMA expr .)
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 422

    (24) statement -> SWITCH LPAREN expr RPAREN switch_case_list .

    HALT_COMPILER   reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    CONST           reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    LBRACE          reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    IF              reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    WHILE           reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    DO              reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    FOR             reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    SWITCH          reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    BREAK           reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    CONTINUE        reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    RETURN          reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    GLOBAL          reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    STATIC          reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    ECHO            reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    INLINE_HTML     reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    UNSET           reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    SEMI_COLON      reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    FUNCTION        reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    CLONE           reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    LIST            reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    ARRAY           reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    LBRACKET        reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    PLUS            reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    MINUS           reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    NOT             reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    BOOLEAN_NOT     reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    INC             reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    DEC             reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    INT_CAST        reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    ARRAY_CAST      reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    STRING_CAST     reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    DOUBLE_CAST     reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    BOOL_CAST       reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    UNSET_CAST      reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    BINARY_CAST     reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    ISSET           reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    EMPTY           reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    EVAL            reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    INCLUDE         reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    INCLUDE_ONCE    reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    REQUIRE         reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    REQUIRE_ONCE    reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    PRINT           reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    AT              reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    LPAREN          reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    DOUBLE_QUOTE    reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    IDENTIFIER      reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    EXIT            reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    DIE             reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    INT_NUMBER      reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    FLOAT_NUMBER    reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    CONSTANT_ENCAPSED_STRING reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    FUNC_C          reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    METHOD_C        reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    LINE            reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    FILE            reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    DIR             reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    START_HEREDOC   reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    START_NOWDOC    reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    VARIABLE        reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    DOLLAR          reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    $end            reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    RBRACE          reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    YIELD           reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    ELSE            reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    ELSEIF          reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    ENDIF           reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    ENDWHILE        reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    ENDSWITCH       reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    ENDFOR          reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    CASE            reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    DEFAULT         reduce using rule 24 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)


state 423

    (52) switch_case_list -> LBRACE . case_list RBRACE
    (53) switch_case_list -> LBRACE . SEMI_COLON case_list RBRACE
    (56) case_list -> . empty
    (57) case_list -> . case_list_no_default CASE expr case_separator inner_statement_list
    (58) case_list -> . case_list_no_default DEFAULT case_separator inner_statement_list
    (275) empty -> .
    (59) case_list_no_default -> . empty
    (60) case_list_no_default -> . case_list_no_default CASE expr case_separator inner_statement_list

    SEMI_COLON      shift and go to state 487
    RBRACE          reduce using rule 275 (empty -> .)
    CASE            reduce using rule 275 (empty -> .)
    DEFAULT         reduce using rule 275 (empty -> .)

    case_list                      shift and go to state 486
    empty                          shift and go to state 488
    case_list_no_default           shift and go to state 489

state 424

    (54) switch_case_list -> COLON . case_list ENDSWITCH SEMI_COLON
    (55) switch_case_list -> COLON . SEMI_COLON case_list ENDSWITCH SEMI_COLON
    (56) case_list -> . empty
    (57) case_list -> . case_list_no_default CASE expr case_separator inner_statement_list
    (58) case_list -> . case_list_no_default DEFAULT case_separator inner_statement_list
    (275) empty -> .
    (59) case_list_no_default -> . empty
    (60) case_list_no_default -> . case_list_no_default CASE expr case_separator inner_statement_list

    SEMI_COLON      shift and go to state 491
    ENDSWITCH       reduce using rule 275 (empty -> .)
    CASE            reduce using rule 275 (empty -> .)
    DEFAULT         reduce using rule 275 (empty -> .)

    case_list                      shift and go to state 490
    empty                          shift and go to state 488
    case_list_no_default           shift and go to state 489

state 425

    (67) global_var -> DOLLAR LBRACE expr RBRACE .

    SEMI_COLON      reduce using rule 67 (global_var -> DOLLAR LBRACE expr RBRACE .)
    COMMA           reduce using rule 67 (global_var -> DOLLAR LBRACE expr RBRACE .)


state 426

    (36) statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .

    HALT_COMPILER   reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    CONST           reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    LBRACE          reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    IF              reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    WHILE           reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    DO              reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    FOR             reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    SWITCH          reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    BREAK           reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    CONTINUE        reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    RETURN          reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    GLOBAL          reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    STATIC          reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    ECHO            reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    INLINE_HTML     reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    UNSET           reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    SEMI_COLON      reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    FUNCTION        reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    CLONE           reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    LIST            reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    ARRAY           reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    LBRACKET        reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    PLUS            reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    MINUS           reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    NOT             reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    INC             reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    DEC             reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    INT_CAST        reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    ARRAY_CAST      reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    STRING_CAST     reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    BOOL_CAST       reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    UNSET_CAST      reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    BINARY_CAST     reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    ISSET           reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    EMPTY           reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    EVAL            reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    INCLUDE         reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    REQUIRE         reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    PRINT           reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    AT              reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    LPAREN          reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    IDENTIFIER      reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    EXIT            reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    DIE             reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    INT_NUMBER      reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    FUNC_C          reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    METHOD_C        reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    LINE            reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    FILE            reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    DIR             reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    START_HEREDOC   reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    START_NOWDOC    reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    VARIABLE        reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    DOLLAR          reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    $end            reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    RBRACE          reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    YIELD           reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    ELSE            reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    ELSEIF          reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    ENDIF           reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    ENDWHILE        reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    ENDSWITCH       reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    ENDFOR          reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    CASE            reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    DEFAULT         reduce using rule 36 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)


state 427

    (74) unset_variables -> unset_variables COMMA unset_variable .

    RPAREN          reduce using rule 74 (unset_variables -> unset_variables COMMA unset_variable .)
    COMMA           reduce using rule 74 (unset_variables -> unset_variables COMMA unset_variable .)


state 428

    (77) function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list . RPAREN LBRACE inner_statement_list RBRACE

    RPAREN          shift and go to state 492


state 429

    (127) expr -> FUNCTION is_reference LPAREN parameter_list RPAREN . LBRACE inner_statement_list RBRACE

    LBRACE          shift and go to state 493


state 430

    (82) non_empty_parameter_list -> non_empty_parameter_list COMMA . parameter
    (84) parameter -> . VARIABLE
    (85) parameter -> . AND VARIABLE
    (86) parameter -> . VARIABLE EQUALS static_scalar
    (87) parameter -> . AND VARIABLE EQUALS static_scalar

    VARIABLE        shift and go to state 350
    AND             shift and go to state 351

    parameter                      shift and go to state 494

state 431

    (86) parameter -> VARIABLE EQUALS . static_scalar
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_scalar                  shift and go to state 495
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 432

    (85) parameter -> AND VARIABLE .
    (87) parameter -> AND VARIABLE . EQUALS static_scalar

    COMMA           reduce using rule 85 (parameter -> AND VARIABLE .)
    RPAREN          reduce using rule 85 (parameter -> AND VARIABLE .)
    EQUALS          shift and go to state 496


state 433

    (122) function_call_parameter_list -> function_call_parameter_list COMMA function_call_parameter .

    RPAREN          reduce using rule 122 (function_call_parameter_list -> function_call_parameter_list COMMA function_call_parameter .)
    COMMA           reduce using rule 122 (function_call_parameter_list -> function_call_parameter_list COMMA function_call_parameter .)


state 434

    (97) assignment_list_element -> LIST LPAREN assignment_list . RPAREN
    (93) assignment_list -> assignment_list . COMMA assignment_list_element

    RPAREN          shift and go to state 497
    COMMA           shift and go to state 359


state 435

    (92) expr -> LIST LPAREN assignment_list RPAREN EQUALS . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 498
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 436

    (93) assignment_list -> assignment_list COMMA assignment_list_element .

    RPAREN          reduce using rule 93 (assignment_list -> assignment_list COMMA assignment_list_element .)
    COMMA           reduce using rule 93 (assignment_list -> assignment_list COMMA assignment_list_element .)


state 437

    (116) non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW . AND variable
    (117) non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    AND             shift and go to state 500
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 499
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 438

    (118) non_empty_array_pair_list -> expr DOUBLE_ARROW AND variable .

    COMMA           reduce using rule 118 (non_empty_array_pair_list -> expr DOUBLE_ARROW AND variable .)
    RBRACKET        reduce using rule 118 (non_empty_array_pair_list -> expr DOUBLE_ARROW AND variable .)
    RPAREN          reduce using rule 118 (non_empty_array_pair_list -> expr DOUBLE_ARROW AND variable .)


state 439

    (184) isset_variables -> isset_variables COMMA variable .

    RPAREN          reduce using rule 184 (isset_variables -> isset_variables COMMA variable .)
    COMMA           reduce using rule 184 (isset_variables -> isset_variables COMMA variable .)


state 440

    (274) encaps_var_offset -> VARIABLE .

    RBRACKET        reduce using rule 274 (encaps_var_offset -> VARIABLE .)


state 441

    (267) encaps_var -> VARIABLE LBRACKET encaps_var_offset . RBRACKET

    RBRACKET        shift and go to state 501


state 442

    (272) encaps_var_offset -> IDENTIFIER .

    RBRACKET        reduce using rule 272 (encaps_var_offset -> IDENTIFIER .)


state 443

    (273) encaps_var_offset -> NUM_STRING .

    RBRACKET        reduce using rule 273 (encaps_var_offset -> NUM_STRING .)


state 444

    (268) encaps_var -> DOLLAR_OPEN_CURLY_BRACES expr RBRACE .

    DOUBLE_QUOTE    reduce using rule 268 (encaps_var -> DOLLAR_OPEN_CURLY_BRACES expr RBRACE .)
    ENCAPSED_AND_WHITESPACE reduce using rule 268 (encaps_var -> DOLLAR_OPEN_CURLY_BRACES expr RBRACE .)
    VARIABLE        reduce using rule 268 (encaps_var -> DOLLAR_OPEN_CURLY_BRACES expr RBRACE .)
    DOLLAR_OPEN_CURLY_BRACES reduce using rule 268 (encaps_var -> DOLLAR_OPEN_CURLY_BRACES expr RBRACE .)
    CURLY_OPEN      reduce using rule 268 (encaps_var -> DOLLAR_OPEN_CURLY_BRACES expr RBRACE .)
    END_HEREDOC     reduce using rule 268 (encaps_var -> DOLLAR_OPEN_CURLY_BRACES expr RBRACE .)


state 445

    (270) encaps_var -> DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET . expr RBRACKET RBRACE
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 502
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 446

    (271) encaps_var -> CURLY_OPEN variable RBRACE .

    DOUBLE_QUOTE    reduce using rule 271 (encaps_var -> CURLY_OPEN variable RBRACE .)
    ENCAPSED_AND_WHITESPACE reduce using rule 271 (encaps_var -> CURLY_OPEN variable RBRACE .)
    VARIABLE        reduce using rule 271 (encaps_var -> CURLY_OPEN variable RBRACE .)
    DOLLAR_OPEN_CURLY_BRACES reduce using rule 271 (encaps_var -> CURLY_OPEN variable RBRACE .)
    CURLY_OPEN      reduce using rule 271 (encaps_var -> CURLY_OPEN variable RBRACE .)
    END_HEREDOC     reduce using rule 271 (encaps_var -> CURLY_OPEN variable RBRACE .)


state 447

    (239) static_expr -> static_expr BOOLEAN_AND static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .)
    BOOLEAN_OR      reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .)
    LOGICAL_AND     reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .)
    LOGICAL_OR      reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .)
    LOGICAL_XOR     reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .)
    SEMI_COLON      reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .)
    COMMA           reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .)
    RPAREN          reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .)
    RBRACKET        reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .)
    AND             shift and go to state 380
    OR              shift and go to state 381
    XOR             shift and go to state 382
    CONCAT          shift and go to state 383
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    SL              shift and go to state 388
    SR              shift and go to state 389
    MOD             shift and go to state 390
    IS_IDENTICAL    shift and go to state 391
    IS_NOT_IDENTICAL shift and go to state 392
    IS_EQUAL_TO     shift and go to state 393
    IS_NOT_EQUAL    shift and go to state 394
    LESS_THAN       shift and go to state 395
    LESS_THAN_OR_EQUAL shift and go to state 396
    GREATER_THAN    shift and go to state 397
    GRATER_THAN_OR_EQUAL shift and go to state 398

  ! AND             [ reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! OR              [ reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! XOR             [ reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! CONCAT          [ reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! PLUS            [ reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! MINUS           [ reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! MUL             [ reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! DIV             [ reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! SL              [ reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! SR              [ reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! MOD             [ reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! LESS_THAN       [ reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! GREATER_THAN    [ reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 239 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 375 ]
  ! BOOLEAN_OR      [ shift and go to state 376 ]
  ! LOGICAL_AND     [ shift and go to state 377 ]
  ! LOGICAL_OR      [ shift and go to state 378 ]
  ! LOGICAL_XOR     [ shift and go to state 379 ]


state 448

    (240) static_expr -> static_expr BOOLEAN_OR static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_OR      reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .)
    LOGICAL_AND     reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .)
    LOGICAL_OR      reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .)
    LOGICAL_XOR     reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .)
    SEMI_COLON      reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .)
    COMMA           reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .)
    RPAREN          reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .)
    RBRACKET        reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .)
    BOOLEAN_AND     shift and go to state 375
    AND             shift and go to state 380
    OR              shift and go to state 381
    XOR             shift and go to state 382
    CONCAT          shift and go to state 383
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    SL              shift and go to state 388
    SR              shift and go to state 389
    MOD             shift and go to state 390
    IS_IDENTICAL    shift and go to state 391
    IS_NOT_IDENTICAL shift and go to state 392
    IS_EQUAL_TO     shift and go to state 393
    IS_NOT_EQUAL    shift and go to state 394
    LESS_THAN       shift and go to state 395
    LESS_THAN_OR_EQUAL shift and go to state 396
    GREATER_THAN    shift and go to state 397
    GRATER_THAN_OR_EQUAL shift and go to state 398

  ! BOOLEAN_AND     [ reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! AND             [ reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! OR              [ reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! XOR             [ reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! CONCAT          [ reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! PLUS            [ reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! MINUS           [ reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! MUL             [ reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! DIV             [ reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! SL              [ reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! SR              [ reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! MOD             [ reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! LESS_THAN       [ reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! GREATER_THAN    [ reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 240 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! BOOLEAN_OR      [ shift and go to state 376 ]
  ! LOGICAL_AND     [ shift and go to state 377 ]
  ! LOGICAL_OR      [ shift and go to state 378 ]
  ! LOGICAL_XOR     [ shift and go to state 379 ]


state 449

    (241) static_expr -> static_expr LOGICAL_AND static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    LOGICAL_AND     reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .)
    LOGICAL_OR      reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .)
    LOGICAL_XOR     reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .)
    SEMI_COLON      reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .)
    COMMA           reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .)
    RPAREN          reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .)
    RBRACKET        reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .)
    BOOLEAN_AND     shift and go to state 375
    BOOLEAN_OR      shift and go to state 376
    AND             shift and go to state 380
    OR              shift and go to state 381
    XOR             shift and go to state 382
    CONCAT          shift and go to state 383
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    SL              shift and go to state 388
    SR              shift and go to state 389
    MOD             shift and go to state 390
    IS_IDENTICAL    shift and go to state 391
    IS_NOT_IDENTICAL shift and go to state 392
    IS_EQUAL_TO     shift and go to state 393
    IS_NOT_EQUAL    shift and go to state 394
    LESS_THAN       shift and go to state 395
    LESS_THAN_OR_EQUAL shift and go to state 396
    GREATER_THAN    shift and go to state 397
    GRATER_THAN_OR_EQUAL shift and go to state 398

  ! BOOLEAN_AND     [ reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! AND             [ reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! OR              [ reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! XOR             [ reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! CONCAT          [ reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! PLUS            [ reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! MINUS           [ reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! MUL             [ reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! DIV             [ reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! SL              [ reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! SR              [ reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! MOD             [ reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! LESS_THAN       [ reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! GREATER_THAN    [ reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 241 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! LOGICAL_AND     [ shift and go to state 377 ]
  ! LOGICAL_OR      [ shift and go to state 378 ]
  ! LOGICAL_XOR     [ shift and go to state 379 ]


state 450

    (242) static_expr -> static_expr LOGICAL_OR static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    LOGICAL_OR      reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .)
    SEMI_COLON      reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .)
    COMMA           reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .)
    RPAREN          reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .)
    RBRACKET        reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .)
    BOOLEAN_AND     shift and go to state 375
    BOOLEAN_OR      shift and go to state 376
    LOGICAL_AND     shift and go to state 377
    LOGICAL_XOR     shift and go to state 379
    AND             shift and go to state 380
    OR              shift and go to state 381
    XOR             shift and go to state 382
    CONCAT          shift and go to state 383
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    SL              shift and go to state 388
    SR              shift and go to state 389
    MOD             shift and go to state 390
    IS_IDENTICAL    shift and go to state 391
    IS_NOT_IDENTICAL shift and go to state 392
    IS_EQUAL_TO     shift and go to state 393
    IS_NOT_EQUAL    shift and go to state 394
    LESS_THAN       shift and go to state 395
    LESS_THAN_OR_EQUAL shift and go to state 396
    GREATER_THAN    shift and go to state 397
    GRATER_THAN_OR_EQUAL shift and go to state 398

  ! BOOLEAN_AND     [ reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! LOGICAL_AND     [ reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! LOGICAL_XOR     [ reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! AND             [ reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! OR              [ reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! XOR             [ reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! CONCAT          [ reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! PLUS            [ reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! MINUS           [ reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! MUL             [ reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! DIV             [ reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! SL              [ reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! SR              [ reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! MOD             [ reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! LESS_THAN       [ reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! GREATER_THAN    [ reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 242 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! LOGICAL_OR      [ shift and go to state 378 ]


state 451

    (243) static_expr -> static_expr LOGICAL_XOR static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    LOGICAL_OR      reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .)
    LOGICAL_XOR     reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .)
    SEMI_COLON      reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .)
    COMMA           reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .)
    RPAREN          reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .)
    RBRACKET        reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .)
    BOOLEAN_AND     shift and go to state 375
    BOOLEAN_OR      shift and go to state 376
    LOGICAL_AND     shift and go to state 377
    AND             shift and go to state 380
    OR              shift and go to state 381
    XOR             shift and go to state 382
    CONCAT          shift and go to state 383
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    SL              shift and go to state 388
    SR              shift and go to state 389
    MOD             shift and go to state 390
    IS_IDENTICAL    shift and go to state 391
    IS_NOT_IDENTICAL shift and go to state 392
    IS_EQUAL_TO     shift and go to state 393
    IS_NOT_EQUAL    shift and go to state 394
    LESS_THAN       shift and go to state 395
    LESS_THAN_OR_EQUAL shift and go to state 396
    GREATER_THAN    shift and go to state 397
    GRATER_THAN_OR_EQUAL shift and go to state 398

  ! BOOLEAN_AND     [ reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! LOGICAL_AND     [ reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! AND             [ reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! OR              [ reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! XOR             [ reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! CONCAT          [ reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! PLUS            [ reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! MINUS           [ reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! MUL             [ reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! DIV             [ reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! SL              [ reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! SR              [ reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! MOD             [ reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! LESS_THAN       [ reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! GREATER_THAN    [ reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 243 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! LOGICAL_OR      [ shift and go to state 378 ]
  ! LOGICAL_XOR     [ shift and go to state 379 ]


state 452

    (244) static_expr -> static_expr AND static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 244 (static_expr -> static_expr AND static_expr .)
    BOOLEAN_OR      reduce using rule 244 (static_expr -> static_expr AND static_expr .)
    LOGICAL_AND     reduce using rule 244 (static_expr -> static_expr AND static_expr .)
    LOGICAL_OR      reduce using rule 244 (static_expr -> static_expr AND static_expr .)
    LOGICAL_XOR     reduce using rule 244 (static_expr -> static_expr AND static_expr .)
    AND             reduce using rule 244 (static_expr -> static_expr AND static_expr .)
    OR              reduce using rule 244 (static_expr -> static_expr AND static_expr .)
    XOR             reduce using rule 244 (static_expr -> static_expr AND static_expr .)
    SEMI_COLON      reduce using rule 244 (static_expr -> static_expr AND static_expr .)
    COMMA           reduce using rule 244 (static_expr -> static_expr AND static_expr .)
    RPAREN          reduce using rule 244 (static_expr -> static_expr AND static_expr .)
    RBRACKET        reduce using rule 244 (static_expr -> static_expr AND static_expr .)
    CONCAT          shift and go to state 383
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    SL              shift and go to state 388
    SR              shift and go to state 389
    MOD             shift and go to state 390
    IS_IDENTICAL    shift and go to state 391
    IS_NOT_IDENTICAL shift and go to state 392
    IS_EQUAL_TO     shift and go to state 393
    IS_NOT_EQUAL    shift and go to state 394
    LESS_THAN       shift and go to state 395
    LESS_THAN_OR_EQUAL shift and go to state 396
    GREATER_THAN    shift and go to state 397
    GRATER_THAN_OR_EQUAL shift and go to state 398

  ! CONCAT          [ reduce using rule 244 (static_expr -> static_expr AND static_expr .) ]
  ! PLUS            [ reduce using rule 244 (static_expr -> static_expr AND static_expr .) ]
  ! MINUS           [ reduce using rule 244 (static_expr -> static_expr AND static_expr .) ]
  ! MUL             [ reduce using rule 244 (static_expr -> static_expr AND static_expr .) ]
  ! DIV             [ reduce using rule 244 (static_expr -> static_expr AND static_expr .) ]
  ! SL              [ reduce using rule 244 (static_expr -> static_expr AND static_expr .) ]
  ! SR              [ reduce using rule 244 (static_expr -> static_expr AND static_expr .) ]
  ! MOD             [ reduce using rule 244 (static_expr -> static_expr AND static_expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 244 (static_expr -> static_expr AND static_expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 244 (static_expr -> static_expr AND static_expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 244 (static_expr -> static_expr AND static_expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 244 (static_expr -> static_expr AND static_expr .) ]
  ! LESS_THAN       [ reduce using rule 244 (static_expr -> static_expr AND static_expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 244 (static_expr -> static_expr AND static_expr .) ]
  ! GREATER_THAN    [ reduce using rule 244 (static_expr -> static_expr AND static_expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 244 (static_expr -> static_expr AND static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 375 ]
  ! BOOLEAN_OR      [ shift and go to state 376 ]
  ! LOGICAL_AND     [ shift and go to state 377 ]
  ! LOGICAL_OR      [ shift and go to state 378 ]
  ! LOGICAL_XOR     [ shift and go to state 379 ]
  ! AND             [ shift and go to state 380 ]
  ! OR              [ shift and go to state 381 ]
  ! XOR             [ shift and go to state 382 ]


state 453

    (245) static_expr -> static_expr OR static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 245 (static_expr -> static_expr OR static_expr .)
    BOOLEAN_OR      reduce using rule 245 (static_expr -> static_expr OR static_expr .)
    LOGICAL_AND     reduce using rule 245 (static_expr -> static_expr OR static_expr .)
    LOGICAL_OR      reduce using rule 245 (static_expr -> static_expr OR static_expr .)
    LOGICAL_XOR     reduce using rule 245 (static_expr -> static_expr OR static_expr .)
    OR              reduce using rule 245 (static_expr -> static_expr OR static_expr .)
    SEMI_COLON      reduce using rule 245 (static_expr -> static_expr OR static_expr .)
    COMMA           reduce using rule 245 (static_expr -> static_expr OR static_expr .)
    RPAREN          reduce using rule 245 (static_expr -> static_expr OR static_expr .)
    RBRACKET        reduce using rule 245 (static_expr -> static_expr OR static_expr .)
    AND             shift and go to state 380
    XOR             shift and go to state 382
    CONCAT          shift and go to state 383
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    SL              shift and go to state 388
    SR              shift and go to state 389
    MOD             shift and go to state 390
    IS_IDENTICAL    shift and go to state 391
    IS_NOT_IDENTICAL shift and go to state 392
    IS_EQUAL_TO     shift and go to state 393
    IS_NOT_EQUAL    shift and go to state 394
    LESS_THAN       shift and go to state 395
    LESS_THAN_OR_EQUAL shift and go to state 396
    GREATER_THAN    shift and go to state 397
    GRATER_THAN_OR_EQUAL shift and go to state 398

  ! AND             [ reduce using rule 245 (static_expr -> static_expr OR static_expr .) ]
  ! XOR             [ reduce using rule 245 (static_expr -> static_expr OR static_expr .) ]
  ! CONCAT          [ reduce using rule 245 (static_expr -> static_expr OR static_expr .) ]
  ! PLUS            [ reduce using rule 245 (static_expr -> static_expr OR static_expr .) ]
  ! MINUS           [ reduce using rule 245 (static_expr -> static_expr OR static_expr .) ]
  ! MUL             [ reduce using rule 245 (static_expr -> static_expr OR static_expr .) ]
  ! DIV             [ reduce using rule 245 (static_expr -> static_expr OR static_expr .) ]
  ! SL              [ reduce using rule 245 (static_expr -> static_expr OR static_expr .) ]
  ! SR              [ reduce using rule 245 (static_expr -> static_expr OR static_expr .) ]
  ! MOD             [ reduce using rule 245 (static_expr -> static_expr OR static_expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 245 (static_expr -> static_expr OR static_expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 245 (static_expr -> static_expr OR static_expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 245 (static_expr -> static_expr OR static_expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 245 (static_expr -> static_expr OR static_expr .) ]
  ! LESS_THAN       [ reduce using rule 245 (static_expr -> static_expr OR static_expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 245 (static_expr -> static_expr OR static_expr .) ]
  ! GREATER_THAN    [ reduce using rule 245 (static_expr -> static_expr OR static_expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 245 (static_expr -> static_expr OR static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 375 ]
  ! BOOLEAN_OR      [ shift and go to state 376 ]
  ! LOGICAL_AND     [ shift and go to state 377 ]
  ! LOGICAL_OR      [ shift and go to state 378 ]
  ! LOGICAL_XOR     [ shift and go to state 379 ]
  ! OR              [ shift and go to state 381 ]


state 454

    (246) static_expr -> static_expr XOR static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 246 (static_expr -> static_expr XOR static_expr .)
    BOOLEAN_OR      reduce using rule 246 (static_expr -> static_expr XOR static_expr .)
    LOGICAL_AND     reduce using rule 246 (static_expr -> static_expr XOR static_expr .)
    LOGICAL_OR      reduce using rule 246 (static_expr -> static_expr XOR static_expr .)
    LOGICAL_XOR     reduce using rule 246 (static_expr -> static_expr XOR static_expr .)
    OR              reduce using rule 246 (static_expr -> static_expr XOR static_expr .)
    XOR             reduce using rule 246 (static_expr -> static_expr XOR static_expr .)
    SEMI_COLON      reduce using rule 246 (static_expr -> static_expr XOR static_expr .)
    COMMA           reduce using rule 246 (static_expr -> static_expr XOR static_expr .)
    RPAREN          reduce using rule 246 (static_expr -> static_expr XOR static_expr .)
    RBRACKET        reduce using rule 246 (static_expr -> static_expr XOR static_expr .)
    AND             shift and go to state 380
    CONCAT          shift and go to state 383
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    MUL             shift and go to state 386
    DIV             shift and go to state 387
Grammar

Rule 0     S' -> start
Rule 1     start -> top_statement_list
Rule 2     top_statement_list -> top_statement_list top_statement
Rule 3     top_statement_list -> empty
Rule 4     top_statement -> statement
Rule 5     top_statement -> function_declaration_statement
Rule 6     top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON
Rule 7     top_statement -> CONST constant_declarations SEMI_COLON
Rule 8     constant_declarations -> constant_declarations COMMA constant_declaration
Rule 9     constant_declarations -> constant_declaration
Rule 10    constant_declaration -> IDENTIFIER EQUALS static_expr
Rule 11    inner_statement_list -> inner_statement_list inner_statement
Rule 12    inner_statement_list -> empty
Rule 13    inner_statement -> statement
Rule 14    inner_statement -> function_declaration_statement
Rule 15    inner_statement -> YIELD SEMI_COLON
Rule 16    inner_statement -> YIELD expr SEMI_COLON
Rule 17    statement -> LBRACE inner_statement_list RBRACE
Rule 18    statement -> IF LPAREN expr RPAREN statement elseif_list
Rule 19    statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement    SL              shift and go to state 388
    SR              shift and go to state 389
    MOD             shift and go to state 390
    IS_IDENTICAL    shift and go to state 391
    IS_NOT_IDENTICAL shift and go to state 392
    IS_EQUAL_TO     shift and go to state 393
    IS_NOT_EQUAL    shift and go to state 394
    LESS_THAN       shift and go to state 395
    LESS_THAN_OR_EQUAL shift and go to state 396
    GREATER_THAN    shift and go to state 397
    GRATER_THAN_OR_EQUAL shift and go to state 398

  ! AND             [ reduce using rule 246 (static_expr -> static_expr XOR static_expr .) ]
  ! CONCAT          [ reduce using rule 246 (static_expr -> static_expr XOR static_expr .) ]
  ! PLUS            [ reduce using rule 246 (static_expr -> static_expr XOR static_expr .) ]
  ! MINUS           [ reduce using rule 246 (static_expr -> static_expr XOR static_expr .) ]
  ! MUL             [ reduce using rule 246 (static_expr -> static_expr XOR static_expr .) ]
  ! DIV             [ reduce using rule 246 (static_expr -> static_expr XOR static_expr .) ]
  ! SL              [ reduce using rule 246 (static_expr -> static_expr XOR static_expr .) ]
  ! SR              [ reduce using rule 246 (static_expr -> static_expr XOR static_expr .) ]
  ! MOD             [ reduce using rule 246 (static_expr -> static_expr XOR static_expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 246 (static_expr -> static_expr XOR static_expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 246 (static_expr -> static_expr XOR static_expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 246 (static_expr -> static_expr XOR static_expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 246 (static_expr -> static_expr XOR static_expr .) ]
  ! LESS_THAN       [ reduce using rule 246 (static_expr -> static_expr XOR static_expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 246 (static_expr -> static_expr XOR static_expr .) ]
  ! GREATER_THAN    [ reduce using rule 246 (static_expr -> static_expr XOR static_expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 246 (static_expr -> static_expr XOR static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 375 ]
  ! BOOLEAN_OR      [ shift and go to state 376 ]
  ! LOGICAL_AND     [ shift and go to state 377 ]
  ! LOGICAL_OR      [ shift and go to state 378 ]
  ! LOGICAL_XOR     [ shift and go to state 379 ]
  ! OR              [ shift and go to state 381 ]
  ! XOR             [ shift and go to state 382 ]


state 455

    (247) static_expr -> static_expr CONCAT static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    BOOLEAN_OR      reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    LOGICAL_AND     reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    LOGICAL_OR      reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    LOGICAL_XOR     reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    AND             reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    OR              reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    XOR             reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    CONCAT          reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    PLUS            reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    MINUS           reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    SL              reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    SR              reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    IS_IDENTICAL    reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    IS_NOT_IDENTICAL reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    IS_EQUAL_TO     reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    IS_NOT_EQUAL    reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    LESS_THAN       reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    LESS_THAN_OR_EQUAL reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    GREATER_THAN    reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    SEMI_COLON      reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    COMMA           reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    RPAREN          reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    RBRACKET        reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .)
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    MOD             shift and go to state 390

  ! MUL             [ reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .) ]
  ! DIV             [ reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .) ]
  ! MOD             [ reduce using rule 247 (static_expr -> static_expr CONCAT static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 375 ]
  ! BOOLEAN_OR      [ shift and go to state 376 ]
  ! LOGICAL_AND     [ shift and go to state 377 ]
  ! LOGICAL_OR      [ shift and go to state 378 ]
  ! LOGICAL_XOR     [ shift and go to state 379 ]
  ! AND             [ shift and go to state 380 ]
  ! OR              [ shift and go to state 381 ]
  ! XOR             [ shift and go to state 382 ]
  ! CONCAT          [ shift and go to state 383 ]
  ! PLUS            [ shift and go to state 384 ]
  ! MINUS           [ shift and go to state 385 ]
  ! SL              [ shift and go to state 388 ]
  ! SR              [ shift and go to state 389 ]
  ! IS_IDENTICAL    [ shift and go to state 391 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 392 ]
  ! IS_EQUAL_TO     [ shift and go to state 393 ]
  ! IS_NOT_EQUAL    [ shift and go to state 394 ]
  ! LESS_THAN       [ shift and go to state 395 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 396 ]
  ! GREATER_THAN    [ shift and go to state 397 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 398 ]


state 456

    (248) static_expr -> static_expr PLUS static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    BOOLEAN_OR      reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    LOGICAL_AND     reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    LOGICAL_OR      reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    LOGICAL_XOR     reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    AND             reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    OR              reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    XOR             reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    CONCAT          reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    PLUS            reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    MINUS           reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    SL              reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    SR              reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    IS_IDENTICAL    reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    IS_NOT_IDENTICAL reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    IS_EQUAL_TO     reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    IS_NOT_EQUAL    reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    LESS_THAN       reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    LESS_THAN_OR_EQUAL reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    GREATER_THAN    reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    SEMI_COLON      reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    COMMA           reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    RPAREN          reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    RBRACKET        reduce using rule 248 (static_expr -> static_expr PLUS static_expr .)
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    MOD             shift and go to state 390

  ! MUL             [ reduce using rule 248 (static_expr -> static_expr PLUS static_expr .) ]
  ! DIV             [ reduce using rule 248 (static_expr -> static_expr PLUS static_expr .) ]
  ! MOD             [ reduce using rule 248 (static_expr -> static_expr PLUS static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 375 ]
  ! BOOLEAN_OR      [ shift and go to state 376 ]
  ! LOGICAL_AND     [ shift and go to state 377 ]
  ! LOGICAL_OR      [ shift and go to state 378 ]
  ! LOGICAL_XOR     [ shift and go to state 379 ]
  ! AND             [ shift and go to state 380 ]
  ! OR              [ shift and go to state 381 ]
  ! XOR             [ shift and go to state 382 ]
  ! CONCAT          [ shift and go to state 383 ]
  ! PLUS            [ shift and go to state 384 ]
  ! MINUS           [ shift and go to state 385 ]
  ! SL              [ shift and go to state 388 ]
  ! SR              [ shift and go to state 389 ]
  ! IS_IDENTICAL    [ shift and go to state 391 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 392 ]
  ! IS_EQUAL_TO     [ shift and go to state 393 ]
  ! IS_NOT_EQUAL    [ shift and go to state 394 ]
  ! LESS_THAN       [ shift and go to state 395 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 396 ]
  ! GREATER_THAN    [ shift and go to state 397 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 398 ]


state 457

    (249) static_expr -> static_expr MINUS static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    BOOLEAN_OR      reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    LOGICAL_AND     reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    LOGICAL_OR      reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    LOGICAL_XOR     reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    AND             reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    OR              reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    XOR             reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    CONCAT          reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    PLUS            reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    MINUS           reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    SL              reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    SR              reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    IS_IDENTICAL    reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    IS_NOT_IDENTICAL reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    IS_EQUAL_TO     reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    IS_NOT_EQUAL    reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    LESS_THAN       reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    LESS_THAN_OR_EQUAL reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    GREATER_THAN    reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    SEMI_COLON      reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    COMMA           reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    RPAREN          reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    RBRACKET        reduce using rule 249 (static_expr -> static_expr MINUS static_expr .)
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    MOD             shift and go to state 390

  ! MUL             [ reduce using rule 249 (static_expr -> static_expr MINUS static_expr .) ]
  ! DIV             [ reduce using rule 249 (static_expr -> static_expr MINUS static_expr .) ]
  ! MOD             [ reduce using rule 249 (static_expr -> static_expr MINUS static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 375 ]
  ! BOOLEAN_OR      [ shift and go to state 376 ]
  ! LOGICAL_AND     [ shift and go to state 377 ]
  ! LOGICAL_OR      [ shift and go to state 378 ]
  ! LOGICAL_XOR     [ shift and go to state 379 ]
  ! AND             [ shift and go to state 380 ]
  ! OR              [ shift and go to state 381 ]
  ! XOR             [ shift and go to state 382 ]
  ! CONCAT          [ shift and go to state 383 ]
  ! PLUS            [ shift and go to state 384 ]
  ! MINUS           [ shift and go to state 385 ]
  ! SL              [ shift and go to state 388 ]
  ! SR              [ shift and go to state 389 ]
  ! IS_IDENTICAL    [ shift and go to state 391 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 392 ]
  ! IS_EQUAL_TO     [ shift and go to state 393 ]
  ! IS_NOT_EQUAL    [ shift and go to state 394 ]
  ! LESS_THAN       [ shift and go to state 395 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 396 ]
  ! GREATER_THAN    [ shift and go to state 397 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 398 ]


state 458

    (250) static_expr -> static_expr MUL static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    BOOLEAN_OR      reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    LOGICAL_AND     reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    LOGICAL_OR      reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    LOGICAL_XOR     reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    AND             reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    OR              reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    XOR             reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    CONCAT          reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    PLUS            reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    MINUS           reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    MUL             reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    DIV             reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    SL              reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    SR              reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    MOD             reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    IS_IDENTICAL    reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    IS_NOT_IDENTICAL reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    IS_EQUAL_TO     reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    IS_NOT_EQUAL    reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    LESS_THAN       reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    LESS_THAN_OR_EQUAL reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    GREATER_THAN    reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    SEMI_COLON      reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    COMMA           reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    RPAREN          reduce using rule 250 (static_expr -> static_expr MUL static_expr .)
    RBRACKET        reduce using rule 250 (static_expr -> static_expr MUL static_expr .)

  ! BOOLEAN_AND     [ shift and go to state 375 ]
  ! BOOLEAN_OR      [ shift and go to state 376 ]
  ! LOGICAL_AND     [ shift and go to state 377 ]
  ! LOGICAL_OR      [ shift and go to state 378 ]
  ! LOGICAL_XOR     [ shift and go to state 379 ]
  ! AND             [ shift and go to state 380 ]
  ! OR              [ shift and go to state 381 ]
  ! XOR             [ shift and go to state 382 ]
  ! CONCAT          [ shift and go to state 383 ]
  ! PLUS            [ shift and go to state 384 ]
  ! MINUS           [ shift and go to state 385 ]
  ! MUL             [ shift and go to state 386 ]
  ! DIV             [ shift and go to state 387 ]
  ! SL              [ shift and go to state 388 ]
  ! SR              [ shift and go to state 389 ]
  ! MOD             [ shift and go to state 390 ]
  ! IS_IDENTICAL    [ shift and go to state 391 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 392 ]
  ! IS_EQUAL_TO     [ shift and go to state 393 ]
  ! IS_NOT_EQUAL    [ shift and go to state 394 ]
  ! LESS_THAN       [ shift and go to state 395 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 396 ]
  ! GREATER_THAN    [ shift and go to state 397 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 398 ]


state 459

    (251) static_expr -> static_expr DIV static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    BOOLEAN_OR      reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    LOGICAL_AND     reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    LOGICAL_OR      reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    LOGICAL_XOR     reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    AND             reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    OR              reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    XOR             reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    CONCAT          reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    PLUS            reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    MINUS           reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    MUL             reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    DIV             reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    SL              reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    SR              reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    MOD             reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    IS_IDENTICAL    reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    IS_NOT_IDENTICAL reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    IS_EQUAL_TO     reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    IS_NOT_EQUAL    reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    LESS_THAN       reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    LESS_THAN_OR_EQUAL reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    GREATER_THAN    reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    SEMI_COLON      reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    COMMA           reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    RPAREN          reduce using rule 251 (static_expr -> static_expr DIV static_expr .)
    RBRACKET        reduce using rule 251 (static_expr -> static_expr DIV static_expr .)

  ! BOOLEAN_AND     [ shift and go to state 375 ]
  ! BOOLEAN_OR      [ shift and go to state 376 ]
  ! LOGICAL_AND     [ shift and go to state 377 ]
  ! LOGICAL_OR      [ shift and go to state 378 ]
  ! LOGICAL_XOR     [ shift and go to state 379 ]
  ! AND             [ shift and go to state 380 ]
  ! OR              [ shift and go to state 381 ]
  ! XOR             [ shift and go to state 382 ]
  ! CONCAT          [ shift and go to state 383 ]
  ! PLUS            [ shift and go to state 384 ]
  ! MINUS           [ shift and go to state 385 ]
  ! MUL             [ shift and go to state 386 ]
  ! DIV             [ shift and go to state 387 ]
  ! SL              [ shift and go to state 388 ]
  ! SR              [ shift and go to state 389 ]
  ! MOD             [ shift and go to state 390 ]
  ! IS_IDENTICAL    [ shift and go to state 391 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 392 ]
  ! IS_EQUAL_TO     [ shift and go to state 393 ]
  ! IS_NOT_EQUAL    [ shift and go to state 394 ]
  ! LESS_THAN       [ shift and go to state 395 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 396 ]
  ! GREATER_THAN    [ shift and go to state 397 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 398 ]


state 460

    (252) static_expr -> static_expr SL static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 252 (static_expr -> static_expr SL static_expr .)
    BOOLEAN_OR      reduce using rule 252 (static_expr -> static_expr SL static_expr .)
    LOGICAL_AND     reduce using rule 252 (static_expr -> static_expr SL static_expr .)
    LOGICAL_OR      reduce using rule 252 (static_expr -> static_expr SL static_expr .)
    LOGICAL_XOR     reduce using rule 252 (static_expr -> static_expr SL static_expr .)
    AND             reduce using rule 252 (static_expr -> static_expr SL static_expr .)
    OR              reduce using rule 252 (static_expr -> static_expr SL static_expr .)
    XOR             reduce using rule 252 (static_expr -> static_expr SL static_expr .)
    SL              reduce using rule 252 (static_expr -> static_expr SL static_expr .)
    SR              reduce using rule 252 (static_expr -> static_expr SL static_expr .)
    IS_IDENTICAL    reduce using rule 252 (static_expr -> static_expr SL static_expr .)
    IS_NOT_IDENTICAL reduce using rule 252 (static_expr -> static_expr SL static_expr .)
    IS_EQUAL_TO     reduce using rule 252 (static_expr -> static_expr SL static_expr .)
    IS_NOT_EQUAL    reduce using rule 252 (static_expr -> static_expr SL static_expr .)
    LESS_THAN       reduce using rule 252 (static_expr -> static_expr SL static_expr .)
    LESS_THAN_OR_EQUAL reduce using rule 252 (static_expr -> static_expr SL static_expr .)
    GREATER_THAN    reduce using rule 252 (static_expr -> static_expr SL static_expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 252 (static_expr -> static_expr SL static_expr .)
    SEMI_COLON      reduce using rule 252 (static_expr -> static_expr SL static_expr .)
    COMMA           reduce using rule 252 (static_expr -> static_expr SL static_expr .)
    RPAREN          reduce using rule 252 (static_expr -> static_expr SL static_expr .)
    RBRACKET        reduce using rule 252 (static_expr -> static_expr SL static_expr .)
    CONCAT          shift and go to state 383
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    MOD             shift and go to state 390

  ! CONCAT          [ reduce using rule 252 (static_expr -> static_expr SL static_expr .) ]
  ! PLUS            [ reduce using rule 252 (static_expr -> static_expr SL static_expr .) ]
  ! MINUS           [ reduce using rule 252 (static_expr -> static_expr SL static_expr .) ]
  ! MUL             [ reduce using rule 252 (static_expr -> static_expr SL static_expr .) ]
  ! DIV             [ reduce using rule 252 (static_expr -> static_expr SL static_expr .) ]
  ! MOD             [ reduce using rule 252 (static_expr -> static_expr SL static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 375 ]
  ! BOOLEAN_OR      [ shift and go to state 376 ]
  ! LOGICAL_AND     [ shift and go to state 377 ]
  ! LOGICAL_OR      [ shift and go to state 378 ]
  ! LOGICAL_XOR     [ shift and go to state 379 ]
  ! AND             [ shift and go to state 380 ]
  ! OR              [ shift and go to state 381 ]
  ! XOR             [ shift and go to state 382 ]
  ! SL              [ shift and go to state 388 ]
  ! SR              [ shift and go to state 389 ]
  ! IS_IDENTICAL    [ shift and go to state 391 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 392 ]
  ! IS_EQUAL_TO     [ shift and go to state 393 ]
  ! IS_NOT_EQUAL    [ shift and go to state 394 ]
  ! LESS_THAN       [ shift and go to state 395 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 396 ]
  ! GREATER_THAN    [ shift and go to state 397 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 398 ]


state 461

    (253) static_expr -> static_expr SR static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 253 (static_expr -> static_expr SR static_expr .)
    BOOLEAN_OR      reduce using rule 253 (static_expr -> static_expr SR static_expr .)
    LOGICAL_AND     reduce using rule 253 (static_expr -> static_expr SR static_expr .)
    LOGICAL_OR      reduce using rule 253 (static_expr -> static_expr SR static_expr .)
    LOGICAL_XOR     reduce using rule 253 (static_expr -> static_expr SR static_expr .)
    AND             reduce using rule 253 (static_expr -> static_expr SR static_expr .)
    OR              reduce using rule 253 (static_expr -> static_expr SR static_expr .)
    XOR             reduce using rule 253 (static_expr -> static_expr SR static_expr .)
    SL              reduce using rule 253 (static_expr -> static_expr SR static_expr .)
    SR              reduce using rule 253 (static_expr -> static_expr SR static_expr .)
    IS_IDENTICAL    reduce using rule 253 (static_expr -> static_expr SR static_expr .)
    IS_NOT_IDENTICAL reduce using rule 253 (static_expr -> static_expr SR static_expr .)
    IS_EQUAL_TO     reduce using rule 253 (static_expr -> static_expr SR static_expr .)
    IS_NOT_EQUAL    reduce using rule 253 (static_expr -> static_expr SR static_expr .)
    LESS_THAN       reduce using rule 253 (static_expr -> static_expr SR static_expr .)
    LESS_THAN_OR_EQUAL reduce using rule 253 (static_expr -> static_expr SR static_expr .)
    GREATER_THAN    reduce using rule 253 (static_expr -> static_expr SR static_expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 253 (static_expr -> static_expr SR static_expr .)
    SEMI_COLON      reduce using rule 253 (static_expr -> static_expr SR static_expr .)
    COMMA           reduce using rule 253 (static_expr -> static_expr SR static_expr .)
    RPAREN          reduce using rule 253 (static_expr -> static_expr SR static_expr .)
    RBRACKET        reduce using rule 253 (static_expr -> static_expr SR static_expr .)
    CONCAT          shift and go to state 383
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    MOD             shift and go to state 390

  ! CONCAT          [ reduce using rule 253 (static_expr -> static_expr SR static_expr .) ]
  ! PLUS            [ reduce using rule 253 (static_expr -> static_expr SR static_expr .) ]
  ! MINUS           [ reduce using rule 253 (static_expr -> static_expr SR static_expr .) ]
  ! MUL             [ reduce using rule 253 (static_expr -> static_expr SR static_expr .) ]
  ! DIV             [ reduce using rule 253 (static_expr -> static_expr SR static_expr .) ]
  ! MOD             [ reduce using rule 253 (static_expr -> static_expr SR static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 375 ]
  ! BOOLEAN_OR      [ shift and go to state 376 ]
  ! LOGICAL_AND     [ shift and go to state 377 ]
  ! LOGICAL_OR      [ shift and go to state 378 ]
  ! LOGICAL_XOR     [ shift and go to state 379 ]
  ! AND             [ shift and go to state 380 ]
  ! OR              [ shift and go to state 381 ]
  ! XOR             [ shift and go to state 382 ]
  ! SL              [ shift and go to state 388 ]
  ! SR              [ shift and go to state 389 ]
  ! IS_IDENTICAL    [ shift and go to state 391 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 392 ]
  ! IS_EQUAL_TO     [ shift and go to state 393 ]
  ! IS_NOT_EQUAL    [ shift and go to state 394 ]
  ! LESS_THAN       [ shift and go to state 395 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 396 ]
  ! GREATER_THAN    [ shift and go to state 397 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 398 ]


state 462

    (254) static_expr -> static_expr MOD static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    BOOLEAN_OR      reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    LOGICAL_AND     reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    LOGICAL_OR      reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    LOGICAL_XOR     reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    AND             reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    OR              reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    XOR             reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    CONCAT          reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    PLUS            reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    MINUS           reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    MUL             reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    DIV             reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    SL              reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    SR              reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    MOD             reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    IS_IDENTICAL    reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    IS_NOT_IDENTICAL reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    IS_EQUAL_TO     reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    IS_NOT_EQUAL    reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    LESS_THAN       reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    LESS_THAN_OR_EQUAL reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    GREATER_THAN    reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    SEMI_COLON      reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    COMMA           reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    RPAREN          reduce using rule 254 (static_expr -> static_expr MOD static_expr .)
    RBRACKET        reduce using rule 254 (static_expr -> static_expr MOD static_expr .)

  ! BOOLEAN_AND     [ shift and go to state 375 ]
  ! BOOLEAN_OR      [ shift and go to state 376 ]
  ! LOGICAL_AND     [ shift and go to state 377 ]
  ! LOGICAL_OR      [ shift and go to state 378 ]
  ! LOGICAL_XOR     [ shift and go to state 379 ]
  ! AND             [ shift and go to state 380 ]
  ! OR              [ shift and go to state 381 ]
  ! XOR             [ shift and go to state 382 ]
  ! CONCAT          [ shift and go to state 383 ]
  ! PLUS            [ shift and go to state 384 ]
  ! MINUS           [ shift and go to state 385 ]
  ! MUL             [ shift and go to state 386 ]
  ! DIV             [ shift and go to state 387 ]
  ! SL              [ shift and go to state 388 ]
  ! SR              [ shift and go to state 389 ]
  ! MOD             [ shift and go to state 390 ]
  ! IS_IDENTICAL    [ shift and go to state 391 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 392 ]
  ! IS_EQUAL_TO     [ shift and go to state 393 ]
  ! IS_NOT_EQUAL    [ shift and go to state 394 ]
  ! LESS_THAN       [ shift and go to state 395 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 396 ]
  ! GREATER_THAN    [ shift and go to state 397 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 398 ]


state 463

    (255) static_expr -> static_expr IS_IDENTICAL static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    BOOLEAN_OR      reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    LOGICAL_AND     reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    LOGICAL_OR      reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    LOGICAL_XOR     reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    AND             reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    OR              reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    XOR             reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    IS_IDENTICAL    reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    IS_NOT_IDENTICAL reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    IS_EQUAL_TO     reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    IS_NOT_EQUAL    reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    SEMI_COLON      reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    COMMA           reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    RPAREN          reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    RBRACKET        reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    CONCAT          shift and go to state 383
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    SL              shift and go to state 388
    SR              shift and go to state 389
    MOD             shift and go to state 390
    LESS_THAN       shift and go to state 395
    LESS_THAN_OR_EQUAL shift and go to state 396
    GREATER_THAN    shift and go to state 397
    GRATER_THAN_OR_EQUAL shift and go to state 398

  ! CONCAT          [ reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .) ]
  ! PLUS            [ reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .) ]
  ! MINUS           [ reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .) ]
  ! MUL             [ reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .) ]
  ! DIV             [ reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .) ]
  ! SL              [ reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .) ]
  ! SR              [ reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .) ]
  ! MOD             [ reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .) ]
  ! LESS_THAN       [ reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .) ]
  ! GREATER_THAN    [ reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 255 (static_expr -> static_expr IS_IDENTICAL static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 375 ]
  ! BOOLEAN_OR      [ shift and go to state 376 ]
  ! LOGICAL_AND     [ shift and go to state 377 ]
  ! LOGICAL_OR      [ shift and go to state 378 ]
  ! LOGICAL_XOR     [ shift and go to state 379 ]
  ! AND             [ shift and go to state 380 ]
  ! OR              [ shift and go to state 381 ]
  ! XOR             [ shift and go to state 382 ]
  ! IS_IDENTICAL    [ shift and go to state 391 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 392 ]
  ! IS_EQUAL_TO     [ shift and go to state 393 ]
  ! IS_NOT_EQUAL    [ shift and go to state 394 ]


state 464

    (256) static_expr -> static_expr IS_NOT_IDENTICAL static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    BOOLEAN_OR      reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    LOGICAL_AND     reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    LOGICAL_OR      reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    LOGICAL_XOR     reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    AND             reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    OR              reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    XOR             reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    IS_IDENTICAL    reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    IS_NOT_IDENTICAL reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    IS_EQUAL_TO     reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    IS_NOT_EQUAL    reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    SEMI_COLON      reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    COMMA           reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    RPAREN          reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    RBRACKET        reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    CONCAT          shift and go to state 383
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    SL              shift and go to state 388
    SR              shift and go to state 389
    MOD             shift and go to state 390
    LESS_THAN       shift and go to state 395
    LESS_THAN_OR_EQUAL shift and go to state 396
    GREATER_THAN    shift and go to state 397
    GRATER_THAN_OR_EQUAL shift and go to state 398

  ! CONCAT          [ reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .) ]
  ! PLUS            [ reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .) ]
  ! MINUS           [ reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .) ]
  ! MUL             [ reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .) ]
  ! DIV             [ reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .) ]
  ! SL              [ reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .) ]
  ! SR              [ reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .) ]
  ! MOD             [ reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .) ]
  ! LESS_THAN       [ reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .) ]
  ! GREATER_THAN    [ reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 256 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 375 ]
  ! BOOLEAN_OR      [ shift and go to state 376 ]
  ! LOGICAL_AND     [ shift and go to state 377 ]
  ! LOGICAL_OR      [ shift and go to state 378 ]
  ! LOGICAL_XOR     [ shift and go to state 379 ]
  ! AND             [ shift and go to state 380 ]
  ! OR              [ shift and go to state 381 ]
  ! XOR             [ shift and go to state 382 ]
  ! IS_IDENTICAL    [ shift and go to state 391 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 392 ]
  ! IS_EQUAL_TO     [ shift and go to state 393 ]
  ! IS_NOT_EQUAL    [ shift and go to state 394 ]


state 465

    (257) static_expr -> static_expr IS_EQUAL_TO static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    BOOLEAN_OR      reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    LOGICAL_AND     reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    LOGICAL_OR      reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    LOGICAL_XOR     reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    AND             reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    OR              reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    XOR             reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    IS_IDENTICAL    reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    IS_NOT_IDENTICAL reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    IS_EQUAL_TO     reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    IS_NOT_EQUAL    reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    SEMI_COLON      reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    COMMA           reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    RPAREN          reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    RBRACKET        reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    CONCAT          shift and go to state 383
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    SL              shift and go to state 388
    SR              shift and go to state 389
    MOD             shift and go to state 390
    LESS_THAN       shift and go to state 395
    LESS_THAN_OR_EQUAL shift and go to state 396
    GREATER_THAN    shift and go to state 397
    GRATER_THAN_OR_EQUAL shift and go to state 398

  ! CONCAT          [ reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .) ]
  ! PLUS            [ reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .) ]
  ! MINUS           [ reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .) ]
  ! MUL             [ reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .) ]
  ! DIV             [ reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .) ]
  ! SL              [ reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .) ]
  ! SR              [ reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .) ]
  ! MOD             [ reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .) ]
  ! LESS_THAN       [ reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .) ]
  ! GREATER_THAN    [ reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 257 (static_expr -> static_expr IS_EQUAL_TO static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 375 ]
  ! BOOLEAN_OR      [ shift and go to state 376 ]
  ! LOGICAL_AND     [ shift and go to state 377 ]
  ! LOGICAL_OR      [ shift and go to state 378 ]
  ! LOGICAL_XOR     [ shift and go to state 379 ]
  ! AND             [ shift and go to state 380 ]
  ! OR              [ shift and go to state 381 ]
  ! XOR             [ shift and go to state 382 ]
  ! IS_IDENTICAL    [ shift and go to state 391 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 392 ]
  ! IS_EQUAL_TO     [ shift and go to state 393 ]
  ! IS_NOT_EQUAL    [ shift and go to state 394 ]


state 466

    (258) static_expr -> static_expr IS_NOT_EQUAL static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    BOOLEAN_OR      reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    LOGICAL_AND     reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    LOGICAL_OR      reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    LOGICAL_XOR     reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    AND             reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    OR              reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    XOR             reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    IS_IDENTICAL    reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    IS_NOT_IDENTICAL reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    IS_EQUAL_TO     reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    IS_NOT_EQUAL    reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    SEMI_COLON      reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    COMMA           reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    RPAREN          reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    RBRACKET        reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    CONCAT          shift and go to state 383
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    SL              shift and go to state 388
    SR              shift and go to state 389
    MOD             shift and go to state 390
    LESS_THAN       shift and go to state 395
    LESS_THAN_OR_EQUAL shift and go to state 396
    GREATER_THAN    shift and go to state 397
    GRATER_THAN_OR_EQUAL shift and go to state 398

  ! CONCAT          [ reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .) ]
  ! PLUS            [ reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .) ]
  ! MINUS           [ reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .) ]
  ! MUL             [ reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .) ]
  ! DIV             [ reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .) ]
  ! SL              [ reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .) ]
  ! SR              [ reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .) ]
  ! MOD             [ reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .) ]
  ! LESS_THAN       [ reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .) ]
  ! GREATER_THAN    [ reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 258 (static_expr -> static_expr IS_NOT_EQUAL static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 375 ]
  ! BOOLEAN_OR      [ shift and go to state 376 ]
  ! LOGICAL_AND     [ shift and go to state 377 ]
  ! LOGICAL_OR      [ shift and go to state 378 ]
  ! LOGICAL_XOR     [ shift and go to state 379 ]
  ! AND             [ shift and go to state 380 ]
  ! OR              [ shift and go to state 381 ]
  ! XOR             [ shift and go to state 382 ]
  ! IS_IDENTICAL    [ shift and go to state 391 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 392 ]
  ! IS_EQUAL_TO     [ shift and go to state 393 ]
  ! IS_NOT_EQUAL    [ shift and go to state 394 ]


state 467

    (259) static_expr -> static_expr LESS_THAN static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .)
    BOOLEAN_OR      reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .)
    LOGICAL_AND     reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .)
    LOGICAL_OR      reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .)
    LOGICAL_XOR     reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .)
    AND             reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .)
    OR              reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .)
    XOR             reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .)
    IS_IDENTICAL    reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .)
    IS_NOT_IDENTICAL reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .)
    IS_EQUAL_TO     reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .)
    IS_NOT_EQUAL    reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .)
    LESS_THAN       reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .)
    LESS_THAN_OR_EQUAL reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .)
    GREATER_THAN    reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .)
    SEMI_COLON      reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .)
    COMMA           reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .)
    RPAREN          reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .)
    RBRACKET        reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .)
    CONCAT          shift and go to state 383
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    SL              shift and go to state 388
    SR              shift and go to state 389
    MOD             shift and go to state 390

  ! CONCAT          [ reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .) ]
  ! PLUS            [ reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .) ]
  ! MINUS           [ reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .) ]
  ! MUL             [ reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .) ]
  ! DIV             [ reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .) ]
  ! SL              [ reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .) ]
  ! SR              [ reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .) ]
  ! MOD             [ reduce using rule 259 (static_expr -> static_expr LESS_THAN static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 375 ]
  ! BOOLEAN_OR      [ shift and go to state 376 ]
  ! LOGICAL_AND     [ shift and go to state 377 ]
  ! LOGICAL_OR      [ shift and go to state 378 ]
  ! LOGICAL_XOR     [ shift and go to state 379 ]
  ! AND             [ shift and go to state 380 ]
  ! OR              [ shift and go to state 381 ]
  ! XOR             [ shift and go to state 382 ]
  ! IS_IDENTICAL    [ shift and go to state 391 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 392 ]
  ! IS_EQUAL_TO     [ shift and go to state 393 ]
  ! IS_NOT_EQUAL    [ shift and go to state 394 ]
  ! LESS_THAN       [ shift and go to state 395 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 396 ]
  ! GREATER_THAN    [ shift and go to state 397 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 398 ]


state 468

    (260) static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    BOOLEAN_OR      reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    LOGICAL_AND     reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    LOGICAL_OR      reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    LOGICAL_XOR     reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    AND             reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    OR              reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    XOR             reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    IS_IDENTICAL    reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    IS_NOT_IDENTICAL reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    IS_EQUAL_TO     reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    IS_NOT_EQUAL    reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    LESS_THAN       reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    LESS_THAN_OR_EQUAL reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    GREATER_THAN    reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    SEMI_COLON      reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    COMMA           reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    RPAREN          reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    RBRACKET        reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    CONCAT          shift and go to state 383
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    SL              shift and go to state 388
    SR              shift and go to state 389
    MOD             shift and go to state 390

  ! CONCAT          [ reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .) ]
  ! PLUS            [ reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .) ]
  ! MINUS           [ reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .) ]
  ! MUL             [ reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .) ]
  ! DIV             [ reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .) ]
  ! SL              [ reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .) ]
  ! SR              [ reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .) ]
  ! MOD             [ reduce using rule 260 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 375 ]
  ! BOOLEAN_OR      [ shift and go to state 376 ]
  ! LOGICAL_AND     [ shift and go to state 377 ]
  ! LOGICAL_OR      [ shift and go to state 378 ]
  ! LOGICAL_XOR     [ shift and go to state 379 ]
  ! AND             [ shift and go to state 380 ]
  ! OR              [ shift and go to state 381 ]
  ! XOR             [ shift and go to state 382 ]
  ! IS_IDENTICAL    [ shift and go to state 391 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 392 ]
  ! IS_EQUAL_TO     [ shift and go to state 393 ]
  ! IS_NOT_EQUAL    [ shift and go to state 394 ]
  ! LESS_THAN       [ shift and go to state 395 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 396 ]
  ! GREATER_THAN    [ shift and go to state 397 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 398 ]


state 469

    (261) static_expr -> static_expr GREATER_THAN static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .)
    BOOLEAN_OR      reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .)
    LOGICAL_AND     reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .)
    LOGICAL_OR      reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .)
    LOGICAL_XOR     reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .)
    AND             reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .)
    OR              reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .)
    XOR             reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .)
    IS_IDENTICAL    reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .)
    IS_NOT_IDENTICAL reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .)
    IS_EQUAL_TO     reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .)
    IS_NOT_EQUAL    reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .)
    LESS_THAN       reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .)
    LESS_THAN_OR_EQUAL reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .)
    GREATER_THAN    reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .)
    SEMI_COLON      reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .)
    COMMA           reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .)
    RPAREN          reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .)
    RBRACKET        reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .)
    CONCAT          shift and go to state 383
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    SL              shift and go to state 388
    SR              shift and go to state 389
    MOD             shift and go to state 390

  ! CONCAT          [ reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .) ]
  ! PLUS            [ reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .) ]
  ! MINUS           [ reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .) ]
  ! MUL             [ reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .) ]
  ! DIV             [ reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .) ]
  ! SL              [ reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .) ]
  ! SR              [ reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .) ]
  ! MOD             [ reduce using rule 261 (static_expr -> static_expr GREATER_THAN static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 375 ]
  ! BOOLEAN_OR      [ shift and go to state 376 ]
  ! LOGICAL_AND     [ shift and go to state 377 ]
  ! LOGICAL_OR      [ shift and go to state 378 ]
  ! LOGICAL_XOR     [ shift and go to state 379 ]
  ! AND             [ shift and go to state 380 ]
  ! OR              [ shift and go to state 381 ]
  ! XOR             [ shift and go to state 382 ]
  ! IS_IDENTICAL    [ shift and go to state 391 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 392 ]
  ! IS_EQUAL_TO     [ shift and go to state 393 ]
  ! IS_NOT_EQUAL    [ shift and go to state 394 ]
  ! LESS_THAN       [ shift and go to state 395 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 396 ]
  ! GREATER_THAN    [ shift and go to state 397 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 398 ]


state 470

    (262) static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    BOOLEAN_OR      reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    LOGICAL_AND     reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    LOGICAL_OR      reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    LOGICAL_XOR     reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    AND             reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    OR              reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    XOR             reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    IS_IDENTICAL    reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    IS_NOT_IDENTICAL reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    IS_EQUAL_TO     reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    IS_NOT_EQUAL    reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    LESS_THAN       reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    LESS_THAN_OR_EQUAL reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    GREATER_THAN    reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    SEMI_COLON      reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    COMMA           reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    RPAREN          reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    RBRACKET        reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    CONCAT          shift and go to state 383
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    SL              shift and go to state 388
    SR              shift and go to state 389
    MOD             shift and go to state 390

  ! CONCAT          [ reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .) ]
  ! PLUS            [ reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .) ]
  ! MINUS           [ reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .) ]
  ! MUL             [ reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .) ]
  ! DIV             [ reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .) ]
  ! SL              [ reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .) ]
  ! SR              [ reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .) ]
  ! MOD             [ reduce using rule 262 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 375 ]
  ! BOOLEAN_OR      [ shift and go to state 376 ]
  ! LOGICAL_AND     [ shift and go to state 377 ]
  ! LOGICAL_OR      [ shift and go to state 378 ]
  ! LOGICAL_XOR     [ shift and go to state 379 ]
  ! AND             [ shift and go to state 380 ]
  ! OR              [ shift and go to state 381 ]
  ! XOR             [ shift and go to state 382 ]
  ! IS_IDENTICAL    [ shift and go to state 391 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 392 ]
  ! IS_EQUAL_TO     [ shift and go to state 393 ]
  ! IS_NOT_EQUAL    [ shift and go to state 394 ]
  ! LESS_THAN       [ shift and go to state 395 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 396 ]
  ! GREATER_THAN    [ shift and go to state 397 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 398 ]


state 471

    (263) static_expr -> LPAREN static_expr RPAREN .

    BOOLEAN_AND     reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    BOOLEAN_OR      reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    LOGICAL_AND     reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    LOGICAL_OR      reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    LOGICAL_XOR     reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    AND             reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    OR              reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    XOR             reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    CONCAT          reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    PLUS            reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    MINUS           reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    MUL             reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    DIV             reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    SL              reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    SR              reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    MOD             reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    IS_IDENTICAL    reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    IS_EQUAL_TO     reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    IS_NOT_EQUAL    reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    LESS_THAN       reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    GREATER_THAN    reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    GRATER_THAN_OR_EQUAL reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    SEMI_COLON      reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    COMMA           reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    RPAREN          reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)
    RBRACKET        reduce using rule 263 (static_expr -> LPAREN static_expr RPAREN .)


state 472

    (221) static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .

    BOOLEAN_AND     reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    BOOLEAN_OR      reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    LOGICAL_AND     reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    LOGICAL_OR      reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    LOGICAL_XOR     reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    AND             reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    OR              reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    XOR             reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    CONCAT          reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    PLUS            reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    MINUS           reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    MUL             reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    DIV             reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    SL              reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    SR              reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    MOD             reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    IS_IDENTICAL    reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    IS_NOT_IDENTICAL reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    IS_EQUAL_TO     reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    IS_NOT_EQUAL    reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    LESS_THAN       reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    LESS_THAN_OR_EQUAL reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    GREATER_THAN    reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    GRATER_THAN_OR_EQUAL reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    SEMI_COLON      reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    COMMA           reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    RPAREN          reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    DOUBLE_ARROW    reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    RBRACKET        reduce using rule 221 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)


state 473

    (230) static_scalar -> ARRAY LPAREN static_array_pair_list . RPAREN

    RPAREN          shift and go to state 503


state 474

    (231) static_scalar -> LBRACKET static_array_pair_list RBRACKET .

    BOOLEAN_AND     reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    BOOLEAN_OR      reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    LOGICAL_AND     reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    LOGICAL_OR      reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    LOGICAL_XOR     reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    AND             reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    OR              reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    XOR             reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    CONCAT          reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    PLUS            reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    MINUS           reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    MUL             reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    DIV             reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    SL              reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    SR              reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    MOD             reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    IS_IDENTICAL    reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    IS_NOT_IDENTICAL reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    IS_EQUAL_TO     reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    IS_NOT_EQUAL    reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    LESS_THAN       reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    LESS_THAN_OR_EQUAL reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    GREATER_THAN    reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    GRATER_THAN_OR_EQUAL reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    SEMI_COLON      reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    COMMA           reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    RPAREN          reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    DOUBLE_ARROW    reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    RBRACKET        reduce using rule 231 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)


state 475

    (233) static_array_pair_list -> static_non_empty_array_pair_list possible_comma .

    RBRACKET        reduce using rule 233 (static_array_pair_list -> static_non_empty_array_pair_list possible_comma .)
    RPAREN          reduce using rule 233 (static_array_pair_list -> static_non_empty_array_pair_list possible_comma .)


state 476

    (234) static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA . static_expr
    (236) static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA . static_scalar DOUBLE_ARROW static_expr
    (121) possible_comma -> COMMA .
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    RBRACKET        reduce using rule 121 (possible_comma -> COMMA .)
    RPAREN          reduce using rule 121 (possible_comma -> COMMA .)
    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 504
    static_scalar                  shift and go to state 505
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 477

    (237) static_non_empty_array_pair_list -> static_scalar DOUBLE_ARROW . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_scalar                  shift and go to state 316
    static_expr                    shift and go to state 506
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 478

    (224) static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .

    BOOLEAN_AND     reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    BOOLEAN_OR      reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    LOGICAL_AND     reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    LOGICAL_OR      reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    LOGICAL_XOR     reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    AND             reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    OR              reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    XOR             reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    CONCAT          reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    PLUS            reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    MINUS           reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    MUL             reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    DIV             reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    SL              reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    SR              reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    MOD             reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    IS_IDENTICAL    reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    IS_NOT_IDENTICAL reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    IS_EQUAL_TO     reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    IS_NOT_EQUAL    reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    LESS_THAN       reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    LESS_THAN_OR_EQUAL reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    GREATER_THAN    reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    GRATER_THAN_OR_EQUAL reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    SEMI_COLON      reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    COMMA           reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    RPAREN          reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    DOUBLE_ARROW    reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    RBRACKET        reduce using rule 224 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)


state 479

    (225) multiple_encapsed -> multiple_encapsed ENCAPSED_AND_WHITESPACE .

    END_HEREDOC     reduce using rule 225 (multiple_encapsed -> multiple_encapsed ENCAPSED_AND_WHITESPACE .)
    ENCAPSED_AND_WHITESPACE reduce using rule 225 (multiple_encapsed -> multiple_encapsed ENCAPSED_AND_WHITESPACE .)


state 480

    (18) statement -> IF LPAREN expr RPAREN statement elseif_list .
    (19) statement -> IF LPAREN expr RPAREN statement elseif_list . ELSE statement
    (39) elseif_list -> elseif_list . ELSEIF LPAREN expr RPAREN statement

    HALT_COMPILER   reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    CONST           reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    LBRACE          reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    IF              reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    WHILE           reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    DO              reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    FOR             reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    SWITCH          reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    BREAK           reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    CONTINUE        reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    RETURN          reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    GLOBAL          reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    STATIC          reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    ECHO            reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    INLINE_HTML     reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    UNSET           reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    SEMI_COLON      reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    FUNCTION        reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    CLONE           reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    LIST            reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    ARRAY           reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    LBRACKET        reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    PLUS            reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    MINUS           reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    NOT             reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    BOOLEAN_NOT     reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    INC             reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    DEC             reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    INT_CAST        reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    ARRAY_CAST      reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    STRING_CAST     reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    DOUBLE_CAST     reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    BOOL_CAST       reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    UNSET_CAST      reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    BINARY_CAST     reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    ISSET           reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    EMPTY           reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    EVAL            reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    INCLUDE         reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    INCLUDE_ONCE    reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    REQUIRE         reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    REQUIRE_ONCE    reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    PRINT           reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    AT              reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    LPAREN          reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    DOUBLE_QUOTE    reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    IDENTIFIER      reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    EXIT            reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    DIE             reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    INT_NUMBER      reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    FLOAT_NUMBER    reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    CONSTANT_ENCAPSED_STRING reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    FUNC_C          reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    METHOD_C        reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    LINE            reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    FILE            reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    DIR             reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    START_HEREDOC   reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    START_NOWDOC    reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    VARIABLE        reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    DOLLAR          reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    $end            reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    RBRACE          reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    YIELD           reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    ENDIF           reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    ENDWHILE        reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    ENDSWITCH       reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    ENDFOR          reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    CASE            reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    DEFAULT         reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .)
    ELSE            shift and go to state 507
    ELSEIF          shift and go to state 508

  ! ELSE            [ reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .) ]
  ! ELSEIF          [ reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list .) ]


state 481

    (38) elseif_list -> empty .

    ELSE            reduce using rule 38 (elseif_list -> empty .)
    ELSEIF          reduce using rule 38 (elseif_list -> empty .)
    HALT_COMPILER   reduce using rule 38 (elseif_list -> empty .)
    CONST           reduce using rule 38 (elseif_list -> empty .)
    LBRACE          reduce using rule 38 (elseif_list -> empty .)
    IF              reduce using rule 38 (elseif_list -> empty .)
    WHILE           reduce using rule 38 (elseif_list -> empty .)
    DO              reduce using rule 38 (elseif_list -> empty .)
    FOR             reduce using rule 38 (elseif_list -> empty .)
    SWITCH          reduce using rule 38 (elseif_list -> empty .)
    BREAK           reduce using rule 38 (elseif_list -> empty .)
    CONTINUE        reduce using rule 38 (elseif_list -> empty .)
    RETURN          reduce using rule 38 (elseif_list -> empty .)
    GLOBAL          reduce using rule 38 (elseif_list -> empty .)
    STATIC          reduce using rule 38 (elseif_list -> empty .)
    ECHO            reduce using rule 38 (elseif_list -> empty .)
    INLINE_HTML     reduce using rule 38 (elseif_list -> empty .)
    UNSET           reduce using rule 38 (elseif_list -> empty .)
    SEMI_COLON      reduce using rule 38 (elseif_list -> empty .)
    FUNCTION        reduce using rule 38 (elseif_list -> empty .)
    CLONE           reduce using rule 38 (elseif_list -> empty .)
    LIST            reduce using rule 38 (elseif_list -> empty .)
    ARRAY           reduce using rule 38 (elseif_list -> empty .)
    LBRACKET        reduce using rule 38 (elseif_list -> empty .)
    PLUS            reduce using rule 38 (elseif_list -> empty .)
    MINUS           reduce using rule 38 (elseif_list -> empty .)
    NOT             reduce using rule 38 (elseif_list -> empty .)
    BOOLEAN_NOT     reduce using rule 38 (elseif_list -> empty .)
    INC             reduce using rule 38 (elseif_list -> empty .)
    DEC             reduce using rule 38 (elseif_list -> empty .)
    INT_CAST        reduce using rule 38 (elseif_list -> empty .)
    ARRAY_CAST      reduce using rule 38 (elseif_list -> empty .)
    STRING_CAST     reduce using rule 38 (elseif_list -> empty .)
    DOUBLE_CAST     reduce using rule 38 (elseif_list -> empty .)
    BOOL_CAST       reduce using rule 38 (elseif_list -> empty .)
    UNSET_CAST      reduce using rule 38 (elseif_list -> empty .)
    BINARY_CAST     reduce using rule 38 (elseif_list -> empty .)
    ISSET           reduce using rule 38 (elseif_list -> empty .)
    EMPTY           reduce using rule 38 (elseif_list -> empty .)
    EVAL            reduce using rule 38 (elseif_list -> empty .)
    INCLUDE         reduce using rule 38 (elseif_list -> empty .)
    INCLUDE_ONCE    reduce using rule 38 (elseif_list -> empty .)
    REQUIRE         reduce using rule 38 (elseif_list -> empty .)
    REQUIRE_ONCE    reduce using rule 38 (elseif_list -> empty .)
    PRINT           reduce using rule 38 (elseif_list -> empty .)
    AT              reduce using rule 38 (elseif_list -> empty .)
    LPAREN          reduce using rule 38 (elseif_list -> empty .)
    DOUBLE_QUOTE    reduce using rule 38 (elseif_list -> empty .)
    IDENTIFIER      reduce using rule 38 (elseif_list -> empty .)
    EXIT            reduce using rule 38 (elseif_list -> empty .)
    DIE             reduce using rule 38 (elseif_list -> empty .)
    INT_NUMBER      reduce using rule 38 (elseif_list -> empty .)
    FLOAT_NUMBER    reduce using rule 38 (elseif_list -> empty .)
    CONSTANT_ENCAPSED_STRING reduce using rule 38 (elseif_list -> empty .)
    FUNC_C          reduce using rule 38 (elseif_list -> empty .)
    METHOD_C        reduce using rule 38 (elseif_list -> empty .)
    LINE            reduce using rule 38 (elseif_list -> empty .)
    FILE            reduce using rule 38 (elseif_list -> empty .)
    DIR             reduce using rule 38 (elseif_list -> empty .)
    START_HEREDOC   reduce using rule 38 (elseif_list -> empty .)
    START_NOWDOC    reduce using rule 38 (elseif_list -> empty .)
    VARIABLE        reduce using rule 38 (elseif_list -> empty .)
    DOLLAR          reduce using rule 38 (elseif_list -> empty .)
    $end            reduce using rule 38 (elseif_list -> empty .)
    RBRACE          reduce using rule 38 (elseif_list -> empty .)
    YIELD           reduce using rule 38 (elseif_list -> empty .)
    ENDIF           reduce using rule 38 (elseif_list -> empty .)
    ENDWHILE        reduce using rule 38 (elseif_list -> empty .)
    ENDSWITCH       reduce using rule 38 (elseif_list -> empty .)
    ENDFOR          reduce using rule 38 (elseif_list -> empty .)
    CASE            reduce using rule 38 (elseif_list -> empty .)
    DEFAULT         reduce using rule 38 (elseif_list -> empty .)


state 482

    (20) statement -> IF LPAREN expr RPAREN COLON inner_statement_list . new_elseif_list new_else_single ENDIF SEMI_COLON
    (11) inner_statement_list -> inner_statement_list . inner_statement
    (40) new_elseif_list -> . empty
    (41) new_elseif_list -> . new_elseif_list ELSEIF LPAREN expr RPAREN COLON inner_statement_list
    (13) inner_statement -> . statement
    (14) inner_statement -> . function_declaration_statement
    (15) inner_statement -> . YIELD SEMI_COLON
    (16) inner_statement -> . YIELD expr SEMI_COLON
    (275) empty -> .
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list
    (19) statement -> . IF LPAREN expr RPAREN statement elseif_list ELSE statement
    (20) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (21) statement -> . WHILE LPAREN expr RPAREN while_statement
    (22) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (23) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (24) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (25) statement -> . BREAK SEMI_COLON
    (26) statement -> . BREAK expr SEMI_COLON
    (27) statement -> . CONTINUE SEMI_COLON
    (28) statement -> . CONTINUE expr SEMI_COLON
    (29) statement -> . RETURN SEMI_COLON
    (30) statement -> . RETURN expr SEMI_COLON
    (31) statement -> . GLOBAL global_var_list SEMI_COLON
    (32) statement -> . STATIC static_var_list SEMI_COLON
    (33) statement -> . ECHO echo_expr_list SEMI_COLON
    (34) statement -> . INLINE_HTML
    (35) statement -> . expr SEMI_COLON
    (36) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (37) statement -> . SEMI_COLON
    (77) function_declaration_statement -> . FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    YIELD           shift and go to state 207
    ELSEIF          reduce using rule 275 (empty -> .)
    ELSE            reduce using rule 275 (empty -> .)
    ENDIF           reduce using rule 275 (empty -> .)
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    FUNCTION        shift and go to state 26
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 13
    new_elseif_list                shift and go to state 509
    inner_statement                shift and go to state 204
    empty                          shift and go to state 510
    statement                      shift and go to state 205
    function_declaration_statement shift and go to state 206
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 483

    (45) while_statement -> COLON inner_statement_list . ENDWHILE SEMI_COLON
    (11) inner_statement_list -> inner_statement_list . inner_statement
    (13) inner_statement -> . statement
    (14) inner_statement -> . function_declaration_statement
    (15) inner_statement -> . YIELD SEMI_COLON
    (16) inner_statement -> . YIELD expr SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list
    (19) statement -> . IF LPAREN expr RPAREN statement elseif_list ELSE statement
    (20) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (21) statement -> . WHILE LPAREN expr RPAREN while_statement
    (22) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (23) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (24) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (25) statement -> . BREAK SEMI_COLON
    (26) statement -> . BREAK expr SEMI_COLON
    (27) statement -> . CONTINUE SEMI_COLON
    (28) statement -> . CONTINUE expr SEMI_COLON
    (29) statement -> . RETURN SEMI_COLON
    (30) statement -> . RETURN expr SEMI_COLON
    (31) statement -> . GLOBAL global_var_list SEMI_COLON
    (32) statement -> . STATIC static_var_list SEMI_COLON
    (33) statement -> . ECHO echo_expr_list SEMI_COLON
    (34) statement -> . INLINE_HTML
    (35) statement -> . expr SEMI_COLON
    (36) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (37) statement -> . SEMI_COLON
    (77) function_declaration_statement -> . FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    ENDWHILE        shift and go to state 511
    YIELD           shift and go to state 207
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    FUNCTION        shift and go to state 26
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    inner_statement                shift and go to state 204
    statement                      shift and go to state 205
    function_declaration_statement shift and go to state 206
    expr                           shift and go to state 13
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 484

    (22) statement -> DO statement WHILE LPAREN expr RPAREN . SEMI_COLON

    SEMI_COLON      shift and go to state 512


state 485

    (23) statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON . for_expr RPAREN for_statement
    (46) for_expr -> . empty
    (47) for_expr -> . non_empty_for_expr
    (275) empty -> .
    (48) non_empty_for_expr -> . non_empty_for_expr COMMA expr
    (49) non_empty_for_expr -> . expr
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    RPAREN          reduce using rule 275 (empty -> .)
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    for_expr                       shift and go to state 513
    empty                          shift and go to state 244
    non_empty_for_expr             shift and go to state 245
    expr                           shift and go to state 246
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 486

    (52) switch_case_list -> LBRACE case_list . RBRACE

    RBRACE          shift and go to state 514


state 487

    (53) switch_case_list -> LBRACE SEMI_COLON . case_list RBRACE
    (56) case_list -> . empty
    (57) case_list -> . case_list_no_default CASE expr case_separator inner_statement_list
    (58) case_list -> . case_list_no_default DEFAULT case_separator inner_statement_list
    (275) empty -> .
    (59) case_list_no_default -> . empty
    (60) case_list_no_default -> . case_list_no_default CASE expr case_separator inner_statement_list

    RBRACE          reduce using rule 275 (empty -> .)
    CASE            reduce using rule 275 (empty -> .)
    DEFAULT         reduce using rule 275 (empty -> .)

    case_list                      shift and go to state 515
    empty                          shift and go to state 488
    case_list_no_default           shift and go to state 489

state 488

    (56) case_list -> empty .
    (59) case_list_no_default -> empty .

    RBRACE          reduce using rule 56 (case_list -> empty .)
    ENDSWITCH       reduce using rule 56 (case_list -> empty .)
    CASE            reduce using rule 59 (case_list_no_default -> empty .)
    DEFAULT         reduce using rule 59 (case_list_no_default -> empty .)


state 489

    (57) case_list -> case_list_no_default . CASE expr case_separator inner_statement_list
    (58) case_list -> case_list_no_default . DEFAULT case_separator inner_statement_list
    (60) case_list_no_default -> case_list_no_default . CASE expr case_separator inner_statement_list

    CASE            shift and go to state 516
    DEFAULT         shift and go to state 517


state 490

    (54) switch_case_list -> COLON case_list . ENDSWITCH SEMI_COLON

    ENDSWITCH       shift and go to state 518


state 491

    (55) switch_case_list -> COLON SEMI_COLON . case_list ENDSWITCH SEMI_COLON
    (56) case_list -> . empty
    (57) case_list -> . case_list_no_default CASE expr case_separator inner_statement_list
    (58) case_list -> . case_list_no_default DEFAULT case_separator inner_statement_list
    (275) empty -> .
    (59) case_list_no_default -> . empty
    (60) case_list_no_default -> . case_list_no_default CASE expr case_separator inner_statement_list

    ENDSWITCH       reduce using rule 275 (empty -> .)
    CASE            reduce using rule 275 (empty -> .)
    DEFAULT         reduce using rule 275 (empty -> .)

    case_list                      shift and go to state 519
    empty                          shift and go to state 488
    case_list_no_default           shift and go to state 489

state 492

    (77) function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN . LBRACE inner_statement_list RBRACE

    LBRACE          shift and go to state 520


state 493

    (127) expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE . inner_statement_list RBRACE
    (11) inner_statement_list -> . inner_statement_list inner_statement
    (12) inner_statement_list -> . empty
    (275) empty -> .

    RBRACE          reduce using rule 275 (empty -> .)
    YIELD           reduce using rule 275 (empty -> .)
    LBRACE          reduce using rule 275 (empty -> .)
    IF              reduce using rule 275 (empty -> .)
    WHILE           reduce using rule 275 (empty -> .)
    DO              reduce using rule 275 (empty -> .)
    FOR             reduce using rule 275 (empty -> .)
    SWITCH          reduce using rule 275 (empty -> .)
    BREAK           reduce using rule 275 (empty -> .)
    CONTINUE        reduce using rule 275 (empty -> .)
    RETURN          reduce using rule 275 (empty -> .)
    GLOBAL          reduce using rule 275 (empty -> .)
    STATIC          reduce using rule 275 (empty -> .)
    ECHO            reduce using rule 275 (empty -> .)
    INLINE_HTML     reduce using rule 275 (empty -> .)
    UNSET           reduce using rule 275 (empty -> .)
    SEMI_COLON      reduce using rule 275 (empty -> .)
    FUNCTION        reduce using rule 275 (empty -> .)
    CLONE           reduce using rule 275 (empty -> .)
    LIST            reduce using rule 275 (empty -> .)
    ARRAY           reduce using rule 275 (empty -> .)
    LBRACKET        reduce using rule 275 (empty -> .)
    PLUS            reduce using rule 275 (empty -> .)
    MINUS           reduce using rule 275 (empty -> .)
    NOT             reduce using rule 275 (empty -> .)
    BOOLEAN_NOT     reduce using rule 275 (empty -> .)
    INC             reduce using rule 275 (empty -> .)
    DEC             reduce using rule 275 (empty -> .)
    INT_CAST        reduce using rule 275 (empty -> .)
    ARRAY_CAST      reduce using rule 275 (empty -> .)
    STRING_CAST     reduce using rule 275 (empty -> .)
    DOUBLE_CAST     reduce using rule 275 (empty -> .)
    BOOL_CAST       reduce using rule 275 (empty -> .)
    UNSET_CAST      reduce using rule 275 (empty -> .)
    BINARY_CAST     reduce using rule 275 (empty -> .)
    ISSET           reduce using rule 275 (empty -> .)
    EMPTY           reduce using rule 275 (empty -> .)
    EVAL            reduce using rule 275 (empty -> .)
    INCLUDE         reduce using rule 275 (empty -> .)
    INCLUDE_ONCE    reduce using rule 275 (empty -> .)
    REQUIRE         reduce using rule 275 (empty -> .)
    REQUIRE_ONCE    reduce using rule 275 (empty -> .)
    PRINT           reduce using rule 275 (empty -> .)
    AT              reduce using rule 275 (empty -> .)
    LPAREN          reduce using rule 275 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 275 (empty -> .)
    IDENTIFIER      reduce using rule 275 (empty -> .)
    EXIT            reduce using rule 275 (empty -> .)
    DIE             reduce using rule 275 (empty -> .)
    INT_NUMBER      reduce using rule 275 (empty -> .)
    FLOAT_NUMBER    reduce using rule 275 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 275 (empty -> .)
    FUNC_C          reduce using rule 275 (empty -> .)
    METHOD_C        reduce using rule 275 (empty -> .)
    LINE            reduce using rule 275 (empty -> .)
    FILE            reduce using rule 275 (empty -> .)
    DIR             reduce using rule 275 (empty -> .)
    START_HEREDOC   reduce using rule 275 (empty -> .)
    START_NOWDOC    reduce using rule 275 (empty -> .)
    VARIABLE        reduce using rule 275 (empty -> .)
    DOLLAR          reduce using rule 275 (empty -> .)

    inner_statement_list           shift and go to state 521
    empty                          shift and go to state 87

state 494

    (82) non_empty_parameter_list -> non_empty_parameter_list COMMA parameter .

    COMMA           reduce using rule 82 (non_empty_parameter_list -> non_empty_parameter_list COMMA parameter .)
    RPAREN          reduce using rule 82 (non_empty_parameter_list -> non_empty_parameter_list COMMA parameter .)


state 495

    (86) parameter -> VARIABLE EQUALS static_scalar .

    COMMA           reduce using rule 86 (parameter -> VARIABLE EQUALS static_scalar .)
    RPAREN          reduce using rule 86 (parameter -> VARIABLE EQUALS static_scalar .)


state 496

    (87) parameter -> AND VARIABLE EQUALS . static_scalar
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_scalar                  shift and go to state 522
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 497

    (97) assignment_list_element -> LIST LPAREN assignment_list RPAREN .

    RPAREN          reduce using rule 97 (assignment_list_element -> LIST LPAREN assignment_list RPAREN .)
    COMMA           reduce using rule 97 (assignment_list_element -> LIST LPAREN assignment_list RPAREN .)


state 498

    (92) expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .)
    LBRACE          reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .)
    LOGICAL_AND     reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .)
    LOGICAL_OR      reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .)
    LOGICAL_XOR     reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .)
    RPAREN          reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .)
    COMMA           reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .)
    DOUBLE_ARROW    reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .)
    RBRACE          reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .)
    COLON           reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .)
    RBRACKET        reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .)
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117

  ! BOOLEAN_AND     [ reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! AND             [ reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! OR              [ reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! XOR             [ reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! CONCAT          [ reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! PLUS            [ reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! MINUS           [ reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! MUL             [ reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! DIV             [ reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! SL              [ reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! SR              [ reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! MOD             [ reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! LESS_THAN       [ reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! GREATER_THAN    [ reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! INSTANCEOF      [ reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! SPACESHIP       [ reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! QUESTION        [ reduce using rule 92 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! LBRACE          [ shift and go to state 90 ]
  ! LOGICAL_AND     [ shift and go to state 93 ]
  ! LOGICAL_OR      [ shift and go to state 94 ]
  ! LOGICAL_XOR     [ shift and go to state 95 ]


state 499

    (117) non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW expr .
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    COMMA           reduce using rule 117 (non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW expr .)
    RBRACKET        reduce using rule 117 (non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW expr .)
    RPAREN          reduce using rule 117 (non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW expr .)
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 500

    (116) non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW AND . variable
    (98) variable -> . base_variable_with_function_calls
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    IDENTIFIER      shift and go to state 171
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    variable                       shift and go to state 523
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 501

    (267) encaps_var -> VARIABLE LBRACKET encaps_var_offset RBRACKET .

    DOUBLE_QUOTE    reduce using rule 267 (encaps_var -> VARIABLE LBRACKET encaps_var_offset RBRACKET .)
    ENCAPSED_AND_WHITESPACE reduce using rule 267 (encaps_var -> VARIABLE LBRACKET encaps_var_offset RBRACKET .)
    VARIABLE        reduce using rule 267 (encaps_var -> VARIABLE LBRACKET encaps_var_offset RBRACKET .)
    DOLLAR_OPEN_CURLY_BRACES reduce using rule 267 (encaps_var -> VARIABLE LBRACKET encaps_var_offset RBRACKET .)
    CURLY_OPEN      reduce using rule 267 (encaps_var -> VARIABLE LBRACKET encaps_var_offset RBRACKET .)
    END_HEREDOC     reduce using rule 267 (encaps_var -> VARIABLE LBRACKET encaps_var_offset RBRACKET .)


state 502

    (270) encaps_var -> DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr . RBRACKET RBRACE
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    RBRACKET        shift and go to state 524
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 503

    (230) static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .

    BOOLEAN_AND     reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    BOOLEAN_OR      reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    LOGICAL_AND     reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    LOGICAL_OR      reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    LOGICAL_XOR     reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    AND             reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    OR              reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    XOR             reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    CONCAT          reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    PLUS            reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    MINUS           reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    MUL             reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    DIV             reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    SL              reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    SR              reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    MOD             reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    IS_IDENTICAL    reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    IS_EQUAL_TO     reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    IS_NOT_EQUAL    reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    LESS_THAN       reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    GREATER_THAN    reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    GRATER_THAN_OR_EQUAL reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    SEMI_COLON      reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    COMMA           reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    RPAREN          reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    DOUBLE_ARROW    reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    RBRACKET        reduce using rule 230 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)


state 504

    (234) static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    COMMA           reduce using rule 234 (static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA static_expr .)
    RBRACKET        reduce using rule 234 (static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA static_expr .)
    RPAREN          reduce using rule 234 (static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA static_expr .)
    BOOLEAN_AND     shift and go to state 375
    BOOLEAN_OR      shift and go to state 376
    LOGICAL_AND     shift and go to state 377
    LOGICAL_OR      shift and go to state 378
    LOGICAL_XOR     shift and go to state 379
    AND             shift and go to state 380
    OR              shift and go to state 381
    XOR             shift and go to state 382
    CONCAT          shift and go to state 383
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    SL              shift and go to state 388
    SR              shift and go to state 389
    MOD             shift and go to state 390
    IS_IDENTICAL    shift and go to state 391
    IS_NOT_IDENTICAL shift and go to state 392
    IS_EQUAL_TO     shift and go to state 393
    IS_NOT_EQUAL    shift and go to state 394
    LESS_THAN       shift and go to state 395
    LESS_THAN_OR_EQUAL shift and go to state 396
    GREATER_THAN    shift and go to state 397
    GRATER_THAN_OR_EQUAL shift and go to state 398


state 505

    (236) static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA static_scalar . DOUBLE_ARROW static_expr
    (238) static_expr -> static_scalar .

    DOUBLE_ARROW    shift and go to state 525
    BOOLEAN_AND     reduce using rule 238 (static_expr -> static_scalar .)
    BOOLEAN_OR      reduce using rule 238 (static_expr -> static_scalar .)
    LOGICAL_AND     reduce using rule 238 (static_expr -> static_scalar .)
    LOGICAL_OR      reduce using rule 238 (static_expr -> static_scalar .)
    LOGICAL_XOR     reduce using rule 238 (static_expr -> static_scalar .)
    AND             reduce using rule 238 (static_expr -> static_scalar .)
    OR              reduce using rule 238 (static_expr -> static_scalar .)
    XOR             reduce using rule 238 (static_expr -> static_scalar .)
    CONCAT          reduce using rule 238 (static_expr -> static_scalar .)
    PLUS            reduce using rule 238 (static_expr -> static_scalar .)
    MINUS           reduce using rule 238 (static_expr -> static_scalar .)
    MUL             reduce using rule 238 (static_expr -> static_scalar .)
    DIV             reduce using rule 238 (static_expr -> static_scalar .)
    SL              reduce using rule 238 (static_expr -> static_scalar .)
    SR              reduce using rule 238 (static_expr -> static_scalar .)
    MOD             reduce using rule 238 (static_expr -> static_scalar .)
    IS_IDENTICAL    reduce using rule 238 (static_expr -> static_scalar .)
    IS_NOT_IDENTICAL reduce using rule 238 (static_expr -> static_scalar .)
    IS_EQUAL_TO     reduce using rule 238 (static_expr -> static_scalar .)
    IS_NOT_EQUAL    reduce using rule 238 (static_expr -> static_scalar .)
    LESS_THAN       reduce using rule 238 (static_expr -> static_scalar .)
    LESS_THAN_OR_EQUAL reduce using rule 238 (static_expr -> static_scalar .)
    GREATER_THAN    reduce using rule 238 (static_expr -> static_scalar .)
    GRATER_THAN_OR_EQUAL reduce using rule 238 (static_expr -> static_scalar .)
    COMMA           reduce using rule 238 (static_expr -> static_scalar .)
    RBRACKET        reduce using rule 238 (static_expr -> static_scalar .)
    RPAREN          reduce using rule 238 (static_expr -> static_scalar .)


state 506

    (237) static_non_empty_array_pair_list -> static_scalar DOUBLE_ARROW static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    COMMA           reduce using rule 237 (static_non_empty_array_pair_list -> static_scalar DOUBLE_ARROW static_expr .)
    RBRACKET        reduce using rule 237 (static_non_empty_array_pair_list -> static_scalar DOUBLE_ARROW static_expr .)
    RPAREN          reduce using rule 237 (static_non_empty_array_pair_list -> static_scalar DOUBLE_ARROW static_expr .)
    BOOLEAN_AND     shift and go to state 375
    BOOLEAN_OR      shift and go to state 376
    LOGICAL_AND     shift and go to state 377
    LOGICAL_OR      shift and go to state 378
    LOGICAL_XOR     shift and go to state 379
    AND             shift and go to state 380
    OR              shift and go to state 381
    XOR             shift and go to state 382
    CONCAT          shift and go to state 383
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    SL              shift and go to state 388
    SR              shift and go to state 389
    MOD             shift and go to state 390
    IS_IDENTICAL    shift and go to state 391
    IS_NOT_IDENTICAL shift and go to state 392
    IS_EQUAL_TO     shift and go to state 393
    IS_NOT_EQUAL    shift and go to state 394
    LESS_THAN       shift and go to state 395
    LESS_THAN_OR_EQUAL shift and go to state 396
    GREATER_THAN    shift and go to state 397
    GRATER_THAN_OR_EQUAL shift and go to state 398


state 507

    (19) statement -> IF LPAREN expr RPAREN statement elseif_list ELSE . statement
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list
    (19) statement -> . IF LPAREN expr RPAREN statement elseif_list ELSE statement
    (20) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (21) statement -> . WHILE LPAREN expr RPAREN while_statement
    (22) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (23) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (24) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (25) statement -> . BREAK SEMI_COLON
    (26) statement -> . BREAK expr SEMI_COLON
    (27) statement -> . CONTINUE SEMI_COLON
    (28) statement -> . CONTINUE expr SEMI_COLON
    (29) statement -> . RETURN SEMI_COLON
    (30) statement -> . RETURN expr SEMI_COLON
    (31) statement -> . GLOBAL global_var_list SEMI_COLON
    (32) statement -> . STATIC static_var_list SEMI_COLON
    (33) statement -> . ECHO echo_expr_list SEMI_COLON
    (34) statement -> . INLINE_HTML
    (35) statement -> . expr SEMI_COLON
    (36) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (37) statement -> . SEMI_COLON
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 13
    statement                      shift and go to state 526
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 508

    (39) elseif_list -> elseif_list ELSEIF . LPAREN expr RPAREN statement

    LPAREN          shift and go to state 527


state 509

    (20) statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list . new_else_single ENDIF SEMI_COLON
    (41) new_elseif_list -> new_elseif_list . ELSEIF LPAREN expr RPAREN COLON inner_statement_list
    (42) new_else_single -> . empty
    (43) new_else_single -> . ELSE COLON inner_statement_list
    (275) empty -> .

    ELSEIF          shift and go to state 529
    ELSE            shift and go to state 531
    ENDIF           reduce using rule 275 (empty -> .)

    new_else_single                shift and go to state 528
    empty                          shift and go to state 530

state 510

    (40) new_elseif_list -> empty .

    ELSEIF          reduce using rule 40 (new_elseif_list -> empty .)
    ELSE            reduce using rule 40 (new_elseif_list -> empty .)
    ENDIF           reduce using rule 40 (new_elseif_list -> empty .)


state 511

    (45) while_statement -> COLON inner_statement_list ENDWHILE . SEMI_COLON

    SEMI_COLON      shift and go to state 532


state 512

    (22) statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .

    HALT_COMPILER   reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    CONST           reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    LBRACE          reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    IF              reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    WHILE           reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    DO              reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    FOR             reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    SWITCH          reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    BREAK           reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    CONTINUE        reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    RETURN          reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    GLOBAL          reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    STATIC          reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    ECHO            reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    INLINE_HTML     reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    UNSET           reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    SEMI_COLON      reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    FUNCTION        reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    CLONE           reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    LIST            reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    ARRAY           reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    LBRACKET        reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    PLUS            reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    MINUS           reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    NOT             reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    INC             reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    DEC             reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    INT_CAST        reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    ARRAY_CAST      reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    STRING_CAST     reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    BOOL_CAST       reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    UNSET_CAST      reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    BINARY_CAST     reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    ISSET           reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    EMPTY           reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    EVAL            reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    INCLUDE         reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    REQUIRE         reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    PRINT           reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    AT              reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    LPAREN          reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    IDENTIFIER      reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    EXIT            reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    DIE             reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    INT_NUMBER      reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    FUNC_C          reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    METHOD_C        reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    LINE            reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    FILE            reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    DIR             reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    START_HEREDOC   reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    START_NOWDOC    reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    VARIABLE        reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    DOLLAR          reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    $end            reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    RBRACE          reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    YIELD           reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    ELSE            reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    ELSEIF          reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    ENDIF           reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    ENDWHILE        reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    ENDSWITCH       reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    ENDFOR          reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    CASE            reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    DEFAULT         reduce using rule 22 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)


state 513

    (23) statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr . RPAREN for_statement

    RPAREN          shift and go to state 533


state 514

    (52) switch_case_list -> LBRACE case_list RBRACE .

    HALT_COMPILER   reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    CONST           reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    LBRACE          reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    IF              reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    WHILE           reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    DO              reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    FOR             reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    SWITCH          reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    BREAK           reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    CONTINUE        reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    RETURN          reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    GLOBAL          reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    STATIC          reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    ECHO            reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    INLINE_HTML     reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    UNSET           reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    SEMI_COLON      reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    FUNCTION        reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    CLONE           reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    LIST            reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    ARRAY           reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    LBRACKET        reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    PLUS            reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    MINUS           reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    NOT             reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    BOOLEAN_NOT     reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    INC             reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    DEC             reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    INT_CAST        reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    ARRAY_CAST      reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    STRING_CAST     reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    DOUBLE_CAST     reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    BOOL_CAST       reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    UNSET_CAST      reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    BINARY_CAST     reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    ISSET           reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    EMPTY           reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    EVAL            reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    INCLUDE         reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    INCLUDE_ONCE    reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    REQUIRE         reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    REQUIRE_ONCE    reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    PRINT           reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    AT              reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    LPAREN          reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    DOUBLE_QUOTE    reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    IDENTIFIER      reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    EXIT            reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    DIE             reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    INT_NUMBER      reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    FLOAT_NUMBER    reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    CONSTANT_ENCAPSED_STRING reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    FUNC_C          reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    METHOD_C        reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    LINE            reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    FILE            reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    DIR             reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    START_HEREDOC   reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    START_NOWDOC    reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    VARIABLE        reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    DOLLAR          reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    $end            reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    RBRACE          reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    YIELD           reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    ELSE            reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    ELSEIF          reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    ENDIF           reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    ENDWHILE        reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    ENDSWITCH       reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    ENDFOR          reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    CASE            reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)
    DEFAULT         reduce using rule 52 (switch_case_list -> LBRACE case_list RBRACE .)


state 515

    (53) switch_case_list -> LBRACE SEMI_COLON case_list . RBRACE

    RBRACE          shift and go to state 534


state 516

    (57) case_list -> case_list_no_default CASE . expr case_separator inner_statement_list
    (60) case_list_no_default -> case_list_no_default CASE . expr case_separator inner_statement_list
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 535
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 517

    (58) case_list -> case_list_no_default DEFAULT . case_separator inner_statement_list
    (61) case_separator -> . COLON
    (62) case_separator -> . SEMI_COLON

    COLON           shift and go to state 537
    SEMI_COLON      shift and go to state 538

    case_separator                 shift and go to state 536

state 518

    (54) switch_case_list -> COLON case_list ENDSWITCH . SEMI_COLON

    SEMI_COLON      shift and go to state 539


state 519

    (55) switch_case_list -> COLON SEMI_COLON case_list . ENDSWITCH SEMI_COLON

    ENDSWITCH       shift and go to state 540


state 520

    (77) function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE . inner_statement_list RBRACE
    (11) inner_statement_list -> . inner_statement_list inner_statement
    (12) inner_statement_list -> . empty
    (275) empty -> .

    RBRACE          reduce using rule 275 (empty -> .)
    YIELD           reduce using rule 275 (empty -> .)
    LBRACE          reduce using rule 275 (empty -> .)
    IF              reduce using rule 275 (empty -> .)
    WHILE           reduce using rule 275 (empty -> .)
    DO              reduce using rule 275 (empty -> .)
    FOR             reduce using rule 275 (empty -> .)
    SWITCH          reduce using rule 275 (empty -> .)
    BREAK           reduce using rule 275 (empty -> .)
    CONTINUE        reduce using rule 275 (empty -> .)
    RETURN          reduce using rule 275 (empty -> .)
    GLOBAL          reduce using rule 275 (empty -> .)
    STATIC          reduce using rule 275 (empty -> .)
    ECHO            reduce using rule 275 (empty -> .)
    INLINE_HTML     reduce using rule 275 (empty -> .)
    UNSET           reduce using rule 275 (empty -> .)
    SEMI_COLON      reduce using rule 275 (empty -> .)
    FUNCTION        reduce using rule 275 (empty -> .)
    CLONE           reduce using rule 275 (empty -> .)
    LIST            reduce using rule 275 (empty -> .)
    ARRAY           reduce using rule 275 (empty -> .)
    LBRACKET        reduce using rule 275 (empty -> .)
    PLUS            reduce using rule 275 (empty -> .)
    MINUS           reduce using rule 275 (empty -> .)
    NOT             reduce using rule 275 (empty -> .)
    BOOLEAN_NOT     reduce using rule 275 (empty -> .)
    INC             reduce using rule 275 (empty -> .)
    DEC             reduce using rule 275 (empty -> .)
    INT_CAST        reduce using rule 275 (empty -> .)
    ARRAY_CAST      reduce using rule 275 (empty -> .)
    STRING_CAST     reduce using rule 275 (empty -> .)
    DOUBLE_CAST     reduce using rule 275 (empty -> .)
    BOOL_CAST       reduce using rule 275 (empty -> .)
    UNSET_CAST      reduce using rule 275 (empty -> .)
    BINARY_CAST     reduce using rule 275 (empty -> .)
    ISSET           reduce using rule 275 (empty -> .)
    EMPTY           reduce using rule 275 (empty -> .)
    EVAL            reduce using rule 275 (empty -> .)
    INCLUDE         reduce using rule 275 (empty -> .)
    INCLUDE_ONCE    reduce using rule 275 (empty -> .)
    REQUIRE         reduce using rule 275 (empty -> .)
    REQUIRE_ONCE    reduce using rule 275 (empty -> .)
    PRINT           reduce using rule 275 (empty -> .)
    AT              reduce using rule 275 (empty -> .)
    LPAREN          reduce using rule 275 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 275 (empty -> .)
    IDENTIFIER      reduce using rule 275 (empty -> .)
    EXIT            reduce using rule 275 (empty -> .)
    DIE             reduce using rule 275 (empty -> .)
    INT_NUMBER      reduce using rule 275 (empty -> .)
    FLOAT_NUMBER    reduce using rule 275 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 275 (empty -> .)
    FUNC_C          reduce using rule 275 (empty -> .)
    METHOD_C        reduce using rule 275 (empty -> .)
    LINE            reduce using rule 275 (empty -> .)
    FILE            reduce using rule 275 (empty -> .)
    DIR             reduce using rule 275 (empty -> .)
    START_HEREDOC   reduce using rule 275 (empty -> .)
    START_NOWDOC    reduce using rule 275 (empty -> .)
    VARIABLE        reduce using rule 275 (empty -> .)
    DOLLAR          reduce using rule 275 (empty -> .)

    inner_statement_list           shift and go to state 541
    empty                          shift and go to state 87

state 521

    (127) expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list . RBRACE
    (11) inner_statement_list -> inner_statement_list . inner_statement
    (13) inner_statement -> . statement
    (14) inner_statement -> . function_declaration_statement
    (15) inner_statement -> . YIELD SEMI_COLON
    (16) inner_statement -> . YIELD expr SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list
    (19) statement -> . IF LPAREN expr RPAREN statement elseif_list ELSE statement
    (20) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (21) statement -> . WHILE LPAREN expr RPAREN while_statement
    (22) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (23) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (24) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (25) statement -> . BREAK SEMI_COLON
    (26) statement -> . BREAK expr SEMI_COLON
    (27) statement -> . CONTINUE SEMI_COLON
    (28) statement -> . CONTINUE expr SEMI_COLON
    (29) statement -> . RETURN SEMI_COLON
    (30) statement -> . RETURN expr SEMI_COLON
    (31) statement -> . GLOBAL global_var_list SEMI_COLON
    (32) statement -> . STATIC static_var_list SEMI_COLON
    (33) statement -> . ECHO echo_expr_list SEMI_COLON
    (34) statement -> . INLINE_HTML
    (35) statement -> . expr SEMI_COLON
    (36) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (37) statement -> . SEMI_COLON
    (77) function_declaration_statement -> . FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    RBRACE          shift and go to state 542
    YIELD           shift and go to state 207
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    FUNCTION        shift and go to state 26
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    inner_statement                shift and go to state 204
    statement                      shift and go to state 205
    function_declaration_statement shift and go to state 206
    expr                           shift and go to state 13
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 522

    (87) parameter -> AND VARIABLE EQUALS static_scalar .

    COMMA           reduce using rule 87 (parameter -> AND VARIABLE EQUALS static_scalar .)
    RPAREN          reduce using rule 87 (parameter -> AND VARIABLE EQUALS static_scalar .)


state 523

    (116) non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW AND variable .

    COMMA           reduce using rule 116 (non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW AND variable .)
    RBRACKET        reduce using rule 116 (non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW AND variable .)
    RPAREN          reduce using rule 116 (non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW AND variable .)


state 524

    (270) encaps_var -> DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr RBRACKET . RBRACE

    RBRACE          shift and go to state 543


state 525

    (236) static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA static_scalar DOUBLE_ARROW . static_expr
    (238) static_expr -> . static_scalar
    (239) static_expr -> . static_expr BOOLEAN_AND static_expr
    (240) static_expr -> . static_expr BOOLEAN_OR static_expr
    (241) static_expr -> . static_expr LOGICAL_AND static_expr
    (242) static_expr -> . static_expr LOGICAL_OR static_expr
    (243) static_expr -> . static_expr LOGICAL_XOR static_expr
    (244) static_expr -> . static_expr AND static_expr
    (245) static_expr -> . static_expr OR static_expr
    (246) static_expr -> . static_expr XOR static_expr
    (247) static_expr -> . static_expr CONCAT static_expr
    (248) static_expr -> . static_expr PLUS static_expr
    (249) static_expr -> . static_expr MINUS static_expr
    (250) static_expr -> . static_expr MUL static_expr
    (251) static_expr -> . static_expr DIV static_expr
    (252) static_expr -> . static_expr SL static_expr
    (253) static_expr -> . static_expr SR static_expr
    (254) static_expr -> . static_expr MOD static_expr
    (255) static_expr -> . static_expr IS_IDENTICAL static_expr
    (256) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (257) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (258) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (259) static_expr -> . static_expr LESS_THAN static_expr
    (260) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> . static_expr GREATER_THAN static_expr
    (262) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (263) static_expr -> . LPAREN static_expr RPAREN
    (219) static_scalar -> . common_scalar
    (220) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (221) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (222) static_scalar -> . static_heredoc
    (223) static_scalar -> . nowdoc
    (227) static_scalar -> . IDENTIFIER
    (228) static_scalar -> . PLUS static_scalar
    (229) static_scalar -> . MINUS static_scalar
    (230) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (231) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (224) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 319
    DOUBLE_QUOTE    shift and go to state 321
    IDENTIFIER      shift and go to state 314
    PLUS            shift and go to state 317
    MINUS           shift and go to state 318
    ARRAY           shift and go to state 324
    LBRACKET        shift and go to state 325
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 326
    START_NOWDOC    shift and go to state 75

    static_scalar                  shift and go to state 316
    static_expr                    shift and go to state 544
    common_scalar                  shift and go to state 320
    static_heredoc                 shift and go to state 322
    nowdoc                         shift and go to state 323

state 526

    (19) statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .

    HALT_COMPILER   reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    CONST           reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    LBRACE          reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    IF              reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    WHILE           reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    DO              reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    FOR             reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    SWITCH          reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    BREAK           reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    CONTINUE        reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    RETURN          reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    GLOBAL          reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    STATIC          reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    ECHO            reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    INLINE_HTML     reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    UNSET           reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    SEMI_COLON      reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    FUNCTION        reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    CLONE           reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    LIST            reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    ARRAY           reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    LBRACKET        reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    PLUS            reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    MINUS           reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    NOT             reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    BOOLEAN_NOT     reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    INC             reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    DEC             reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    INT_CAST        reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    ARRAY_CAST      reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    STRING_CAST     reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    DOUBLE_CAST     reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    BOOL_CAST       reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    UNSET_CAST      reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    BINARY_CAST     reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    ISSET           reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    EMPTY           reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    EVAL            reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    INCLUDE         reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    INCLUDE_ONCE    reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    REQUIRE         reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    REQUIRE_ONCE    reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    PRINT           reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    AT              reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    LPAREN          reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    DOUBLE_QUOTE    reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    IDENTIFIER      reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    EXIT            reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    DIE             reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    INT_NUMBER      reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    FLOAT_NUMBER    reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    FUNC_C          reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    METHOD_C        reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    LINE            reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    FILE            reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    DIR             reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    START_HEREDOC   reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    START_NOWDOC    reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    VARIABLE        reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    DOLLAR          reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    $end            reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    RBRACE          reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    YIELD           reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    ELSE            reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    ELSEIF          reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    ENDIF           reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    ENDWHILE        reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    ENDSWITCH       reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    ENDFOR          reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    CASE            reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)
    DEFAULT         reduce using rule 19 (statement -> IF LPAREN expr RPAREN statement elseif_list ELSE statement .)


state 527

    (39) elseif_list -> elseif_list ELSEIF LPAREN . expr RPAREN statement
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 545
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 528

    (20) statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single . ENDIF SEMI_COLON

    ENDIF           shift and go to state 546


state 529

    (41) new_elseif_list -> new_elseif_list ELSEIF . LPAREN expr RPAREN COLON inner_statement_list

    LPAREN          shift and go to state 547


state 530

    (42) new_else_single -> empty .

    ENDIF           reduce using rule 42 (new_else_single -> empty .)


state 531

    (43) new_else_single -> ELSE . COLON inner_statement_list

    COLON           shift and go to state 548


state 532

    (45) while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .

    ELSE            reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    ELSEIF          reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    HALT_COMPILER   reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    CONST           reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    LBRACE          reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    IF              reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    WHILE           reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    DO              reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    FOR             reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    SWITCH          reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    BREAK           reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    CONTINUE        reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    RETURN          reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    GLOBAL          reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    STATIC          reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    ECHO            reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    INLINE_HTML     reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    UNSET           reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    SEMI_COLON      reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    FUNCTION        reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    CLONE           reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    LIST            reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    ARRAY           reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    LBRACKET        reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    PLUS            reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    MINUS           reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    NOT             reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    INC             reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    DEC             reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    INT_CAST        reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    ARRAY_CAST      reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    STRING_CAST     reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    BOOL_CAST       reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    UNSET_CAST      reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    BINARY_CAST     reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    ISSET           reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    EMPTY           reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    EVAL            reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    INCLUDE         reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    REQUIRE         reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    PRINT           reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    AT              reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    LPAREN          reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    IDENTIFIER      reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    EXIT            reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    DIE             reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    INT_NUMBER      reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    FUNC_C          reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    METHOD_C        reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    LINE            reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    FILE            reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    DIR             reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    START_HEREDOC   reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    START_NOWDOC    reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    VARIABLE        reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    DOLLAR          reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    $end            reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    RBRACE          reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    YIELD           reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    ENDIF           reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    ENDWHILE        reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    ENDSWITCH       reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    ENDFOR          reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    CASE            reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    DEFAULT         reduce using rule 45 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)


state 533

    (23) statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN . for_statement
    (50) for_statement -> . statement
    (51) for_statement -> . COLON inner_statement_list ENDFOR SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list
    (19) statement -> . IF LPAREN expr RPAREN statement elseif_list ELSE statement
    (20) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (21) statement -> . WHILE LPAREN expr RPAREN while_statement
    (22) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (23) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (24) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (25) statement -> . BREAK SEMI_COLON
    (26) statement -> . BREAK expr SEMI_COLON
    (27) statement -> . CONTINUE SEMI_COLON
    (28) statement -> . CONTINUE expr SEMI_COLON
    (29) statement -> . RETURN SEMI_COLON
    (30) statement -> . RETURN expr SEMI_COLON
    (31) statement -> . GLOBAL global_var_list SEMI_COLON
    (32) statement -> . STATIC static_var_list SEMI_COLON
    (33) statement -> . ECHO echo_expr_list SEMI_COLON
    (34) statement -> . INLINE_HTML
    (35) statement -> . expr SEMI_COLON
    (36) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (37) statement -> . SEMI_COLON
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    COLON           shift and go to state 551
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    for_statement                  shift and go to state 549
    statement                      shift and go to state 550
    expr                           shift and go to state 13
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 534

    (53) switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .

    HALT_COMPILER   reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    CONST           reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    LBRACE          reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    IF              reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    WHILE           reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    DO              reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    FOR             reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    SWITCH          reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    BREAK           reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    CONTINUE        reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    RETURN          reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    GLOBAL          reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    STATIC          reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    ECHO            reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    INLINE_HTML     reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    UNSET           reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    SEMI_COLON      reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    FUNCTION        reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    CLONE           reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    LIST            reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    ARRAY           reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    LBRACKET        reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    PLUS            reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    MINUS           reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    NOT             reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    BOOLEAN_NOT     reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    INC             reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    DEC             reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    INT_CAST        reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    ARRAY_CAST      reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    STRING_CAST     reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    DOUBLE_CAST     reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    BOOL_CAST       reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    UNSET_CAST      reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    BINARY_CAST     reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    ISSET           reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    EMPTY           reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    EVAL            reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    INCLUDE         reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    INCLUDE_ONCE    reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    REQUIRE         reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    REQUIRE_ONCE    reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    PRINT           reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    AT              reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    LPAREN          reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    DOUBLE_QUOTE    reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    IDENTIFIER      reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    EXIT            reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    DIE             reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    INT_NUMBER      reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    FLOAT_NUMBER    reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    CONSTANT_ENCAPSED_STRING reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    FUNC_C          reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    METHOD_C        reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    LINE            reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    FILE            reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    DIR             reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    START_HEREDOC   reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    START_NOWDOC    reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    VARIABLE        reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    DOLLAR          reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    $end            reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    RBRACE          reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    YIELD           reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    ELSE            reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    ELSEIF          reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    ENDIF           reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    ENDWHILE        reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    ENDSWITCH       reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    ENDFOR          reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    CASE            reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    DEFAULT         reduce using rule 53 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)


state 535

    (57) case_list -> case_list_no_default CASE expr . case_separator inner_statement_list
    (60) case_list_no_default -> case_list_no_default CASE expr . case_separator inner_statement_list
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr
    (61) case_separator -> . COLON
    (62) case_separator -> . SEMI_COLON

    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117
    COLON           shift and go to state 537
    SEMI_COLON      shift and go to state 538

    case_separator                 shift and go to state 552

state 536

    (58) case_list -> case_list_no_default DEFAULT case_separator . inner_statement_list
    (11) inner_statement_list -> . inner_statement_list inner_statement
    (12) inner_statement_list -> . empty
    (275) empty -> .

    YIELD           reduce using rule 275 (empty -> .)
    LBRACE          reduce using rule 275 (empty -> .)
    IF              reduce using rule 275 (empty -> .)
    WHILE           reduce using rule 275 (empty -> .)
    DO              reduce using rule 275 (empty -> .)
    FOR             reduce using rule 275 (empty -> .)
    SWITCH          reduce using rule 275 (empty -> .)
    BREAK           reduce using rule 275 (empty -> .)
    CONTINUE        reduce using rule 275 (empty -> .)
    RETURN          reduce using rule 275 (empty -> .)
    GLOBAL          reduce using rule 275 (empty -> .)
    STATIC          reduce using rule 275 (empty -> .)
    ECHO            reduce using rule 275 (empty -> .)
    INLINE_HTML     reduce using rule 275 (empty -> .)
    UNSET           reduce using rule 275 (empty -> .)
    SEMI_COLON      reduce using rule 275 (empty -> .)
    FUNCTION        reduce using rule 275 (empty -> .)
    CLONE           reduce using rule 275 (empty -> .)
    LIST            reduce using rule 275 (empty -> .)
    ARRAY           reduce using rule 275 (empty -> .)
    LBRACKET        reduce using rule 275 (empty -> .)
    PLUS            reduce using rule 275 (empty -> .)
    MINUS           reduce using rule 275 (empty -> .)
    NOT             reduce using rule 275 (empty -> .)
    BOOLEAN_NOT     reduce using rule 275 (empty -> .)
    INC             reduce using rule 275 (empty -> .)
    DEC             reduce using rule 275 (empty -> .)
    INT_CAST        reduce using rule 275 (empty -> .)
    ARRAY_CAST      reduce using rule 275 (empty -> .)
    STRING_CAST     reduce using rule 275 (empty -> .)
    DOUBLE_CAST     reduce using rule 275 (empty -> .)
    BOOL_CAST       reduce using rule 275 (empty -> .)
    UNSET_CAST      reduce using rule 275 (empty -> .)
    BINARY_CAST     reduce using rule 275 (empty -> .)
    ISSET           reduce using rule 275 (empty -> .)
    EMPTY           reduce using rule 275 (empty -> .)
    EVAL            reduce using rule 275 (empty -> .)
    INCLUDE         reduce using rule 275 (empty -> .)
    INCLUDE_ONCE    reduce using rule 275 (empty -> .)
    REQUIRE         reduce using rule 275 (empty -> .)
    REQUIRE_ONCE    reduce using rule 275 (empty -> .)
    PRINT           reduce using rule 275 (empty -> .)
    AT              reduce using rule 275 (empty -> .)
    LPAREN          reduce using rule 275 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 275 (empty -> .)
    IDENTIFIER      reduce using rule 275 (empty -> .)
    EXIT            reduce using rule 275 (empty -> .)
    DIE             reduce using rule 275 (empty -> .)
    INT_NUMBER      reduce using rule 275 (empty -> .)
    FLOAT_NUMBER    reduce using rule 275 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 275 (empty -> .)
    FUNC_C          reduce using rule 275 (empty -> .)
    METHOD_C        reduce using rule 275 (empty -> .)
    LINE            reduce using rule 275 (empty -> .)
    FILE            reduce using rule 275 (empty -> .)
    DIR             reduce using rule 275 (empty -> .)
    START_HEREDOC   reduce using rule 275 (empty -> .)
    START_NOWDOC    reduce using rule 275 (empty -> .)
    VARIABLE        reduce using rule 275 (empty -> .)
    DOLLAR          reduce using rule 275 (empty -> .)
    RBRACE          reduce using rule 275 (empty -> .)
    ENDSWITCH       reduce using rule 275 (empty -> .)

    inner_statement_list           shift and go to state 553
    empty                          shift and go to state 87

state 537

    (61) case_separator -> COLON .

    YIELD           reduce using rule 61 (case_separator -> COLON .)
    LBRACE          reduce using rule 61 (case_separator -> COLON .)
    IF              reduce using rule 61 (case_separator -> COLON .)
    WHILE           reduce using rule 61 (case_separator -> COLON .)
    DO              reduce using rule 61 (case_separator -> COLON .)
    FOR             reduce using rule 61 (case_separator -> COLON .)
    SWITCH          reduce using rule 61 (case_separator -> COLON .)
    BREAK           reduce using rule 61 (case_separator -> COLON .)
    CONTINUE        reduce using rule 61 (case_separator -> COLON .)
    RETURN          reduce using rule 61 (case_separator -> COLON .)
    GLOBAL          reduce using rule 61 (case_separator -> COLON .)
    STATIC          reduce using rule 61 (case_separator -> COLON .)
    ECHO            reduce using rule 61 (case_separator -> COLON .)
    INLINE_HTML     reduce using rule 61 (case_separator -> COLON .)
    UNSET           reduce using rule 61 (case_separator -> COLON .)
    SEMI_COLON      reduce using rule 61 (case_separator -> COLON .)
    FUNCTION        reduce using rule 61 (case_separator -> COLON .)
    CLONE           reduce using rule 61 (case_separator -> COLON .)
    LIST            reduce using rule 61 (case_separator -> COLON .)
    ARRAY           reduce using rule 61 (case_separator -> COLON .)
    LBRACKET        reduce using rule 61 (case_separator -> COLON .)
    PLUS            reduce using rule 61 (case_separator -> COLON .)
    MINUS           reduce using rule 61 (case_separator -> COLON .)
    NOT             reduce using rule 61 (case_separator -> COLON .)
    BOOLEAN_NOT     reduce using rule 61 (case_separator -> COLON .)
    INC             reduce using rule 61 (case_separator -> COLON .)
    DEC             reduce using rule 61 (case_separator -> COLON .)
    INT_CAST        reduce using rule 61 (case_separator -> COLON .)
    ARRAY_CAST      reduce using rule 61 (case_separator -> COLON .)
    STRING_CAST     reduce using rule 61 (case_separator -> COLON .)
    DOUBLE_CAST     reduce using rule 61 (case_separator -> COLON .)
    BOOL_CAST       reduce using rule 61 (case_separator -> COLON .)
    UNSET_CAST      reduce using rule 61 (case_separator -> COLON .)
    BINARY_CAST     reduce using rule 61 (case_separator -> COLON .)
    ISSET           reduce using rule 61 (case_separator -> COLON .)
    EMPTY           reduce using rule 61 (case_separator -> COLON .)
    EVAL            reduce using rule 61 (case_separator -> COLON .)
    INCLUDE         reduce using rule 61 (case_separator -> COLON .)
    INCLUDE_ONCE    reduce using rule 61 (case_separator -> COLON .)
    REQUIRE         reduce using rule 61 (case_separator -> COLON .)
    REQUIRE_ONCE    reduce using rule 61 (case_separator -> COLON .)
    PRINT           reduce using rule 61 (case_separator -> COLON .)
    AT              reduce using rule 61 (case_separator -> COLON .)
    LPAREN          reduce using rule 61 (case_separator -> COLON .)
    DOUBLE_QUOTE    reduce using rule 61 (case_separator -> COLON .)
    IDENTIFIER      reduce using rule 61 (case_separator -> COLON .)
    EXIT            reduce using rule 61 (case_separator -> COLON .)
    DIE             reduce using rule 61 (case_separator -> COLON .)
    INT_NUMBER      reduce using rule 61 (case_separator -> COLON .)
    FLOAT_NUMBER    reduce using rule 61 (case_separator -> COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 61 (case_separator -> COLON .)
    FUNC_C          reduce using rule 61 (case_separator -> COLON .)
    METHOD_C        reduce using rule 61 (case_separator -> COLON .)
    LINE            reduce using rule 61 (case_separator -> COLON .)
    FILE            reduce using rule 61 (case_separator -> COLON .)
    DIR             reduce using rule 61 (case_separator -> COLON .)
    START_HEREDOC   reduce using rule 61 (case_separator -> COLON .)
    START_NOWDOC    reduce using rule 61 (case_separator -> COLON .)
    VARIABLE        reduce using rule 61 (case_separator -> COLON .)
    DOLLAR          reduce using rule 61 (case_separator -> COLON .)
    RBRACE          reduce using rule 61 (case_separator -> COLON .)
    ENDSWITCH       reduce using rule 61 (case_separator -> COLON .)
    CASE            reduce using rule 61 (case_separator -> COLON .)
    DEFAULT         reduce using rule 61 (case_separator -> COLON .)


state 538

    (62) case_separator -> SEMI_COLON .

    YIELD           reduce using rule 62 (case_separator -> SEMI_COLON .)
    LBRACE          reduce using rule 62 (case_separator -> SEMI_COLON .)
    IF              reduce using rule 62 (case_separator -> SEMI_COLON .)
    WHILE           reduce using rule 62 (case_separator -> SEMI_COLON .)
    DO              reduce using rule 62 (case_separator -> SEMI_COLON .)
    FOR             reduce using rule 62 (case_separator -> SEMI_COLON .)
    SWITCH          reduce using rule 62 (case_separator -> SEMI_COLON .)
    BREAK           reduce using rule 62 (case_separator -> SEMI_COLON .)
    CONTINUE        reduce using rule 62 (case_separator -> SEMI_COLON .)
    RETURN          reduce using rule 62 (case_separator -> SEMI_COLON .)
    GLOBAL          reduce using rule 62 (case_separator -> SEMI_COLON .)
    STATIC          reduce using rule 62 (case_separator -> SEMI_COLON .)
    ECHO            reduce using rule 62 (case_separator -> SEMI_COLON .)
    INLINE_HTML     reduce using rule 62 (case_separator -> SEMI_COLON .)
    UNSET           reduce using rule 62 (case_separator -> SEMI_COLON .)
    SEMI_COLON      reduce using rule 62 (case_separator -> SEMI_COLON .)
    FUNCTION        reduce using rule 62 (case_separator -> SEMI_COLON .)
    CLONE           reduce using rule 62 (case_separator -> SEMI_COLON .)
    LIST            reduce using rule 62 (case_separator -> SEMI_COLON .)
    ARRAY           reduce using rule 62 (case_separator -> SEMI_COLON .)
    LBRACKET        reduce using rule 62 (case_separator -> SEMI_COLON .)
    PLUS            reduce using rule 62 (case_separator -> SEMI_COLON .)
    MINUS           reduce using rule 62 (case_separator -> SEMI_COLON .)
    NOT             reduce using rule 62 (case_separator -> SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 62 (case_separator -> SEMI_COLON .)
    INC             reduce using rule 62 (case_separator -> SEMI_COLON .)
    DEC             reduce using rule 62 (case_separator -> SEMI_COLON .)
    INT_CAST        reduce using rule 62 (case_separator -> SEMI_COLON .)
    ARRAY_CAST      reduce using rule 62 (case_separator -> SEMI_COLON .)
    STRING_CAST     reduce using rule 62 (case_separator -> SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 62 (case_separator -> SEMI_COLON .)
    BOOL_CAST       reduce using rule 62 (case_separator -> SEMI_COLON .)
    UNSET_CAST      reduce using rule 62 (case_separator -> SEMI_COLON .)
    BINARY_CAST     reduce using rule 62 (case_separator -> SEMI_COLON .)
    ISSET           reduce using rule 62 (case_separator -> SEMI_COLON .)
    EMPTY           reduce using rule 62 (case_separator -> SEMI_COLON .)
    EVAL            reduce using rule 62 (case_separator -> SEMI_COLON .)
    INCLUDE         reduce using rule 62 (case_separator -> SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 62 (case_separator -> SEMI_COLON .)
    REQUIRE         reduce using rule 62 (case_separator -> SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 62 (case_separator -> SEMI_COLON .)
    PRINT           reduce using rule 62 (case_separator -> SEMI_COLON .)
    AT              reduce using rule 62 (case_separator -> SEMI_COLON .)
    LPAREN          reduce using rule 62 (case_separator -> SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 62 (case_separator -> SEMI_COLON .)
    IDENTIFIER      reduce using rule 62 (case_separator -> SEMI_COLON .)
    EXIT            reduce using rule 62 (case_separator -> SEMI_COLON .)
    DIE             reduce using rule 62 (case_separator -> SEMI_COLON .)
    INT_NUMBER      reduce using rule 62 (case_separator -> SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 62 (case_separator -> SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 62 (case_separator -> SEMI_COLON .)
    FUNC_C          reduce using rule 62 (case_separator -> SEMI_COLON .)
    METHOD_C        reduce using rule 62 (case_separator -> SEMI_COLON .)
    LINE            reduce using rule 62 (case_separator -> SEMI_COLON .)
    FILE            reduce using rule 62 (case_separator -> SEMI_COLON .)
    DIR             reduce using rule 62 (case_separator -> SEMI_COLON .)
    START_HEREDOC   reduce using rule 62 (case_separator -> SEMI_COLON .)
    START_NOWDOC    reduce using rule 62 (case_separator -> SEMI_COLON .)
    VARIABLE        reduce using rule 62 (case_separator -> SEMI_COLON .)
    DOLLAR          reduce using rule 62 (case_separator -> SEMI_COLON .)
    RBRACE          reduce using rule 62 (case_separator -> SEMI_COLON .)
    ENDSWITCH       reduce using rule 62 (case_separator -> SEMI_COLON .)
    CASE            reduce using rule 62 (case_separator -> SEMI_COLON .)
    DEFAULT         reduce using rule 62 (case_separator -> SEMI_COLON .)


state 539

    (54) switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .

    HALT_COMPILER   reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    CONST           reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    LBRACE          reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    IF              reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    WHILE           reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    DO              reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    FOR             reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    SWITCH          reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    BREAK           reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    CONTINUE        reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    RETURN          reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    GLOBAL          reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    STATIC          reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    ECHO            reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    INLINE_HTML     reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    UNSET           reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    SEMI_COLON      reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    FUNCTION        reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    CLONE           reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    LIST            reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    ARRAY           reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    LBRACKET        reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    PLUS            reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    MINUS           reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    NOT             reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    INC             reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    DEC             reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    INT_CAST        reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    ARRAY_CAST      reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    STRING_CAST     reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    BOOL_CAST       reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    UNSET_CAST      reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    BINARY_CAST     reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    ISSET           reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    EMPTY           reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    EVAL            reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    INCLUDE         reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    REQUIRE         reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    PRINT           reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    AT              reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    LPAREN          reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    IDENTIFIER      reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    EXIT            reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    DIE             reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    INT_NUMBER      reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    FUNC_C          reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    METHOD_C        reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    LINE            reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    FILE            reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    DIR             reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    START_HEREDOC   reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    START_NOWDOC    reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    VARIABLE        reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    DOLLAR          reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    $end            reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    RBRACE          reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    YIELD           reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    ELSE            reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    ELSEIF          reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    ENDIF           reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    ENDWHILE        reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    ENDSWITCH       reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    ENDFOR          reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    CASE            reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    DEFAULT         reduce using rule 54 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)


state 540

    (55) switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH . SEMI_COLON

    SEMI_COLON      shift and go to state 554


state 541

    (77) function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list . RBRACE
    (11) inner_statement_list -> inner_statement_list . inner_statement
    (13) inner_statement -> . statement
    (14) inner_statement -> . function_declaration_statement
    (15) inner_statement -> . YIELD SEMI_COLON
    (16) inner_statement -> . YIELD expr SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list
    (19) statement -> . IF LPAREN expr RPAREN statement elseif_list ELSE statement
    (20) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (21) statement -> . WHILE LPAREN expr RPAREN while_statement
    (22) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (23) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (24) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (25) statement -> . BREAK SEMI_COLON
    (26) statement -> . BREAK expr SEMI_COLON
    (27) statement -> . CONTINUE SEMI_COLON
    (28) statement -> . CONTINUE expr SEMI_COLON
    (29) statement -> . RETURN SEMI_COLON
    (30) statement -> . RETURN expr SEMI_COLON
    (31) statement -> . GLOBAL global_var_list SEMI_COLON
    (32) statement -> . STATIC static_var_list SEMI_COLON
    (33) statement -> . ECHO echo_expr_list SEMI_COLON
    (34) statement -> . INLINE_HTML
    (35) statement -> . expr SEMI_COLON
    (36) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (37) statement -> . SEMI_COLON
    (77) function_declaration_statement -> . FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    RBRACE          shift and go to state 555
    YIELD           shift and go to state 207
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    FUNCTION        shift and go to state 26
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    inner_statement                shift and go to state 204
    statement                      shift and go to state 205
    function_declaration_statement shift and go to state 206
    expr                           shift and go to state 13
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 542

    (127) expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .

    SEMI_COLON      reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    LBRACE          reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    BOOLEAN_AND     reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    BOOLEAN_OR      reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    LOGICAL_AND     reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    LOGICAL_OR      reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    LOGICAL_XOR     reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    AND             reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    OR              reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    XOR             reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    CONCAT          reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    PLUS            reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    MINUS           reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    MUL             reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    DIV             reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    SL              reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    SR              reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    MOD             reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    IS_IDENTICAL    reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    IS_NOT_IDENTICAL reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    IS_EQUAL_TO     reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    IS_NOT_EQUAL    reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    LESS_THAN       reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    LESS_THAN_OR_EQUAL reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    GREATER_THAN    reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    GRATER_THAN_OR_EQUAL reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    INSTANCEOF      reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    SPACESHIP       reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    QUESTION        reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    RPAREN          reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    COMMA           reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    DOUBLE_ARROW    reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    RBRACE          reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    COLON           reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    RBRACKET        reduce using rule 127 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)


state 543

    (270) encaps_var -> DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr RBRACKET RBRACE .

    DOUBLE_QUOTE    reduce using rule 270 (encaps_var -> DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr RBRACKET RBRACE .)
    ENCAPSED_AND_WHITESPACE reduce using rule 270 (encaps_var -> DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr RBRACKET RBRACE .)
    VARIABLE        reduce using rule 270 (encaps_var -> DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr RBRACKET RBRACE .)
    DOLLAR_OPEN_CURLY_BRACES reduce using rule 270 (encaps_var -> DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr RBRACKET RBRACE .)
    CURLY_OPEN      reduce using rule 270 (encaps_var -> DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr RBRACKET RBRACE .)
    END_HEREDOC     reduce using rule 270 (encaps_var -> DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr RBRACKET RBRACE .)


state 544

    (236) static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA static_scalar DOUBLE_ARROW static_expr .
    (239) static_expr -> static_expr . BOOLEAN_AND static_expr
    (240) static_expr -> static_expr . BOOLEAN_OR static_expr
    (241) static_expr -> static_expr . LOGICAL_AND static_expr
    (242) static_expr -> static_expr . LOGICAL_OR static_expr
    (243) static_expr -> static_expr . LOGICAL_XOR static_expr
    (244) static_expr -> static_expr . AND static_expr
    (245) static_expr -> static_expr . OR static_expr
    (246) static_expr -> static_expr . XOR static_expr
    (247) static_expr -> static_expr . CONCAT static_expr
    (248) static_expr -> static_expr . PLUS static_expr
    (249) static_expr -> static_expr . MINUS static_expr
    (250) static_expr -> static_expr . MUL static_expr
    (251) static_expr -> static_expr . DIV static_expr
    (252) static_expr -> static_expr . SL static_expr
    (253) static_expr -> static_expr . SR static_expr
    (254) static_expr -> static_expr . MOD static_expr
    (255) static_expr -> static_expr . IS_IDENTICAL static_expr
    (256) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (257) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (258) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (259) static_expr -> static_expr . LESS_THAN static_expr
    (260) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (261) static_expr -> static_expr . GREATER_THAN static_expr
    (262) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    COMMA           reduce using rule 236 (static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA static_scalar DOUBLE_ARROW static_expr .)
    RBRACKET        reduce using rule 236 (static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA static_scalar DOUBLE_ARROW static_expr .)
    RPAREN          reduce using rule 236 (static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA static_scalar DOUBLE_ARROW static_expr .)
    BOOLEAN_AND     shift and go to state 375
    BOOLEAN_OR      shift and go to state 376
    LOGICAL_AND     shift and go to state 377
    LOGICAL_OR      shift and go to state 378
    LOGICAL_XOR     shift and go to state 379
    AND             shift and go to state 380
    OR              shift and go to state 381
    XOR             shift and go to state 382
    CONCAT          shift and go to state 383
    PLUS            shift and go to state 384
    MINUS           shift and go to state 385
    MUL             shift and go to state 386
    DIV             shift and go to state 387
    SL              shift and go to state 388
    SR              shift and go to state 389
    MOD             shift and go to state 390
    IS_IDENTICAL    shift and go to state 391
    IS_NOT_IDENTICAL shift and go to state 392
    IS_EQUAL_TO     shift and go to state 393
    IS_NOT_EQUAL    shift and go to state 394
    LESS_THAN       shift and go to state 395
    LESS_THAN_OR_EQUAL shift and go to state 396
    GREATER_THAN    shift and go to state 397
    GRATER_THAN_OR_EQUAL shift and go to state 398


state 545

    (39) elseif_list -> elseif_list ELSEIF LPAREN expr . RPAREN statement
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    RPAREN          shift and go to state 556
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 546

    (20) statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF . SEMI_COLON

    SEMI_COLON      shift and go to state 557


state 547

    (41) new_elseif_list -> new_elseif_list ELSEIF LPAREN . expr RPAREN COLON inner_statement_list
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 558
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 548

    (43) new_else_single -> ELSE COLON . inner_statement_list
    (11) inner_statement_list -> . inner_statement_list inner_statement
    (12) inner_statement_list -> . empty
    (275) empty -> .

    YIELD           reduce using rule 275 (empty -> .)
    LBRACE          reduce using rule 275 (empty -> .)
    IF              reduce using rule 275 (empty -> .)
    WHILE           reduce using rule 275 (empty -> .)
    DO              reduce using rule 275 (empty -> .)
    FOR             reduce using rule 275 (empty -> .)
    SWITCH          reduce using rule 275 (empty -> .)
    BREAK           reduce using rule 275 (empty -> .)
    CONTINUE        reduce using rule 275 (empty -> .)
    RETURN          reduce using rule 275 (empty -> .)
    GLOBAL          reduce using rule 275 (empty -> .)
    STATIC          reduce using rule 275 (empty -> .)
    ECHO            reduce using rule 275 (empty -> .)
    INLINE_HTML     reduce using rule 275 (empty -> .)
    UNSET           reduce using rule 275 (empty -> .)
    SEMI_COLON      reduce using rule 275 (empty -> .)
    FUNCTION        reduce using rule 275 (empty -> .)
    CLONE           reduce using rule 275 (empty -> .)
    LIST            reduce using rule 275 (empty -> .)
    ARRAY           reduce using rule 275 (empty -> .)
    LBRACKET        reduce using rule 275 (empty -> .)
    PLUS            reduce using rule 275 (empty -> .)
    MINUS           reduce using rule 275 (empty -> .)
    NOT             reduce using rule 275 (empty -> .)
    BOOLEAN_NOT     reduce using rule 275 (empty -> .)
    INC             reduce using rule 275 (empty -> .)
    DEC             reduce using rule 275 (empty -> .)
    INT_CAST        reduce using rule 275 (empty -> .)
    ARRAY_CAST      reduce using rule 275 (empty -> .)
    STRING_CAST     reduce using rule 275 (empty -> .)
    DOUBLE_CAST     reduce using rule 275 (empty -> .)
    BOOL_CAST       reduce using rule 275 (empty -> .)
    UNSET_CAST      reduce using rule 275 (empty -> .)
    BINARY_CAST     reduce using rule 275 (empty -> .)
    ISSET           reduce using rule 275 (empty -> .)
    EMPTY           reduce using rule 275 (empty -> .)
    EVAL            reduce using rule 275 (empty -> .)
    INCLUDE         reduce using rule 275 (empty -> .)
    INCLUDE_ONCE    reduce using rule 275 (empty -> .)
    REQUIRE         reduce using rule 275 (empty -> .)
    REQUIRE_ONCE    reduce using rule 275 (empty -> .)
    PRINT           reduce using rule 275 (empty -> .)
    AT              reduce using rule 275 (empty -> .)
    LPAREN          reduce using rule 275 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 275 (empty -> .)
    IDENTIFIER      reduce using rule 275 (empty -> .)
    EXIT            reduce using rule 275 (empty -> .)
    DIE             reduce using rule 275 (empty -> .)
    INT_NUMBER      reduce using rule 275 (empty -> .)
    FLOAT_NUMBER    reduce using rule 275 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 275 (empty -> .)
    FUNC_C          reduce using rule 275 (empty -> .)
    METHOD_C        reduce using rule 275 (empty -> .)
    LINE            reduce using rule 275 (empty -> .)
    FILE            reduce using rule 275 (empty -> .)
    DIR             reduce using rule 275 (empty -> .)
    START_HEREDOC   reduce using rule 275 (empty -> .)
    START_NOWDOC    reduce using rule 275 (empty -> .)
    VARIABLE        reduce using rule 275 (empty -> .)
    DOLLAR          reduce using rule 275 (empty -> .)
    ENDIF           reduce using rule 275 (empty -> .)

    inner_statement_list           shift and go to state 559
    empty                          shift and go to state 87

state 549

    (23) statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .

    HALT_COMPILER   reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    CONST           reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    LBRACE          reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    IF              reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    WHILE           reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    DO              reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    FOR             reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    SWITCH          reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    BREAK           reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    CONTINUE        reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    RETURN          reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    GLOBAL          reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    STATIC          reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    ECHO            reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    INLINE_HTML     reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    UNSET           reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    SEMI_COLON      reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    FUNCTION        reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    CLONE           reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    LIST            reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    ARRAY           reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    LBRACKET        reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    PLUS            reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    MINUS           reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    NOT             reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    BOOLEAN_NOT     reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    INC             reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    DEC             reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    INT_CAST        reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    ARRAY_CAST      reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    STRING_CAST     reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    DOUBLE_CAST     reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    BOOL_CAST       reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    UNSET_CAST      reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    BINARY_CAST     reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    ISSET           reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    EMPTY           reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    EVAL            reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    INCLUDE         reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    INCLUDE_ONCE    reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    REQUIRE         reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    REQUIRE_ONCE    reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    PRINT           reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    AT              reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    LPAREN          reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    DOUBLE_QUOTE    reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    IDENTIFIER      reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    EXIT            reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    DIE             reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    INT_NUMBER      reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    FLOAT_NUMBER    reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    FUNC_C          reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    METHOD_C        reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    LINE            reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    FILE            reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    DIR             reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    START_HEREDOC   reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    START_NOWDOC    reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    VARIABLE        reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    DOLLAR          reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    $end            reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    RBRACE          reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    YIELD           reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    ELSE            reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    ELSEIF          reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    ENDIF           reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    ENDWHILE        reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    ENDSWITCH       reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    ENDFOR          reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    CASE            reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    DEFAULT         reduce using rule 23 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)


state 550

    (50) for_statement -> statement .

    ELSE            reduce using rule 50 (for_statement -> statement .)
    ELSEIF          reduce using rule 50 (for_statement -> statement .)
    HALT_COMPILER   reduce using rule 50 (for_statement -> statement .)
    CONST           reduce using rule 50 (for_statement -> statement .)
    LBRACE          reduce using rule 50 (for_statement -> statement .)
    IF              reduce using rule 50 (for_statement -> statement .)
    WHILE           reduce using rule 50 (for_statement -> statement .)
    DO              reduce using rule 50 (for_statement -> statement .)
    FOR             reduce using rule 50 (for_statement -> statement .)
    SWITCH          reduce using rule 50 (for_statement -> statement .)
    BREAK           reduce using rule 50 (for_statement -> statement .)
    CONTINUE        reduce using rule 50 (for_statement -> statement .)
    RETURN          reduce using rule 50 (for_statement -> statement .)
    GLOBAL          reduce using rule 50 (for_statement -> statement .)
    STATIC          reduce using rule 50 (for_statement -> statement .)
    ECHO            reduce using rule 50 (for_statement -> statement .)
    INLINE_HTML     reduce using rule 50 (for_statement -> statement .)
    UNSET           reduce using rule 50 (for_statement -> statement .)
    SEMI_COLON      reduce using rule 50 (for_statement -> statement .)
    FUNCTION        reduce using rule 50 (for_statement -> statement .)
    CLONE           reduce using rule 50 (for_statement -> statement .)
    LIST            reduce using rule 50 (for_statement -> statement .)
    ARRAY           reduce using rule 50 (for_statement -> statement .)
    LBRACKET        reduce using rule 50 (for_statement -> statement .)
    PLUS            reduce using rule 50 (for_statement -> statement .)
    MINUS           reduce using rule 50 (for_statement -> statement .)
    NOT             reduce using rule 50 (for_statement -> statement .)
    BOOLEAN_NOT     reduce using rule 50 (for_statement -> statement .)
    INC             reduce using rule 50 (for_statement -> statement .)
    DEC             reduce using rule 50 (for_statement -> statement .)
    INT_CAST        reduce using rule 50 (for_statement -> statement .)
    ARRAY_CAST      reduce using rule 50 (for_statement -> statement .)
    STRING_CAST     reduce using rule 50 (for_statement -> statement .)
    DOUBLE_CAST     reduce using rule 50 (for_statement -> statement .)
    BOOL_CAST       reduce using rule 50 (for_statement -> statement .)
    UNSET_CAST      reduce using rule 50 (for_statement -> statement .)
    BINARY_CAST     reduce using rule 50 (for_statement -> statement .)
    ISSET           reduce using rule 50 (for_statement -> statement .)
    EMPTY           reduce using rule 50 (for_statement -> statement .)
    EVAL            reduce using rule 50 (for_statement -> statement .)
    INCLUDE         reduce using rule 50 (for_statement -> statement .)
    INCLUDE_ONCE    reduce using rule 50 (for_statement -> statement .)
    REQUIRE         reduce using rule 50 (for_statement -> statement .)
    REQUIRE_ONCE    reduce using rule 50 (for_statement -> statement .)
    PRINT           reduce using rule 50 (for_statement -> statement .)
    AT              reduce using rule 50 (for_statement -> statement .)
    LPAREN          reduce using rule 50 (for_statement -> statement .)
    DOUBLE_QUOTE    reduce using rule 50 (for_statement -> statement .)
    IDENTIFIER      reduce using rule 50 (for_statement -> statement .)
    EXIT            reduce using rule 50 (for_statement -> statement .)
    DIE             reduce using rule 50 (for_statement -> statement .)
    INT_NUMBER      reduce using rule 50 (for_statement -> statement .)
    FLOAT_NUMBER    reduce using rule 50 (for_statement -> statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 50 (for_statement -> statement .)
    FUNC_C          reduce using rule 50 (for_statement -> statement .)
    METHOD_C        reduce using rule 50 (for_statement -> statement .)
    LINE            reduce using rule 50 (for_statement -> statement .)
    FILE            reduce using rule 50 (for_statement -> statement .)
    DIR             reduce using rule 50 (for_statement -> statement .)
    START_HEREDOC   reduce using rule 50 (for_statement -> statement .)
    START_NOWDOC    reduce using rule 50 (for_statement -> statement .)
    VARIABLE        reduce using rule 50 (for_statement -> statement .)
    DOLLAR          reduce using rule 50 (for_statement -> statement .)
    $end            reduce using rule 50 (for_statement -> statement .)
    RBRACE          reduce using rule 50 (for_statement -> statement .)
    YIELD           reduce using rule 50 (for_statement -> statement .)
    ENDIF           reduce using rule 50 (for_statement -> statement .)
    ENDWHILE        reduce using rule 50 (for_statement -> statement .)
    ENDSWITCH       reduce using rule 50 (for_statement -> statement .)
    ENDFOR          reduce using rule 50 (for_statement -> statement .)
    CASE            reduce using rule 50 (for_statement -> statement .)
    DEFAULT         reduce using rule 50 (for_statement -> statement .)


state 551

    (51) for_statement -> COLON . inner_statement_list ENDFOR SEMI_COLON
    (11) inner_statement_list -> . inner_statement_list inner_statement
    (12) inner_statement_list -> . empty
    (275) empty -> .

    ENDFOR          reduce using rule 275 (empty -> .)
    YIELD           reduce using rule 275 (empty -> .)
    LBRACE          reduce using rule 275 (empty -> .)
    IF              reduce using rule 275 (empty -> .)
    WHILE           reduce using rule 275 (empty -> .)
    DO              reduce using rule 275 (empty -> .)
    FOR             reduce using rule 275 (empty -> .)
    SWITCH          reduce using rule 275 (empty -> .)
    BREAK           reduce using rule 275 (empty -> .)
    CONTINUE        reduce using rule 275 (empty -> .)
    RETURN          reduce using rule 275 (empty -> .)
    GLOBAL          reduce using rule 275 (empty -> .)
    STATIC          reduce using rule 275 (empty -> .)
    ECHO            reduce using rule 275 (empty -> .)
    INLINE_HTML     reduce using rule 275 (empty -> .)
    UNSET           reduce using rule 275 (empty -> .)
    SEMI_COLON      reduce using rule 275 (empty -> .)
    FUNCTION        reduce using rule 275 (empty -> .)
    CLONE           reduce using rule 275 (empty -> .)
    LIST            reduce using rule 275 (empty -> .)
    ARRAY           reduce using rule 275 (empty -> .)
    LBRACKET        reduce using rule 275 (empty -> .)
    PLUS            reduce using rule 275 (empty -> .)
    MINUS           reduce using rule 275 (empty -> .)
    NOT             reduce using rule 275 (empty -> .)
    BOOLEAN_NOT     reduce using rule 275 (empty -> .)
    INC             reduce using rule 275 (empty -> .)
    DEC             reduce using rule 275 (empty -> .)
    INT_CAST        reduce using rule 275 (empty -> .)
    ARRAY_CAST      reduce using rule 275 (empty -> .)
    STRING_CAST     reduce using rule 275 (empty -> .)
    DOUBLE_CAST     reduce using rule 275 (empty -> .)
    BOOL_CAST       reduce using rule 275 (empty -> .)
    UNSET_CAST      reduce using rule 275 (empty -> .)
    BINARY_CAST     reduce using rule 275 (empty -> .)
    ISSET           reduce using rule 275 (empty -> .)
    EMPTY           reduce using rule 275 (empty -> .)
    EVAL            reduce using rule 275 (empty -> .)
    INCLUDE         reduce using rule 275 (empty -> .)
    INCLUDE_ONCE    reduce using rule 275 (empty -> .)
    REQUIRE         reduce using rule 275 (empty -> .)
    REQUIRE_ONCE    reduce using rule 275 (empty -> .)
    PRINT           reduce using rule 275 (empty -> .)
    AT              reduce using rule 275 (empty -> .)
    LPAREN          reduce using rule 275 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 275 (empty -> .)
    IDENTIFIER      reduce using rule 275 (empty -> .)
    EXIT            reduce using rule 275 (empty -> .)
    DIE             reduce using rule 275 (empty -> .)
    INT_NUMBER      reduce using rule 275 (empty -> .)
    FLOAT_NUMBER    reduce using rule 275 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 275 (empty -> .)
    FUNC_C          reduce using rule 275 (empty -> .)
    METHOD_C        reduce using rule 275 (empty -> .)
    LINE            reduce using rule 275 (empty -> .)
    FILE            reduce using rule 275 (empty -> .)
    DIR             reduce using rule 275 (empty -> .)
    START_HEREDOC   reduce using rule 275 (empty -> .)
    START_NOWDOC    reduce using rule 275 (empty -> .)
    VARIABLE        reduce using rule 275 (empty -> .)
    DOLLAR          reduce using rule 275 (empty -> .)

    inner_statement_list           shift and go to state 560
    empty                          shift and go to state 87

state 552

    (57) case_list -> case_list_no_default CASE expr case_separator . inner_statement_list
    (60) case_list_no_default -> case_list_no_default CASE expr case_separator . inner_statement_list
    (11) inner_statement_list -> . inner_statement_list inner_statement
    (12) inner_statement_list -> . empty
    (275) empty -> .

    YIELD           reduce using rule 275 (empty -> .)
    LBRACE          reduce using rule 275 (empty -> .)
    IF              reduce using rule 275 (empty -> .)
    WHILE           reduce using rule 275 (empty -> .)
    DO              reduce using rule 275 (empty -> .)
    FOR             reduce using rule 275 (empty -> .)
    SWITCH          reduce using rule 275 (empty -> .)
    BREAK           reduce using rule 275 (empty -> .)
    CONTINUE        reduce using rule 275 (empty -> .)
    RETURN          reduce using rule 275 (empty -> .)
    GLOBAL          reduce using rule 275 (empty -> .)
    STATIC          reduce using rule 275 (empty -> .)
    ECHO            reduce using rule 275 (empty -> .)
    INLINE_HTML     reduce using rule 275 (empty -> .)
    UNSET           reduce using rule 275 (empty -> .)
    SEMI_COLON      reduce using rule 275 (empty -> .)
    FUNCTION        reduce using rule 275 (empty -> .)
    CLONE           reduce using rule 275 (empty -> .)
    LIST            reduce using rule 275 (empty -> .)
    ARRAY           reduce using rule 275 (empty -> .)
    LBRACKET        reduce using rule 275 (empty -> .)
    PLUS            reduce using rule 275 (empty -> .)
    MINUS           reduce using rule 275 (empty -> .)
    NOT             reduce using rule 275 (empty -> .)
    BOOLEAN_NOT     reduce using rule 275 (empty -> .)
    INC             reduce using rule 275 (empty -> .)
    DEC             reduce using rule 275 (empty -> .)
    INT_CAST        reduce using rule 275 (empty -> .)
    ARRAY_CAST      reduce using rule 275 (empty -> .)
    STRING_CAST     reduce using rule 275 (empty -> .)
    DOUBLE_CAST     reduce using rule 275 (empty -> .)
    BOOL_CAST       reduce using rule 275 (empty -> .)
    UNSET_CAST      reduce using rule 275 (empty -> .)
    BINARY_CAST     reduce using rule 275 (empty -> .)
    ISSET           reduce using rule 275 (empty -> .)
    EMPTY           reduce using rule 275 (empty -> .)
    EVAL            reduce using rule 275 (empty -> .)
    INCLUDE         reduce using rule 275 (empty -> .)
    INCLUDE_ONCE    reduce using rule 275 (empty -> .)
    REQUIRE         reduce using rule 275 (empty -> .)
    REQUIRE_ONCE    reduce using rule 275 (empty -> .)
    PRINT           reduce using rule 275 (empty -> .)
    AT              reduce using rule 275 (empty -> .)
    LPAREN          reduce using rule 275 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 275 (empty -> .)
    IDENTIFIER      reduce using rule 275 (empty -> .)
    EXIT            reduce using rule 275 (empty -> .)
    DIE             reduce using rule 275 (empty -> .)
    INT_NUMBER      reduce using rule 275 (empty -> .)
    FLOAT_NUMBER    reduce using rule 275 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 275 (empty -> .)
    FUNC_C          reduce using rule 275 (empty -> .)
    METHOD_C        reduce using rule 275 (empty -> .)
    LINE            reduce using rule 275 (empty -> .)
    FILE            reduce using rule 275 (empty -> .)
    DIR             reduce using rule 275 (empty -> .)
    START_HEREDOC   reduce using rule 275 (empty -> .)
    START_NOWDOC    reduce using rule 275 (empty -> .)
    VARIABLE        reduce using rule 275 (empty -> .)
    DOLLAR          reduce using rule 275 (empty -> .)
    RBRACE          reduce using rule 275 (empty -> .)
    CASE            reduce using rule 275 (empty -> .)
    DEFAULT         reduce using rule 275 (empty -> .)
    ENDSWITCH       reduce using rule 275 (empty -> .)

    inner_statement_list           shift and go to state 561
    empty                          shift and go to state 87

state 553

    (58) case_list -> case_list_no_default DEFAULT case_separator inner_statement_list .
    (11) inner_statement_list -> inner_statement_list . inner_statement
    (13) inner_statement -> . statement
    (14) inner_statement -> . function_declaration_statement
    (15) inner_statement -> . YIELD SEMI_COLON
    (16) inner_statement -> . YIELD expr SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list
    (19) statement -> . IF LPAREN expr RPAREN statement elseif_list ELSE statement
    (20) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (21) statement -> . WHILE LPAREN expr RPAREN while_statement
    (22) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (23) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (24) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (25) statement -> . BREAK SEMI_COLON
    (26) statement -> . BREAK expr SEMI_COLON
    (27) statement -> . CONTINUE SEMI_COLON
    (28) statement -> . CONTINUE expr SEMI_COLON
    (29) statement -> . RETURN SEMI_COLON
    (30) statement -> . RETURN expr SEMI_COLON
    (31) statement -> . GLOBAL global_var_list SEMI_COLON
    (32) statement -> . STATIC static_var_list SEMI_COLON
    (33) statement -> . ECHO echo_expr_list SEMI_COLON
    (34) statement -> . INLINE_HTML
    (35) statement -> . expr SEMI_COLON
    (36) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (37) statement -> . SEMI_COLON
    (77) function_declaration_statement -> . FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    RBRACE          reduce using rule 58 (case_list -> case_list_no_default DEFAULT case_separator inner_statement_list .)
    ENDSWITCH       reduce using rule 58 (case_list -> case_list_no_default DEFAULT case_separator inner_statement_list .)
    YIELD           shift and go to state 207
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    FUNCTION        shift and go to state 26
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    inner_statement                shift and go to state 204
    statement                      shift and go to state 205
    function_declaration_statement shift and go to state 206
    expr                           shift and go to state 13
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 554

    (55) switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .

    HALT_COMPILER   reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    CONST           reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    LBRACE          reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    IF              reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    WHILE           reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    DO              reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    FOR             reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    SWITCH          reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    BREAK           reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    CONTINUE        reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    RETURN          reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    GLOBAL          reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    STATIC          reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    ECHO            reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    INLINE_HTML     reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    UNSET           reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    SEMI_COLON      reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    FUNCTION        reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    CLONE           reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    LIST            reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    ARRAY           reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    LBRACKET        reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    PLUS            reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    MINUS           reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    NOT             reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    INC             reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    DEC             reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    INT_CAST        reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    ARRAY_CAST      reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    STRING_CAST     reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    BOOL_CAST       reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    UNSET_CAST      reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    BINARY_CAST     reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    ISSET           reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    EMPTY           reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    EVAL            reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    INCLUDE         reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    REQUIRE         reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    PRINT           reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    AT              reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    LPAREN          reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    IDENTIFIER      reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    EXIT            reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    DIE             reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    INT_NUMBER      reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    FUNC_C          reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    METHOD_C        reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    LINE            reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    FILE            reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    DIR             reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    START_HEREDOC   reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    START_NOWDOC    reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    VARIABLE        reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    DOLLAR          reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    $end            reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    RBRACE          reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    YIELD           reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    ELSE            reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    ELSEIF          reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    ENDIF           reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    ENDWHILE        reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    ENDSWITCH       reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    ENDFOR          reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    CASE            reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    DEFAULT         reduce using rule 55 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)


state 555

    (77) function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .

    HALT_COMPILER   reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    CONST           reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    LBRACE          reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    IF              reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    WHILE           reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    DO              reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    FOR             reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    SWITCH          reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    BREAK           reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    CONTINUE        reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    RETURN          reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    GLOBAL          reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    STATIC          reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    ECHO            reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    INLINE_HTML     reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    UNSET           reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    SEMI_COLON      reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    FUNCTION        reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    CLONE           reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    LIST            reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    ARRAY           reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    LBRACKET        reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    PLUS            reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    MINUS           reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    NOT             reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    BOOLEAN_NOT     reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    INC             reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    DEC             reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    INT_CAST        reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    ARRAY_CAST      reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    STRING_CAST     reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    DOUBLE_CAST     reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    BOOL_CAST       reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    UNSET_CAST      reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    BINARY_CAST     reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    ISSET           reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    EMPTY           reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    EVAL            reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    INCLUDE         reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    INCLUDE_ONCE    reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    REQUIRE         reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    REQUIRE_ONCE    reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    PRINT           reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    AT              reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    LPAREN          reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    DOUBLE_QUOTE    reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    IDENTIFIER      reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    EXIT            reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    DIE             reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    INT_NUMBER      reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    FLOAT_NUMBER    reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    CONSTANT_ENCAPSED_STRING reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    FUNC_C          reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    METHOD_C        reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    LINE            reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    FILE            reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    DIR             reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    START_HEREDOC   reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    START_NOWDOC    reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    VARIABLE        reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    DOLLAR          reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    $end            reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    RBRACE          reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    YIELD           reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    ELSEIF          reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    ELSE            reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    ENDIF           reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    ENDWHILE        reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    ENDSWITCH       reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    ENDFOR          reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    CASE            reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    DEFAULT         reduce using rule 77 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)


state 556

    (39) elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN . statement
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list
    (19) statement -> . IF LPAREN expr RPAREN statement elseif_list ELSE statement
    (20) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (21) statement -> . WHILE LPAREN expr RPAREN while_statement
    (22) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (23) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (24) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (25) statement -> . BREAK SEMI_COLON
    (26) statement -> . BREAK expr SEMI_COLON
    (27) statement -> . CONTINUE SEMI_COLON
    (28) statement -> . CONTINUE expr SEMI_COLON
    (29) statement -> . RETURN SEMI_COLON
    (30) statement -> . RETURN expr SEMI_COLON
    (31) statement -> . GLOBAL global_var_list SEMI_COLON
    (32) statement -> . STATIC static_var_list SEMI_COLON
    (33) statement -> . ECHO echo_expr_list SEMI_COLON
    (34) statement -> . INLINE_HTML
    (35) statement -> . expr SEMI_COLON
    (36) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (37) statement -> . SEMI_COLON
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 82
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 13
    statement                      shift and go to state 562
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 557

    (20) statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .

    HALT_COMPILER   reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    CONST           reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    LBRACE          reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    IF              reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    WHILE           reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    DO              reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    FOR             reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    SWITCH          reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    BREAK           reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    CONTINUE        reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    RETURN          reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    GLOBAL          reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    STATIC          reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    ECHO            reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    INLINE_HTML     reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    UNSET           reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    SEMI_COLON      reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    FUNCTION        reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    CLONE           reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    LIST            reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    ARRAY           reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    LBRACKET        reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    PLUS            reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    MINUS           reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    NOT             reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    INC             reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    DEC             reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    INT_CAST        reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    ARRAY_CAST      reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    STRING_CAST     reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    BOOL_CAST       reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    UNSET_CAST      reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    BINARY_CAST     reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    ISSET           reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    EMPTY           reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    EVAL            reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    INCLUDE         reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    REQUIRE         reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    PRINT           reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    AT              reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    LPAREN          reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    IDENTIFIER      reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    EXIT            reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    DIE             reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    INT_NUMBER      reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    FUNC_C          reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    METHOD_C        reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    LINE            reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    FILE            reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    DIR             reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    START_HEREDOC   reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    START_NOWDOC    reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    VARIABLE        reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    DOLLAR          reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    $end            reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    RBRACE          reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    YIELD           reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    ELSE            reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    ELSEIF          reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    ENDIF           reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    ENDWHILE        reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    ENDSWITCH       reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    ENDFOR          reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    CASE            reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    DEFAULT         reduce using rule 20 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)


state 558

    (41) new_elseif_list -> new_elseif_list ELSEIF LPAREN expr . RPAREN COLON inner_statement_list
    (105) expr -> expr . LBRACE dim_offset RBRACE
    (139) expr -> expr . BOOLEAN_AND expr
    (140) expr -> expr . BOOLEAN_OR expr
    (141) expr -> expr . LOGICAL_AND expr
    (142) expr -> expr . LOGICAL_OR expr
    (143) expr -> expr . LOGICAL_XOR expr
    (144) expr -> expr . AND expr
    (145) expr -> expr . OR expr
    (146) expr -> expr . XOR expr
    (147) expr -> expr . CONCAT expr
    (148) expr -> expr . PLUS expr
    (149) expr -> expr . MINUS expr
    (150) expr -> expr . MUL expr
    (151) expr -> expr . DIV expr
    (152) expr -> expr . SL expr
    (153) expr -> expr . SR expr
    (154) expr -> expr . MOD expr
    (155) expr -> expr . IS_IDENTICAL expr
    (156) expr -> expr . IS_NOT_IDENTICAL expr
    (157) expr -> expr . IS_EQUAL_TO expr
    (158) expr -> expr . IS_NOT_EQUAL expr
    (159) expr -> expr . LESS_THAN expr
    (160) expr -> expr . LESS_THAN_OR_EQUAL expr
    (161) expr -> expr . GREATER_THAN expr
    (162) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (163) expr -> expr . INSTANCEOF expr
    (164) expr -> expr . SPACESHIP expr
    (165) expr -> expr . INSTANCEOF STATIC
    (170) expr -> expr . QUESTION expr COLON expr
    (171) expr -> expr . QUESTION COLON expr

    RPAREN          shift and go to state 563
    LBRACE          shift and go to state 90
    BOOLEAN_AND     shift and go to state 91
    BOOLEAN_OR      shift and go to state 92
    LOGICAL_AND     shift and go to state 93
    LOGICAL_OR      shift and go to state 94
    LOGICAL_XOR     shift and go to state 95
    AND             shift and go to state 96
    OR              shift and go to state 97
    XOR             shift and go to state 98
    CONCAT          shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MUL             shift and go to state 102
    DIV             shift and go to state 103
    SL              shift and go to state 104
    SR              shift and go to state 105
    MOD             shift and go to state 106
    IS_IDENTICAL    shift and go to state 107
    IS_NOT_IDENTICAL shift and go to state 108
    IS_EQUAL_TO     shift and go to state 109
    IS_NOT_EQUAL    shift and go to state 110
    LESS_THAN       shift and go to state 111
    LESS_THAN_OR_EQUAL shift and go to state 112
    GREATER_THAN    shift and go to state 113
    GRATER_THAN_OR_EQUAL shift and go to state 114
    INSTANCEOF      shift and go to state 115
    SPACESHIP       shift and go to state 116
    QUESTION        shift and go to state 117


state 559

    (43) new_else_single -> ELSE COLON inner_statement_list .
    (11) inner_statement_list -> inner_statement_list . inner_statement
    (13) inner_statement -> . statement
    (14) inner_statement -> . function_declaration_statement
    (15) inner_statement -> . YIELD SEMI_COLON
    (16) inner_statement -> . YIELD expr SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list
    (19) statement -> . IF LPAREN expr RPAREN statement elseif_list ELSE statement
    (20) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (21) statement -> . WHILE LPAREN expr RPAREN while_statement
    (22) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (23) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (24) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (25) statement -> . BREAK SEMI_COLON
    (26) statement -> . BREAK expr SEMI_COLON
    (27) statement -> . CONTINUE SEMI_COLON
    (28) statement -> . CONTINUE expr SEMI_COLON
    (29) statement -> . RETURN SEMI_COLON
    (30) statement -> . RETURN expr SEMI_COLON
    (31) statement -> . GLOBAL global_var_list SEMI_COLON
    (32) statement -> . STATIC static_var_list SEMI_COLON
    (33) statement -> . ECHO echo_expr_list SEMI_COLON
    (34) statement -> . INLINE_HTML
    (35) statement -> . expr SEMI_COLON
    (36) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (37) statement -> . SEMI_COLON
    (77) function_declaration_statement -> . FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    ENDIF           reduce using rule 43 (new_else_single -> ELSE COLON inner_statement_list .)
    YIELD           shift and go to state 207
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    FUNCTION        shift and go to state 26
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    inner_statement                shift and go to state 204
    statement                      shift and go to state 205
    function_declaration_statement shift and go to state 206
    expr                           shift and go to state 13
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 560

    (51) for_statement -> COLON inner_statement_list . ENDFOR SEMI_COLON
    (11) inner_statement_list -> inner_statement_list . inner_statement
    (13) inner_statement -> . statement
    (14) inner_statement -> . function_declaration_statement
    (15) inner_statement -> . YIELD SEMI_COLON
    (16) inner_statement -> . YIELD expr SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list
    (19) statement -> . IF LPAREN expr RPAREN statement elseif_list ELSE statement
    (20) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (21) statement -> . WHILE LPAREN expr RPAREN while_statement
    (22) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (23) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (24) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (25) statement -> . BREAK SEMI_COLON
    (26) statement -> . BREAK expr SEMI_COLON
    (27) statement -> . CONTINUE SEMI_COLON
    (28) statement -> . CONTINUE expr SEMI_COLON
    (29) statement -> . RETURN SEMI_COLON
    (30) statement -> . RETURN expr SEMI_COLON
    (31) statement -> . GLOBAL global_var_list SEMI_COLON
    (32) statement -> . STATIC static_var_list SEMI_COLON
    (33) statement -> . ECHO echo_expr_list SEMI_COLON
    (34) statement -> . INLINE_HTML
    (35) statement -> . expr SEMI_COLON
    (36) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (37) statement -> . SEMI_COLON
    (77) function_declaration_statement -> . FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    ENDFOR          shift and go to state 564
    YIELD           shift and go to state 207
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    FUNCTION        shift and go to state 26
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    inner_statement                shift and go to state 204
    statement                      shift and go to state 205
    function_declaration_statement shift and go to state 206
    expr                           shift and go to state 13
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 561

    (57) case_list -> case_list_no_default CASE expr case_separator inner_statement_list .
    (60) case_list_no_default -> case_list_no_default CASE expr case_separator inner_statement_list .
    (11) inner_statement_list -> inner_statement_list . inner_statement
    (13) inner_statement -> . statement
    (14) inner_statement -> . function_declaration_statement
    (15) inner_statement -> . YIELD SEMI_COLON
    (16) inner_statement -> . YIELD expr SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list
    (19) statement -> . IF LPAREN expr RPAREN statement elseif_list ELSE statement
    (20) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (21) statement -> . WHILE LPAREN expr RPAREN while_statement
    (22) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (23) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (24) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (25) statement -> . BREAK SEMI_COLON
    (26) statement -> . BREAK expr SEMI_COLON
    (27) statement -> . CONTINUE SEMI_COLON
    (28) statement -> . CONTINUE expr SEMI_COLON
    (29) statement -> . RETURN SEMI_COLON
    (30) statement -> . RETURN expr SEMI_COLON
    (31) statement -> . GLOBAL global_var_list SEMI_COLON
    (32) statement -> . STATIC static_var_list SEMI_COLON
    (33) statement -> . ECHO echo_expr_list SEMI_COLON
    (34) statement -> . INLINE_HTML
    (35) statement -> . expr SEMI_COLON
    (36) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (37) statement -> . SEMI_COLON
    (77) function_declaration_statement -> . FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    RBRACE          reduce using rule 57 (case_list -> case_list_no_default CASE expr case_separator inner_statement_list .)
    ENDSWITCH       reduce using rule 57 (case_list -> case_list_no_default CASE expr case_separator inner_statement_list .)
    CASE            reduce using rule 60 (case_list_no_default -> case_list_no_default CASE expr case_separator inner_statement_list .)
    DEFAULT         reduce using rule 60 (case_list_no_default -> case_list_no_default CASE expr case_separator inner_statement_list .)
    YIELD           shift and go to state 207
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    FUNCTION        shift and go to state 26
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 13
    inner_statement                shift and go to state 204
    statement                      shift and go to state 205
    function_declaration_statement shift and go to state 206
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77

state 562

    (39) elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .

    ELSE            reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    ELSEIF          reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    HALT_COMPILER   reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    CONST           reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    LBRACE          reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    IF              reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    WHILE           reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    DO              reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    FOR             reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    SWITCH          reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    BREAK           reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    CONTINUE        reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    RETURN          reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    GLOBAL          reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    STATIC          reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    ECHO            reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    INLINE_HTML     reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    UNSET           reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    SEMI_COLON      reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    FUNCTION        reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    CLONE           reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    LIST            reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    ARRAY           reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    LBRACKET        reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    PLUS            reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    MINUS           reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    NOT             reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    BOOLEAN_NOT     reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    INC             reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    DEC             reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    INT_CAST        reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    ARRAY_CAST      reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    STRING_CAST     reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    DOUBLE_CAST     reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    BOOL_CAST       reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    UNSET_CAST      reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    BINARY_CAST     reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    ISSET           reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    EMPTY           reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    EVAL            reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    INCLUDE         reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    INCLUDE_ONCE    reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    REQUIRE         reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    REQUIRE_ONCE    reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    PRINT           reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    AT              reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    LPAREN          reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    DOUBLE_QUOTE    reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    IDENTIFIER      reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    EXIT            reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    DIE             reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    INT_NUMBER      reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    FLOAT_NUMBER    reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    FUNC_C          reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    METHOD_C        reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    LINE            reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    FILE            reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    DIR             reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    START_HEREDOC   reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    START_NOWDOC    reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    VARIABLE        reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    DOLLAR          reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    $end            reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    RBRACE          reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    YIELD           reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    ENDIF           reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    ENDWHILE        reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    ENDSWITCH       reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    ENDFOR          reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    CASE            reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    DEFAULT         reduce using rule 39 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)


state 563

    (41) new_elseif_list -> new_elseif_list ELSEIF LPAREN expr RPAREN . COLON inner_statement_list

    COLON           shift and go to state 565


state 564

    (51) for_statement -> COLON inner_statement_list ENDFOR . SEMI_COLON

    SEMI_COLON      shift and go to state 566


state 565

    (41) new_elseif_list -> new_elseif_list ELSEIF LPAREN expr RPAREN COLON . inner_statement_list
    (11) inner_statement_list -> . inner_statement_list inner_statement
    (12) inner_statement_list -> . empty
    (275) empty -> .

    YIELD           reduce using rule 275 (empty -> .)
    LBRACE          reduce using rule 275 (empty -> .)
    IF              reduce using rule 275 (empty -> .)
    WHILE           reduce using rule 275 (empty -> .)
    DO              reduce using rule 275 (empty -> .)
    FOR             reduce using rule 275 (empty -> .)
    SWITCH          reduce using rule 275 (empty -> .)
    BREAK           reduce using rule 275 (empty -> .)
    CONTINUE        reduce using rule 275 (empty -> .)
    RETURN          reduce using rule 275 (empty -> .)
    GLOBAL          reduce using rule 275 (empty -> .)
    STATIC          reduce using rule 275 (empty -> .)
    ECHO            reduce using rule 275 (empty -> .)
    INLINE_HTML     reduce using rule 275 (empty -> .)
    UNSET           reduce using rule 275 (empty -> .)
    SEMI_COLON      reduce using rule 275 (empty -> .)
    FUNCTION        reduce using rule 275 (empty -> .)
    CLONE           reduce using rule 275 (empty -> .)
    LIST            reduce using rule 275 (empty -> .)
    ARRAY           reduce using rule 275 (empty -> .)
    LBRACKET        reduce using rule 275 (empty -> .)
    PLUS            reduce using rule 275 (empty -> .)
    MINUS           reduce using rule 275 (empty -> .)
    NOT             reduce using rule 275 (empty -> .)
    BOOLEAN_NOT     reduce using rule 275 (empty -> .)
    INC             reduce using rule 275 (empty -> .)
    DEC             reduce using rule 275 (empty -> .)
    INT_CAST        reduce using rule 275 (empty -> .)
    ARRAY_CAST      reduce using rule 275 (empty -> .)
    STRING_CAST     reduce using rule 275 (empty -> .)
    DOUBLE_CAST     reduce using rule 275 (empty -> .)
    BOOL_CAST       reduce using rule 275 (empty -> .)
    UNSET_CAST      reduce using rule 275 (empty -> .)
    BINARY_CAST     reduce using rule 275 (empty -> .)
    ISSET           reduce using rule 275 (empty -> .)
    EMPTY           reduce using rule 275 (empty -> .)
    EVAL            reduce using rule 275 (empty -> .)
    INCLUDE         reduce using rule 275 (empty -> .)
    INCLUDE_ONCE    reduce using rule 275 (empty -> .)
    REQUIRE         reduce using rule 275 (empty -> .)
    REQUIRE_ONCE    reduce using rule 275 (empty -> .)
    PRINT           reduce using rule 275 (empty -> .)
    AT              reduce using rule 275 (empty -> .)
    LPAREN          reduce using rule 275 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 275 (empty -> .)
    IDENTIFIER      reduce using rule 275 (empty -> .)
    EXIT            reduce using rule 275 (empty -> .)
    DIE             reduce using rule 275 (empty -> .)
    INT_NUMBER      reduce using rule 275 (empty -> .)
    FLOAT_NUMBER    reduce using rule 275 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 275 (empty -> .)
    FUNC_C          reduce using rule 275 (empty -> .)
    METHOD_C        reduce using rule 275 (empty -> .)
    LINE            reduce using rule 275 (empty -> .)
    FILE            reduce using rule 275 (empty -> .)
    DIR             reduce using rule 275 (empty -> .)
    START_HEREDOC   reduce using rule 275 (empty -> .)
    START_NOWDOC    reduce using rule 275 (empty -> .)
    VARIABLE        reduce using rule 275 (empty -> .)
    DOLLAR          reduce using rule 275 (empty -> .)
    ELSEIF          reduce using rule 275 (empty -> .)
    ELSE            reduce using rule 275 (empty -> .)
    ENDIF           reduce using rule 275 (empty -> .)

    inner_statement_list           shift and go to state 567
    empty                          shift and go to state 87

state 566

    (51) for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .

    ELSE            reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    ELSEIF          reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    HALT_COMPILER   reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    CONST           reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    LBRACE          reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    IF              reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    WHILE           reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    DO              reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    FOR             reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    SWITCH          reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    BREAK           reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    CONTINUE        reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    RETURN          reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    GLOBAL          reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    STATIC          reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    ECHO            reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    INLINE_HTML     reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    UNSET           reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    SEMI_COLON      reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    FUNCTION        reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    CLONE           reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    LIST            reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    ARRAY           reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    LBRACKET        reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    PLUS            reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    MINUS           reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    NOT             reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    INC             reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    DEC             reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    INT_CAST        reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    ARRAY_CAST      reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    STRING_CAST     reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    BOOL_CAST       reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    UNSET_CAST      reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    BINARY_CAST     reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    ISSET           reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    EMPTY           reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    EVAL            reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    INCLUDE         reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    REQUIRE         reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    PRINT           reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    AT              reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    LPAREN          reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    IDENTIFIER      reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    EXIT            reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    DIE             reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    INT_NUMBER      reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    FUNC_C          reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    METHOD_C        reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    LINE            reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    FILE            reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    DIR             reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    START_HEREDOC   reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    START_NOWDOC    reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    VARIABLE        reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    DOLLAR          reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    $end            reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    RBRACE          reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    YIELD           reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    ENDIF           reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    ENDWHILE        reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    ENDSWITCH       reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    ENDFOR          reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    CASE            reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    DEFAULT         reduce using rule 51 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)


state 567

    (41) new_elseif_list -> new_elseif_list ELSEIF LPAREN expr RPAREN COLON inner_statement_list .
    (11) inner_statement_list -> inner_statement_list . inner_statement
    (13) inner_statement -> . statement
    (14) inner_statement -> . function_declaration_statement
    (15) inner_statement -> . YIELD SEMI_COLON
    (16) inner_statement -> . YIELD expr SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list
    (19) statement -> . IF LPAREN expr RPAREN statement elseif_list ELSE statement
    (20) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (21) statement -> . WHILE LPAREN expr RPAREN while_statement
    (22) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (23) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (24) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (25) statement -> . BREAK SEMI_COLON
    (26) statement -> . BREAK expr SEMI_COLON
    (27) statement -> . CONTINUE SEMI_COLON
    (28) statement -> . CONTINUE expr SEMI_COLON
    (29) statement -> . RETURN SEMI_COLON
    (30) statement -> . RETURN expr SEMI_COLON
    (31) statement -> . GLOBAL global_var_list SEMI_COLON
    (32) statement -> . STATIC static_var_list SEMI_COLON
    (33) statement -> . ECHO echo_expr_list SEMI_COLON
    (34) statement -> . INLINE_HTML
    (35) statement -> . expr SEMI_COLON
    (36) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (37) statement -> . SEMI_COLON
    (77) function_declaration_statement -> . FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (88) expr -> . variable
    (89) expr -> . variable EQUALS expr
    (90) expr -> . variable EQUALS AND expr
    (91) expr -> . CLONE expr
    (92) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (105) expr -> . expr LBRACE dim_offset RBRACE
    (111) expr -> . scalar
    (112) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (113) expr -> . LBRACKET array_pair_list RBRACKET
    (127) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (128) expr -> . variable PLUS_EQUAL expr
    (129) expr -> . variable MINUS_EQUAL expr
    (130) expr -> . variable MUL_EQUAL expr
    (131) expr -> . variable DIV_EQUAL expr
    (132) expr -> . variable CONCAT_EQUAL expr
    (133) expr -> . variable MOD_EQUAL expr
    (134) expr -> . variable AND_EQUAL expr
    (135) expr -> . variable OR_EQUAL expr
    (136) expr -> . variable XOR_EQUAL expr
    (137) expr -> . variable SL_EQUAL expr
    (138) expr -> . variable SR_EQUAL expr
    (139) expr -> . expr BOOLEAN_AND expr
    (140) expr -> . expr BOOLEAN_OR expr
    (141) expr -> . expr LOGICAL_AND expr
    (142) expr -> . expr LOGICAL_OR expr
    (143) expr -> . expr LOGICAL_XOR expr
    (144) expr -> . expr AND expr
    (145) expr -> . expr OR expr
    (146) expr -> . expr XOR expr
    (147) expr -> . expr CONCAT expr
    (148) expr -> . expr PLUS expr
    (149) expr -> . expr MINUS expr
    (150) expr -> . expr MUL expr
    (151) expr -> . expr DIV expr
    (152) expr -> . expr SL expr
    (153) expr -> . expr SR expr
    (154) expr -> . expr MOD expr
    (155) expr -> . expr IS_IDENTICAL expr
    (156) expr -> . expr IS_NOT_IDENTICAL expr
    (157) expr -> . expr IS_EQUAL_TO expr
    (158) expr -> . expr IS_NOT_EQUAL expr
    (159) expr -> . expr LESS_THAN expr
    (160) expr -> . expr LESS_THAN_OR_EQUAL expr
    (161) expr -> . expr GREATER_THAN expr
    (162) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (163) expr -> . expr INSTANCEOF expr
    (164) expr -> . expr SPACESHIP expr
    (165) expr -> . expr INSTANCEOF STATIC
    (166) expr -> . PLUS expr
    (167) expr -> . MINUS expr
    (168) expr -> . NOT expr
    (169) expr -> . BOOLEAN_NOT expr
    (170) expr -> . expr QUESTION expr COLON expr
    (171) expr -> . expr QUESTION COLON expr
    (172) expr -> . INC variable
    (173) expr -> . DEC variable
    (174) expr -> . variable INC
    (175) expr -> . variable DEC
    (176) expr -> . INT_CAST expr
    (177) expr -> . ARRAY_CAST expr
    (178) expr -> . STRING_CAST expr
    (179) expr -> . DOUBLE_CAST expr
    (180) expr -> . BOOL_CAST expr
    (181) expr -> . UNSET_CAST expr
    (182) expr -> . BINARY_CAST expr
    (183) expr -> . ISSET LPAREN isset_variables RPAREN
    (186) expr -> . EMPTY LPAREN expr RPAREN
    (187) expr -> . EVAL LPAREN expr RPAREN
    (188) expr -> . INCLUDE expr
    (189) expr -> . INCLUDE_ONCE expr
    (190) expr -> . REQUIRE expr
    (191) expr -> . REQUIRE_ONCE expr
    (194) expr -> . exit_or_die
    (195) expr -> . exit_or_die LPAREN RPAREN
    (196) expr -> . exit_or_die LPAREN expr RPAREN
    (197) expr -> . PRINT expr
    (198) expr -> . AT expr
    (199) expr -> . LPAREN expr RPAREN
    (98) variable -> . base_variable_with_function_calls
    (201) scalar -> . common_scalar
    (202) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (203) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (204) scalar -> . scalar_heredoc
    (205) scalar -> . nowdoc
    (209) scalar -> . IDENTIFIER
    (192) exit_or_die -> . EXIT
    (193) exit_or_die -> . DIE
    (99) base_variable_with_function_calls -> . base_variable
    (100) base_variable_with_function_calls -> . function_call
    (210) common_scalar -> . INT_NUMBER
    (211) common_scalar -> . FLOAT_NUMBER
    (212) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (213) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (214) common_scalar -> . FUNC_C
    (215) common_scalar -> . METHOD_C
    (216) common_scalar -> . LINE
    (217) common_scalar -> . FILE
    (218) common_scalar -> . DIR
    (206) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (200) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (104) base_variable -> . compound_variable
    (101) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . variable_without_objects LPAREN function_call_parameter_list RPAREN
    (106) compound_variable -> . VARIABLE
    (107) compound_variable -> . DOLLAR LBRACE expr RBRACE
    (110) variable_without_objects -> . compound_variable

    ELSEIF          reduce using rule 41 (new_elseif_list -> new_elseif_list ELSEIF LPAREN expr RPAREN COLON inner_statement_list .)
    ELSE            reduce using rule 41 (new_elseif_list -> new_elseif_list ELSEIF LPAREN expr RPAREN COLON inner_statement_list .)
    ENDIF           reduce using rule 41 (new_elseif_list -> new_elseif_list ELSEIF LPAREN expr RPAREN COLON inner_statement_list .)
    YIELD           shift and go to state 207
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    FUNCTION        shift and go to state 26
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    VARIABLE        shift and go to state 78
    DOLLAR          shift and go to state 79

    expr                           shift and go to state 13
    inner_statement                shift and go to state 204
    statement                      shift and go to state 205
    function_declaration_statement shift and go to state 206
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    compound_variable              shift and go to state 76
    variable_without_objects       shift and go to state 77
